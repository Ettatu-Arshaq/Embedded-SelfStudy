

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Oct 06 11:55:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 07/09/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1519 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     000E                     PORTC           equ	14	;# 
    75     000F                     PORTD           equ	15	;# 
    76     0010                     PORTE           equ	16	;# 
    77     0011                     PIR1            equ	17	;# 
    78     0012                     PIR2            equ	18	;# 
    79     0015                     TMR0            equ	21	;# 
    80     0016                     TMR1            equ	22	;# 
    81     0016                     TMR1L           equ	22	;# 
    82     0017                     TMR1H           equ	23	;# 
    83     0018                     T1CON           equ	24	;# 
    84     0019                     T1GCON          equ	25	;# 
    85     001A                     TMR2            equ	26	;# 
    86     001B                     PR2             equ	27	;# 
    87     001C                     T2CON           equ	28	;# 
    88     008C                     TRISA           equ	140	;# 
    89     008D                     TRISB           equ	141	;# 
    90     008E                     TRISC           equ	142	;# 
    91     008F                     TRISD           equ	143	;# 
    92     0090                     TRISE           equ	144	;# 
    93     0091                     PIE1            equ	145	;# 
    94     0092                     PIE2            equ	146	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0099                     OSCCON          equ	153	;# 
    99     009A                     OSCSTAT         equ	154	;# 
   100     009B                     ADRES           equ	155	;# 
   101     009B                     ADRESL          equ	155	;# 
   102     009C                     ADRESH          equ	156	;# 
   103     009D                     ADCON0          equ	157	;# 
   104     009E                     ADCON1          equ	158	;# 
   105     010C                     LATA            equ	268	;# 
   106     010D                     LATB            equ	269	;# 
   107     010E                     LATC            equ	270	;# 
   108     010F                     LATD            equ	271	;# 
   109     0110                     LATE            equ	272	;# 
   110     0116                     BORCON          equ	278	;# 
   111     0117                     FVRCON          equ	279	;# 
   112     011D                     APFCON          equ	285	;# 
   113     018C                     ANSELA          equ	396	;# 
   114     018D                     ANSELB          equ	397	;# 
   115     018E                     ANSELC          equ	398	;# 
   116     018F                     ANSELD          equ	399	;# 
   117     0190                     ANSELE          equ	400	;# 
   118     0191                     PMADR           equ	401	;# 
   119     0191                     PMADRL          equ	401	;# 
   120     0192                     PMADRH          equ	402	;# 
   121     0193                     PMDAT           equ	403	;# 
   122     0193                     PMDATL          equ	403	;# 
   123     0194                     PMDATH          equ	404	;# 
   124     0195                     PMCON1          equ	405	;# 
   125     0196                     PMCON2          equ	406	;# 
   126     0197                     VREGCON         equ	407	;# 
   127     0199                     RCREG           equ	409	;# 
   128     019A                     TXREG           equ	410	;# 
   129     019B                     SP1BRG          equ	411	;# 
   130     019B                     SP1BRGL         equ	411	;# 
   131     019B                     SPBRG           equ	411	;# 
   132     019B                     SPBRGL          equ	411	;# 
   133     019C                     SP1BRGH         equ	412	;# 
   134     019C                     SPBRGH          equ	412	;# 
   135     019D                     RCSTA           equ	413	;# 
   136     019E                     TXSTA           equ	414	;# 
   137     019F                     BAUDCON         equ	415	;# 
   138     020D                     WPUB            equ	525	;# 
   139     0210                     WPUE            equ	528	;# 
   140     0211                     SSPBUF          equ	529	;# 
   141     0211                     SSP1BUF         equ	529	;# 
   142     0212                     SSPADD          equ	530	;# 
   143     0212                     SSP1ADD         equ	530	;# 
   144     0213                     SSPMSK          equ	531	;# 
   145     0213                     SSP1MSK         equ	531	;# 
   146     0214                     SSPSTAT         equ	532	;# 
   147     0214                     SSP1STAT        equ	532	;# 
   148     0215                     SSPCON1         equ	533	;# 
   149     0215                     SSPCON          equ	533	;# 
   150     0215                     SSP1CON1        equ	533	;# 
   151     0216                     SSPCON2         equ	534	;# 
   152     0216                     SSP1CON2        equ	534	;# 
   153     0217                     SSPCON3         equ	535	;# 
   154     0217                     SSP1CON3        equ	535	;# 
   155     0291                     CCPR1           equ	657	;# 
   156     0291                     CCPR1L          equ	657	;# 
   157     0292                     CCPR1H          equ	658	;# 
   158     0293                     CCP1CON         equ	659	;# 
   159     0298                     CCPR2           equ	664	;# 
   160     0298                     CCPR2L          equ	664	;# 
   161     0299                     CCPR2H          equ	665	;# 
   162     029A                     CCP2CON         equ	666	;# 
   163     0394                     IOCBP           equ	916	;# 
   164     0395                     IOCBN           equ	917	;# 
   165     0396                     IOCBF           equ	918	;# 
   166     0FE4                     STATUS_SHAD     equ	4068	;# 
   167     0FE5                     WREG_SHAD       equ	4069	;# 
   168     0FE6                     BSR_SHAD        equ	4070	;# 
   169     0FE7                     PCLATH_SHAD     equ	4071	;# 
   170     0FE8                     FSR0L_SHAD      equ	4072	;# 
   171     0FE9                     FSR0H_SHAD      equ	4073	;# 
   172     0FEA                     FSR1L_SHAD      equ	4074	;# 
   173     0FEB                     FSR1H_SHAD      equ	4075	;# 
   174     0FED                     STKPTR          equ	4077	;# 
   175     0FEE                     TOSL            equ	4078	;# 
   176     0FEF                     TOSH            equ	4079	;# 
   177     0015                     _TMR0           set	21
   178     000B                     _INTCONbits     set	11
   179     005A                     _TMR0IF         set	90
   180     0095                     _OPTION_REGbits set	149
   181     0099                     _OSCCONbits     set	153
   182     008C                     _TRISA          set	140
   183     010C                     _LATAbits       set	268
   184     018C                     _ANSELA         set	396
   185                           
   186                           	psect	cinit
   187     0018                     start_initialization:	
   188                           ; #config settings
   189                           
   190     0018                     __initialization:
   191                           
   192                           ; Clear objects allocated to BANK0
   193     0018  0020               	movlb	0	; select bank0
   194     0019  01A0               	clrf	__pbssBANK0& (0+127)
   195     001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   196     001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   197     001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   198     001D                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     001D                     __end_of__initialization:
   202     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   203     001E  0020               	movlb	0
   204     001F  3180  2821         	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207     0020                     __pbssBANK0:
   208     0020                     _ms_tick:
   209     0020                     	ds	4
   210                           
   211                           	psect	cstackCOMMON
   212     0070                     __pcstackCOMMON:
   213     0070                     ?_main:
   214     0070                     ?_ISR:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ??_ISR:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225     0070                     	ds	4
   226     0074                     main@last_toggle1:
   227                           
   228                           ; 4 bytes @ 0x4
   229     0074                     	ds	4
   230     0078                     main@last_toggle2:
   231                           
   232                           ; 4 bytes @ 0x8
   233     0078                     	ds	4
   234                           
   235                           	psect	maintext
   236     0021                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 35 in file "newmain.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  last_toggle2    4    8[COMMON] unsigned long 
   247 ;;  last_toggle1    4    4[COMMON] unsigned long 
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0
   252 ;; Tracked objects:
   253 ;;		On entry : B1F/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   258 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   260 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   261 ;;Total ram usage:       12 bytes
   262 ;; Hardware stack levels required when called: 1
   263 ;; This function calls:
   264 ;;		Nothing
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270     0021                     _main:	
   271                           ;psect for function _main
   272                           
   273     0021                     l608:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [wreg+status,2+status,0]
   276                           
   277                           
   278                           ;newmain.c: 36:     ANSELA=0;
   279     0021  0023               	movlb	3	; select bank3
   280     0022  018C               	clrf	12	;volatile
   281                           
   282                           ;newmain.c: 37:     TRISA=0;
   283     0023  0021               	movlb	1	; select bank1
   284     0024  018C               	clrf	12	;volatile
   285     0025                     l610:
   286                           
   287                           ;newmain.c: 38:     LATAbits.LATA0=1;
   288     0025  0022               	movlb	2	; select bank2
   289     0026  140C               	bsf	12,0	;volatile
   290     0027                     l612:
   291                           
   292                           ;newmain.c: 39:     LATAbits.LATA1=1;
   293     0027  148C               	bsf	12,1	;volatile
   294     0028                     l614:
   295                           
   296                           ;newmain.c: 40:     OSCCONbits.IRCF = 0b1101;
   297     0028  0021               	movlb	1	; select bank1
   298     0029  0819               	movf	25,w	;volatile
   299     002A  3987               	andlw	-121
   300     002B  3868               	iorlw	104
   301     002C  0099               	movwf	25	;volatile
   302     002D                     l616:
   303                           
   304                           ;newmain.c: 41:     OSCCONbits.SCS = 0b10;
   305     002D  0819               	movf	25,w	;volatile
   306     002E  39FC               	andlw	-4
   307     002F  3802               	iorlw	2
   308     0030  0099               	movwf	25	;volatile
   309     0031                     l618:
   310                           
   311                           ;newmain.c: 42:     OPTION_REGbits.T0CS=0;
   312     0031  1295               	bcf	21,5	;volatile
   313     0032                     l620:
   314                           
   315                           ;newmain.c: 43:     OPTION_REGbits.PSA=0;
   316     0032  1195               	bcf	21,3	;volatile
   317     0033                     l622:
   318                           
   319                           ;newmain.c: 44:     OPTION_REGbits.PS=0b010;
   320     0033  0815               	movf	21,w	;volatile
   321     0034  39F8               	andlw	-8
   322     0035  3802               	iorlw	2
   323     0036  0095               	movwf	21	;volatile
   324     0037                     l624:
   325                           
   326                           ;newmain.c: 45:     INTCONbits.TMR0IF=0;
   327     0037  110B               	bcf	11,2	;volatile
   328     0038                     l626:
   329                           
   330                           ;newmain.c: 46:     INTCONbits.GIE=1;
   331     0038  178B               	bsf	11,7	;volatile
   332     0039                     l628:
   333                           
   334                           ;newmain.c: 47:     INTCONbits.TMR0IE=1;
   335     0039  168B               	bsf	11,5	;volatile
   336     003A                     l630:
   337                           
   338                           ;newmain.c: 48:     INTCONbits.PEIE=1;
   339     003A  170B               	bsf	11,6	;volatile
   340     003B                     l632:
   341                           
   342                           ;newmain.c: 49:     TMR0=131;
   343     003B  3083               	movlw	131
   344     003C  0020               	movlb	0	; select bank0
   345     003D  0095               	movwf	21	;volatile
   346     003E                     l634:
   347                           
   348                           ;newmain.c: 50:     unsigned long last_toggle1=0;
   349     003E  3000               	movlw	0
   350     003F  00F7               	movwf	main@last_toggle1+3
   351     0040  3000               	movlw	0
   352     0041  00F6               	movwf	main@last_toggle1+2
   353     0042  3000               	movlw	0
   354     0043  00F5               	movwf	main@last_toggle1+1
   355     0044  3000               	movlw	0
   356     0045  00F4               	movwf	main@last_toggle1
   357     0046                     l636:
   358                           
   359                           ;newmain.c: 51:     unsigned long last_toggle2=0;
   360     0046  3000               	movlw	0
   361     0047  00FB               	movwf	main@last_toggle2+3
   362     0048  3000               	movlw	0
   363     0049  00FA               	movwf	main@last_toggle2+2
   364     004A  3000               	movlw	0
   365     004B  00F9               	movwf	main@last_toggle2+1
   366     004C  3000               	movlw	0
   367     004D  00F8               	movwf	main@last_toggle2
   368     004E                     l638:
   369                           
   370                           ;newmain.c: 53:         if (ms_tick-last_toggle1>500){
   371     004E  0874               	movf	main@last_toggle1,w
   372     004F  0020               	movlb	0	; select bank0
   373     0050  0220               	subwf	_ms_tick,w	;volatile
   374     0051  00F0               	movwf	??_main
   375     0052  0875               	movf	main@last_toggle1+1,w
   376     0053  3B21               	subwfb	_ms_tick+1,w	;volatile
   377     0054  00F1               	movwf	??_main+1
   378     0055  0876               	movf	main@last_toggle1+2,w
   379     0056  3B22               	subwfb	_ms_tick+2,w	;volatile
   380     0057  00F2               	movwf	??_main+2
   381     0058  0877               	movf	main@last_toggle1+3,w
   382     0059  3B23               	subwfb	_ms_tick+3,w	;volatile
   383     005A  00F3               	movwf	??_main+3
   384     005B  0873               	movf	??_main+3,w
   385     005C  1D03               	btfss	3,2
   386     005D  2869               	goto	u80
   387     005E  0872               	movf	??_main+2,w
   388     005F  1D03               	btfss	3,2
   389     0060  2869               	goto	u80
   390     0061  30F5               	movlw	245
   391     0062  0270               	subwf	??_main,w
   392     0063  3001               	movlw	1
   393     0064  3B71               	subwfb	??_main+1,w
   394     0065  1C03               	btfss	3,0
   395     0066  2868               	goto	u81
   396     0067  2869               	goto	u80
   397     0068                     u81:
   398     0068  287E               	goto	l644
   399     0069                     u80:
   400     0069                     l640:
   401                           
   402                           ;newmain.c: 54:             LATAbits.LATA0=~LATAbits.LATA0;
   403     0069  1003               	clrc
   404     006A  0022               	movlb	2	; select bank2
   405     006B  1C0C               	btfss	12,0	;volatile
   406     006C  1403               	setc
   407     006D  1803               	btfsc	3,0
   408     006E  2870               	goto	u91
   409     006F  2873               	goto	u90
   410     0070                     u91:
   411     0070  0022               	movlb	2	; select bank2
   412     0071  140C               	bsf	12,0	;volatile
   413     0072  2875               	goto	u104
   414     0073                     u90:
   415     0073  0022               	movlb	2	; select bank2
   416     0074  100C               	bcf	12,0	;volatile
   417     0075                     u104:
   418     0075                     l642:
   419                           
   420                           ;newmain.c: 55:             last_toggle1=ms_tick;
   421     0075  0020               	movlb	0	; select bank0
   422     0076  0823               	movf	_ms_tick+3,w	;volatile
   423     0077  00F7               	movwf	main@last_toggle1+3
   424     0078  0822               	movf	_ms_tick+2,w	;volatile
   425     0079  00F6               	movwf	main@last_toggle1+2
   426     007A  0821               	movf	_ms_tick+1,w	;volatile
   427     007B  00F5               	movwf	main@last_toggle1+1
   428     007C  0820               	movf	_ms_tick,w	;volatile
   429     007D  00F4               	movwf	main@last_toggle1
   430     007E                     l644:
   431                           
   432                           ;newmain.c: 57:         if (ms_tick-last_toggle2>200){
   433     007E  0878               	movf	main@last_toggle2,w
   434     007F  0020               	movlb	0	; select bank0
   435     0080  0220               	subwf	_ms_tick,w	;volatile
   436     0081  00F0               	movwf	??_main
   437     0082  0879               	movf	main@last_toggle2+1,w
   438     0083  3B21               	subwfb	_ms_tick+1,w	;volatile
   439     0084  00F1               	movwf	??_main+1
   440     0085  087A               	movf	main@last_toggle2+2,w
   441     0086  3B22               	subwfb	_ms_tick+2,w	;volatile
   442     0087  00F2               	movwf	??_main+2
   443     0088  087B               	movf	main@last_toggle2+3,w
   444     0089  3B23               	subwfb	_ms_tick+3,w	;volatile
   445     008A  00F3               	movwf	??_main+3
   446     008B  0873               	movf	??_main+3,w
   447     008C  1D03               	btfss	3,2
   448     008D  289A               	goto	u110
   449     008E  0872               	movf	??_main+2,w
   450     008F  1D03               	btfss	3,2
   451     0090  289A               	goto	u110
   452     0091  0871               	movf	??_main+1,w
   453     0092  1D03               	btfss	3,2
   454     0093  289A               	goto	u110
   455     0094  30C9               	movlw	201
   456     0095  0270               	subwf	??_main,w
   457     0096  1C03               	btfss	3,0
   458     0097  2899               	goto	u111
   459     0098  289A               	goto	u110
   460     0099                     u111:
   461     0099  284E               	goto	l638
   462     009A                     u110:
   463     009A                     l646:
   464                           
   465                           ;newmain.c: 58:             LATAbits.LATA1=~LATAbits.LATA1;
   466     009A  1003               	clrc
   467     009B  0022               	movlb	2	; select bank2
   468     009C  1C8C               	btfss	12,1	;volatile
   469     009D  1403               	setc
   470     009E  1803               	btfsc	3,0
   471     009F  28A1               	goto	u121
   472     00A0  28A4               	goto	u120
   473     00A1                     u121:
   474     00A1  0022               	movlb	2	; select bank2
   475     00A2  148C               	bsf	12,1	;volatile
   476     00A3  28A6               	goto	u134
   477     00A4                     u120:
   478     00A4  0022               	movlb	2	; select bank2
   479     00A5  108C               	bcf	12,1	;volatile
   480     00A6                     u134:
   481     00A6                     l648:
   482                           
   483                           ;newmain.c: 59:             last_toggle2=ms_tick;
   484     00A6  0020               	movlb	0	; select bank0
   485     00A7  0823               	movf	_ms_tick+3,w	;volatile
   486     00A8  00FB               	movwf	main@last_toggle2+3
   487     00A9  0822               	movf	_ms_tick+2,w	;volatile
   488     00AA  00FA               	movwf	main@last_toggle2+2
   489     00AB  0821               	movf	_ms_tick+1,w	;volatile
   490     00AC  00F9               	movwf	main@last_toggle2+1
   491     00AD  0820               	movf	_ms_tick,w	;volatile
   492     00AE  00F8               	movwf	main@last_toggle2
   493     00AF  284E               	goto	l638
   494     00B0  3180  2816         	ljmp	start
   495     00B2                     __end_of_main:
   496                           
   497                           	psect	intentry
   498     0004                     __pintentry:	
   499 ;; *************** function _ISR *****************
   500 ;; Defined at:
   501 ;;		line 63 in file "newmain.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		Interrupt level 1
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528     0004                     _ISR:
   529                           
   530                           ;incstack = 0
   531     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   532                           
   533                           ; Regs used in _ISR: [wreg+status,2+status,0]
   534     0005  3180               	pagesel	$
   535     0006                     i1l650:
   536                           
   537                           ;newmain.c: 64:     if (TMR0IF){
   538     0006  1D0B               	btfss	11,2	;volatile
   539     0007  2809               	goto	u14_21
   540     0008  280A               	goto	u14_20
   541     0009                     u14_21:
   542     0009  2814               	goto	i1l34
   543     000A                     u14_20:
   544     000A                     i1l652:
   545                           
   546                           ;newmain.c: 66:         TMR0IF=0;
   547     000A  110B               	bcf	11,2	;volatile
   548                           
   549                           ;newmain.c: 67:         TMR0=131;
   550     000B  3083               	movlw	131
   551     000C  0020               	movlb	0	; select bank0
   552     000D  0095               	movwf	21	;volatile
   553     000E                     i1l654:
   554                           
   555                           ;newmain.c: 68:         ms_tick++;
   556     000E  3001               	movlw	1
   557     000F  07A0               	addwf	_ms_tick,f	;volatile
   558     0010  3000               	movlw	0
   559     0011  3DA1               	addwfc	_ms_tick+1,f	;volatile
   560     0012  3DA2               	addwfc	_ms_tick+2,f	;volatile
   561     0013  3DA3               	addwfc	_ms_tick+3,f	;volatile
   562     0014                     i1l34:
   563     0014  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   564     0015  0009               	retfie
   565     0016                     __end_of_ISR:
   566     0003                     ___latbits      equ	3
   567     007E                     btemp           set	126	;btemp
   568     007E                     int$flags       set	126
   569     007E                     wtemp0          set	126
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG1 @ 0x8007
   574                           ;	Oscillator Selection
   575                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   576                           ;	Watchdog Timer Enable
   577                           ;	WDTE = ON, WDT enabled
   578                           ;	Power-up Timer Enable
   579                           ;	PWRTE = OFF, PWRT disabled
   580                           ;	MCLR Pin Function Select
   581                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   582                           ;	Flash Program Memory Code Protection
   583                           ;	CP = OFF, Program memory code protection is disabled
   584                           ;	Brown-out Reset Enable
   585                           ;	BOREN = OFF, Brown-out Reset disabled
   586                           ;	Clock Out Enable
   587                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   588                           ;	Internal/External Switchover
   589                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   590                           ;	Fail-Safe Clock Monitor Enable
   591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   592     8007                     	org	32775
   593     8007  09FC               	dw	2556
   594                           
   595                           ;Config register CONFIG2 @ 0x8008
   596                           ;	Flash Memory Self-Write Protection
   597                           ;	WRT = OFF, Write protection off
   598                           ;	Voltage Regulator Capacitor Enable bit
   599                           ;	VCAPEN = OFF, VCAP pin function disabled
   600                           ;	Stack Overflow/Underflow Reset Enable
   601                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   602                           ;	Brown-out Reset Voltage Selection
   603                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   604                           ;	Low-Power Brown Out Reset
   605                           ;	LPBOR = OFF, Low-Power BOR is disabled
   606                           ;	Low-Voltage Programming Enable
   607                           ;	LVP = ON, Low-voltage programming enabled
   608     8008                     	org	32776
   609     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0      48
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     12      12     85.7%
BANK0               80      0       4      5.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      16      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Oct 06 11:55:03 2025

                     u80 0069                       u81 0068                       u90 0073  
                     u91 0070                      l610 0025                      l620 0032  
                    l612 0027                      l630 003A                      l622 0033  
                    l614 0028                      l640 0069                      l632 003B  
                    l624 0037                      l616 002D                      l608 0021  
                    l642 0075                      l634 003E                      l626 0038  
                    l618 0031                      l644 007E                      l636 0046  
                    l628 0039                      l646 009A                      l638 004E  
                    l648 00A6                      u110 009A                      u111 0099  
                    u120 00A4                      u104 0075                      u121 00A1  
                    u134 00A6                      _ISR 0004                     ?_ISR 0070  
                   i1l34 0014                     _TMR0 0015                     _main 0021  
                   btemp 007E                     start 0016                    ??_ISR 0070  
                  ?_main 0070                    i1l650 0006                    i1l652 000A  
                  i1l654 000E                    u14_20 000A                    u14_21 0009  
                  _TRISA 008C                    status 0003                    wtemp0 007E  
        __initialization 0018             __end_of_main 00B2                   ??_main 0070  
                 _ANSELA 018C                   _TMR0IF 005A  __end_of__initialization 001D  
         __pcstackCOMMON 0070           _OPTION_REGbits 0095               __pbssBANK0 0020  
             __pmaintext 0021               __pintentry 0004                  _ms_tick 0020  
   end_of_initialization 001D         main@last_toggle1 0074         main@last_toggle2 0078  
    start_initialization 0018              __end_of_ISR 0016                ___latbits 0003  
               _LATAbits 010C                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 0099  
