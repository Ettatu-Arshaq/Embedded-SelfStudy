

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Oct 27 11:28:48 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 07/09/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1519 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0008                     bsr             equ	8
    48     0005                     fsr0h           equ	5
    49     0004                     fsr0l           equ	4
    50     0007                     fsr1h           equ	7
    51     0006                     fsr1l           equ	6
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0001                     indf1           equ	1
    55     000B                     intcon          equ	11
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0009                     wreg            equ	9
    61     0000                     INDF0           equ	0	;# 
    62     0001                     INDF1           equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR0L           equ	4	;# 
    66     0005                     FSR0H           equ	5	;# 
    67     0006                     FSR1L           equ	6	;# 
    68     0007                     FSR1H           equ	7	;# 
    69     0008                     BSR             equ	8	;# 
    70     0009                     WREG            equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PORTA           equ	12	;# 
    74     000D                     PORTB           equ	13	;# 
    75     000E                     PORTC           equ	14	;# 
    76     000F                     PORTD           equ	15	;# 
    77     0010                     PORTE           equ	16	;# 
    78     0011                     PIR1            equ	17	;# 
    79     0012                     PIR2            equ	18	;# 
    80     0015                     TMR0            equ	21	;# 
    81     0016                     TMR1            equ	22	;# 
    82     0016                     TMR1L           equ	22	;# 
    83     0017                     TMR1H           equ	23	;# 
    84     0018                     T1CON           equ	24	;# 
    85     0019                     T1GCON          equ	25	;# 
    86     001A                     TMR2            equ	26	;# 
    87     001B                     PR2             equ	27	;# 
    88     001C                     T2CON           equ	28	;# 
    89     008C                     TRISA           equ	140	;# 
    90     008D                     TRISB           equ	141	;# 
    91     008E                     TRISC           equ	142	;# 
    92     008F                     TRISD           equ	143	;# 
    93     0090                     TRISE           equ	144	;# 
    94     0091                     PIE1            equ	145	;# 
    95     0092                     PIE2            equ	146	;# 
    96     0095                     OPTION_REG      equ	149	;# 
    97     0096                     PCON            equ	150	;# 
    98     0097                     WDTCON          equ	151	;# 
    99     0099                     OSCCON          equ	153	;# 
   100     009A                     OSCSTAT         equ	154	;# 
   101     009B                     ADRES           equ	155	;# 
   102     009B                     ADRESL          equ	155	;# 
   103     009C                     ADRESH          equ	156	;# 
   104     009D                     ADCON0          equ	157	;# 
   105     009E                     ADCON1          equ	158	;# 
   106     010C                     LATA            equ	268	;# 
   107     010D                     LATB            equ	269	;# 
   108     010E                     LATC            equ	270	;# 
   109     010F                     LATD            equ	271	;# 
   110     0110                     LATE            equ	272	;# 
   111     0116                     BORCON          equ	278	;# 
   112     0117                     FVRCON          equ	279	;# 
   113     011D                     APFCON          equ	285	;# 
   114     018C                     ANSELA          equ	396	;# 
   115     018D                     ANSELB          equ	397	;# 
   116     018E                     ANSELC          equ	398	;# 
   117     018F                     ANSELD          equ	399	;# 
   118     0190                     ANSELE          equ	400	;# 
   119     0191                     PMADR           equ	401	;# 
   120     0191                     PMADRL          equ	401	;# 
   121     0192                     PMADRH          equ	402	;# 
   122     0193                     PMDAT           equ	403	;# 
   123     0193                     PMDATL          equ	403	;# 
   124     0194                     PMDATH          equ	404	;# 
   125     0195                     PMCON1          equ	405	;# 
   126     0196                     PMCON2          equ	406	;# 
   127     0197                     VREGCON         equ	407	;# 
   128     0199                     RCREG           equ	409	;# 
   129     019A                     TXREG           equ	410	;# 
   130     019B                     SP1BRG          equ	411	;# 
   131     019B                     SP1BRGL         equ	411	;# 
   132     019B                     SPBRG           equ	411	;# 
   133     019B                     SPBRGL          equ	411	;# 
   134     019C                     SP1BRGH         equ	412	;# 
   135     019C                     SPBRGH          equ	412	;# 
   136     019D                     RCSTA           equ	413	;# 
   137     019E                     TXSTA           equ	414	;# 
   138     019F                     BAUDCON         equ	415	;# 
   139     020D                     WPUB            equ	525	;# 
   140     0210                     WPUE            equ	528	;# 
   141     0211                     SSPBUF          equ	529	;# 
   142     0211                     SSP1BUF         equ	529	;# 
   143     0212                     SSPADD          equ	530	;# 
   144     0212                     SSP1ADD         equ	530	;# 
   145     0213                     SSPMSK          equ	531	;# 
   146     0213                     SSP1MSK         equ	531	;# 
   147     0214                     SSPSTAT         equ	532	;# 
   148     0214                     SSP1STAT        equ	532	;# 
   149     0215                     SSPCON1         equ	533	;# 
   150     0215                     SSPCON          equ	533	;# 
   151     0215                     SSP1CON1        equ	533	;# 
   152     0216                     SSPCON2         equ	534	;# 
   153     0216                     SSP1CON2        equ	534	;# 
   154     0217                     SSPCON3         equ	535	;# 
   155     0217                     SSP1CON3        equ	535	;# 
   156     0291                     CCPR1           equ	657	;# 
   157     0291                     CCPR1L          equ	657	;# 
   158     0292                     CCPR1H          equ	658	;# 
   159     0293                     CCP1CON         equ	659	;# 
   160     0298                     CCPR2           equ	664	;# 
   161     0298                     CCPR2L          equ	664	;# 
   162     0299                     CCPR2H          equ	665	;# 
   163     029A                     CCP2CON         equ	666	;# 
   164     0394                     IOCBP           equ	916	;# 
   165     0395                     IOCBN           equ	917	;# 
   166     0396                     IOCBF           equ	918	;# 
   167     0FE4                     STATUS_SHAD     equ	4068	;# 
   168     0FE5                     WREG_SHAD       equ	4069	;# 
   169     0FE6                     BSR_SHAD        equ	4070	;# 
   170     0FE7                     PCLATH_SHAD     equ	4071	;# 
   171     0FE8                     FSR0L_SHAD      equ	4072	;# 
   172     0FE9                     FSR0H_SHAD      equ	4073	;# 
   173     0FEA                     FSR1L_SHAD      equ	4074	;# 
   174     0FEB                     FSR1H_SHAD      equ	4075	;# 
   175     0FED                     STKPTR          equ	4077	;# 
   176     0FEE                     TOSL            equ	4078	;# 
   177     0FEF                     TOSH            equ	4079	;# 
   178     001A                     _TMR2           set	26
   179     001B                     _PR2            set	27
   180     001C                     _T2CON          set	28
   181     0011                     _PIR1bits       set	17
   182     000B                     _INTCONbits     set	11
   183     008C                     _TRISAbits      set	140
   184     0091                     _PIE1bits       set	145
   185     0099                     _OSCCON         set	153
   186     010C                     _LATAbits       set	268
   187     018C                     _ANSELAbits     set	396
   188                           
   189                           	psect	cinit
   190     002A                     start_initialization:	
   191                           ; #config settings
   192                           
   193     002A                     __initialization:
   194                           
   195                           ; Clear objects allocated to COMMON
   196     002A  01F0               	clrf	__pbssCOMMON& (0+127)
   197     002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   198     002C                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     002C                     __end_of__initialization:
   202     002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   203     002D  0020               	movlb	0
   204     002E  3180  283E         	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMMON
   207     0070                     __pbssCOMMON:
   208     0070                     _intr:
   209     0070                     	ds	2
   210                           
   211                           	psect	cstackCOMMON
   212     0000                     __pcstackCOMMON:
   213     0000                     ?_init_timer2:
   214     0000                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0000                     ?_isr:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0000                     ??_init_timer2:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0000                     ??_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0000                     ??_isr:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           	psect	maintext
   231     003E                     __pmaintext:	
   232                           ; 1 bytes @ 0x0
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 31 in file "newmain.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B1F/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 2
   258 ;; This function calls:
   259 ;;		_init_timer2
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     003E                     _main:	
   266                           ;psect for function _main
   267                           
   268     003E                     l570:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   271                           
   272                           
   273                           ;newmain.c: 33:     ANSELAbits.ANSA0=0;
   274     003E  0023               	movlb	3	; select bank3
   275     003F  100C               	bcf	12,0	;volatile
   276                           
   277                           ;newmain.c: 34:     TRISAbits.TRISA0=0;
   278     0040  0021               	movlb	1	; select bank1
   279     0041  100C               	bcf	12,0	;volatile
   280                           
   281                           ;newmain.c: 35:     LATAbits.LATA0=0;
   282     0042  0022               	movlb	2	; select bank2
   283     0043  100C               	bcf	12,0	;volatile
   284     0044                     l572:
   285                           
   286                           ;newmain.c: 36:     init_timer2();
   287     0044  3180  2030  3180   	fcall	_init_timer2
   288     0047                     l30:	
   289                           ;newmain.c: 38:     while(1);
   290                           
   291     0047                     l31:
   292     0047  2847               	goto	l30
   293     0048  3180  2828         	ljmp	start
   294     004A                     __end_of_main:
   295                           
   296                           	psect	text1
   297     0030                     __ptext1:	
   298 ;; *************** function _init_timer2 *****************
   299 ;; Defined at:
   300 ;;		line 21 in file "newmain.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		status,2
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; Hardware stack levels required when called: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     0030                     _init_timer2:	
   329                           ;psect for function _init_timer2
   330                           
   331     0030                     l566:	
   332                           ;incstack = 0
   333                           ; Regs used in _init_timer2: [status,2]
   334                           
   335                           
   336                           ;newmain.c: 22:     OSCCON=0x6A;
   337     0030  306A               	movlw	106
   338     0031  0021               	movlb	1	; select bank1
   339     0032  0099               	movwf	25	;volatile
   340                           
   341                           ;newmain.c: 23:     INTCONbits.GIE=1;
   342     0033  178B               	bsf	11,7	;volatile
   343                           
   344                           ;newmain.c: 24:     INTCONbits.PEIE=1;
   345     0034  170B               	bsf	11,6	;volatile
   346                           
   347                           ;newmain.c: 25:     PIE1bits.TMR2IE=1;
   348     0035  1491               	bsf	17,1	;volatile
   349                           
   350                           ;newmain.c: 26:     PIR1bits.TMR2IF=0;
   351     0036  0020               	movlb	0	; select bank0
   352     0037  1091               	bcf	17,1	;volatile
   353                           
   354                           ;newmain.c: 27:     T2CON=0x7E;
   355     0038  307E               	movlw	126
   356     0039  009C               	movwf	28	;volatile
   357                           
   358                           ;newmain.c: 28:     PR2=255;
   359     003A  30FF               	movlw	255
   360     003B  009B               	movwf	27	;volatile
   361     003C                     l568:
   362                           
   363                           ;newmain.c: 29:     TMR2=0;
   364     003C  019A               	clrf	26	;volatile
   365     003D                     l25:
   366     003D  0008               	return
   367     003E                     __end_of_init_timer2:
   368                           
   369                           	psect	intentry
   370     0004                     __pintentry:	
   371 ;; *************** function _isr *****************
   372 ;; Defined at:
   373 ;;		line 41 in file "newmain.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		Interrupt level 1
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400     0004                     _isr:
   401                           
   402                           ;incstack = 0
   403     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   404                           
   405                           ; Regs used in _isr: [wreg+status,2+status,0]
   406     0005  3180               	pagesel	$
   407     0006                     i1l574:
   408                           
   409                           ;newmain.c: 43:     if(PIR1bits.TMR2IF==1)
   410     0006  0020               	movlb	0	; select bank0
   411     0007  1C91               	btfss	17,1	;volatile
   412     0008  280A               	goto	u1_21
   413     0009  280B               	goto	u1_20
   414     000A                     u1_21:
   415     000A  2826               	goto	i1l40
   416     000B                     u1_20:
   417     000B                     i1l576:
   418                           
   419                           ;newmain.c: 44:         {;newmain.c: 45:         TMR2=0;
   420     000B  019A               	clrf	26	;volatile
   421     000C                     i1l578:
   422                           
   423                           ;newmain.c: 46:         intr +=1;
   424     000C  3001               	movlw	1
   425     000D  07F0               	addwf	_intr,f	;volatile
   426     000E  3000               	movlw	0
   427     000F  3DF1               	addwfc	_intr+1,f	;volatile
   428     0010                     i1l580:
   429                           
   430                           ;newmain.c: 47:         PIR1bits.TMR2IF=0;
   431     0010  1091               	bcf	17,1	;volatile
   432     0011                     i1l582:
   433                           
   434                           ;newmain.c: 48:         if(intr==15)
   435     0011  300F               	movlw	15
   436     0012  0670               	xorwf	_intr,w	;volatile
   437     0013  0471               	iorwf	_intr+1,w	;volatile
   438     0014  1D03               	btfss	3,2
   439     0015  2817               	goto	u2_21
   440     0016  2818               	goto	u2_20
   441     0017                     u2_21:
   442     0017  2826               	goto	i1l40
   443     0018                     u2_20:
   444     0018                     i1l584:
   445                           
   446                           ;newmain.c: 50:         {;newmain.c: 52:             LATAbits.LATA0=~LATAbits.LATA0;
   447     0018  1003               	clrc
   448     0019  0022               	movlb	2	; select bank2
   449     001A  1C0C               	btfss	12,0	;volatile
   450     001B  1403               	setc
   451     001C  1803               	btfsc	3,0
   452     001D  281F               	goto	u3_21
   453     001E  2822               	goto	u3_20
   454     001F                     u3_21:
   455     001F  0022               	movlb	2	; select bank2
   456     0020  140C               	bsf	12,0	;volatile
   457     0021  2824               	goto	u4_24
   458     0022                     u3_20:
   459     0022  0022               	movlb	2	; select bank2
   460     0023  100C               	bcf	12,0	;volatile
   461     0024                     u4_24:
   462     0024                     i1l586:
   463                           
   464                           ;newmain.c: 53:             intr=0;
   465     0024  01F0               	clrf	_intr	;volatile
   466     0025  01F1               	clrf	_intr+1	;volatile
   467     0026                     i1l40:
   468     0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   469     0027  0009               	retfie
   470     0028                     __end_of_isr:
   471     0003                     ___latbits      equ	3
   472     007E                     btemp           set	126	;btemp
   473     007E                     int$flags       set	126
   474     007E                     wtemp0          set	126
   475                           
   476                           	psect	config
   477                           
   478                           ;Config register CONFIG1 @ 0x8007
   479                           ;	Oscillator Selection
   480                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   481                           ;	Watchdog Timer Enable
   482                           ;	WDTE = OFF, WDT disabled
   483                           ;	Power-up Timer Enable
   484                           ;	PWRTE = OFF, PWRT disabled
   485                           ;	MCLR Pin Function Select
   486                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   487                           ;	Flash Program Memory Code Protection
   488                           ;	CP = OFF, Program memory code protection is disabled
   489                           ;	Brown-out Reset Enable
   490                           ;	BOREN = OFF, Brown-out Reset disabled
   491                           ;	Clock Out Enable
   492                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   493                           ;	Internal/External Switchover
   494                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   495                           ;	Fail-Safe Clock Monitor Enable
   496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   497     8007                     	org	32775
   498     8007  09E4               	dw	2532
   499                           
   500                           ;Config register CONFIG2 @ 0x8008
   501                           ;	Flash Memory Self-Write Protection
   502                           ;	WRT = OFF, Write protection off
   503                           ;	Voltage Regulator Capacitor Enable bit
   504                           ;	VCAPEN = OFF, VCAP pin function disabled
   505                           ;	Stack Overflow/Underflow Reset Enable
   506                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   507                           ;	Brown-out Reset Voltage Selection
   508                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   509                           ;	Low-Power Brown Out Reset
   510                           ;	LPBOR = OFF, Low-Power BOR is disabled
   511                           ;	Low-Voltage Programming Enable
   512                           ;	LVP = ON, Low-voltage programming enabled
   513     8008                     	org	32776
   514     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer2

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      0       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Oct 27 11:28:48 2025

                     l30 0047                       l31 0047                       l25 003D  
                    l570 003E                      l572 0044                      l566 0030  
                    l568 003C                      _PR2 001B                      _isr 0004  
                   ?_isr 0000                     i1l40 0026                     _TMR2 001A  
                   u1_20 000B                     u1_21 000A                     u2_20 0018  
                   u2_21 0017                     u3_20 0022                     u3_21 001F  
                   u4_24 0024                     _main 003E                     _intr 0070  
                   btemp 007E                     start 0028                    ??_isr 0000  
                  ?_main 0000                    _T2CON 001C                    i1l580 0010  
                  i1l582 0011                    i1l574 0006                    i1l584 0018  
                  i1l576 000B                    i1l586 0024                    i1l578 000C  
           ?_init_timer2 0000                    status 0003                    wtemp0 007E  
        __initialization 002A             __end_of_main 004A                   ??_main 0000  
                 _OSCCON 0099  __end_of__initialization 002C           __pcstackCOMMON 0000  
             __pmaintext 003E               __pintentry 0004                  __ptext1 0030  
   end_of_initialization 002C                _TRISAbits 008C      start_initialization 002A  
            __end_of_isr 0028            ??_init_timer2 0000              __pbssCOMMON 0070  
              ___latbits 0003      __end_of_init_timer2 003E                 _LATAbits 010C  
               _PIE1bits 0091                 _PIR1bits 0011               _ANSELAbits 018C  
            _init_timer2 0030                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000  
