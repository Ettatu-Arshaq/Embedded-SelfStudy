

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Oct 25 10:38:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     0091                     SSPCON2         equ	145	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0098                     TXSTA           equ	152	;# 
   102     0099                     SPBRG           equ	153	;# 
   103     009C                     CMCON           equ	156	;# 
   104     009D                     CVRCON          equ	157	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009C                     CMCON           equ	156	;# 
   164     009D                     CVRCON          equ	157	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0006                     _PORTB          set	6
   174     000B                     _INTCONbits     set	11
   175     0086                     _TRISB          set	134
   176     010C                     _EEDATA         set	268
   177     010D                     _EEADR          set	269
   178     018D                     _EECON2         set	397
   179     018C                     _EECON1bits     set	396
   180                           
   181                           	psect	cinit
   182     07FC                     start_initialization:	
   183                           ; #config settings
   184                           
   185     07FC                     __initialization:
   186     07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     07FC                     __end_of__initialization:
   190     07FC  0183               	clrf	3
   191     07FD  120A  118A  2FD9   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	cstackCOMMON
   194     0070                     __pcstackCOMMON:
   195     0070                     ?_eep_write:
   196     0070                     ?_eep_read:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     eep_write@data:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     eep_read@addr:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_eep_read:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213     0070                     	ds	1
   214     0071                     eep_write@addr:
   215     0071                     ??_eep_write:	
   216                           ; 1 bytes @ 0x1
   217                           
   218                           
   219                           ; 1 bytes @ 0x1
   220     0071                     	ds	1
   221     0072                     ??_main:
   222                           
   223                           ; 1 bytes @ 0x2
   224     0072                     	ds	2
   225     0074                     main@val:
   226                           
   227                           ; 1 bytes @ 0x4
   228     0074                     	ds	1
   229                           
   230                           	psect	maintext
   231     07D9                     __pmaintext:	
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 31 in file "newmain.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  val             1    4[COMMON] unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         1       0       0       0       0
   253 ;;      Temps:          2       0       0       0       0
   254 ;;      Totals:         3       0       0       0       0
   255 ;;Total ram usage:        3 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_eep_read
   259 ;;		_eep_write
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     07D9                     _main:	
   266                           ;psect for function _main
   267                           
   268     07D9                     l626:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271                           
   272                           
   273                           ;newmain.c: 33:     TRISB=0;
   274     07D9  1683               	bsf	3,5	;RP0=1, select bank1
   275     07DA  1303               	bcf	3,6	;RP1=0, select bank1
   276     07DB  0186               	clrf	6	;volatile
   277     07DC                     l628:
   278                           
   279                           ;newmain.c: 34:     eep_write(0x00,0x0F);
   280     07DC  300F               	movlw	15
   281     07DD  00F0               	movwf	eep_write@data
   282     07DE  3000               	movlw	0
   283     07DF  120A  118A  27C2  120A  118A  	fcall	_eep_write
   284     07E4                     l630:
   285                           
   286                           ;newmain.c: 35:     _delay((unsigned long)((10)*(4000000/4000.0)));
   287     07E4  300D               	movlw	13
   288     07E5  00F3               	movwf	??_main+1
   289     07E6  30FB               	movlw	251
   290     07E7  00F2               	movwf	??_main
   291     07E8                     u47:
   292     07E8  0BF2               	decfsz	??_main,f
   293     07E9  2FE8               	goto	u47
   294     07EA  0BF3               	decfsz	??_main+1,f
   295     07EB  2FE8               	goto	u47
   296     07EC  2FED               	nop2
   297     07ED                     l632:
   298                           
   299                           ;newmain.c: 36:     unsigned char val=eep_read(0x00);
   300     07ED  3000               	movlw	0
   301     07EE  120A  118A  27B2  120A  118A  	fcall	_eep_read
   302     07F3  00F4               	movwf	main@val
   303     07F4                     l634:
   304                           
   305                           ;newmain.c: 37:     PORTB=val;
   306     07F4  0874               	movf	main@val,w
   307     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   308     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   309     07F7  0086               	movwf	6	;volatile
   310     07F8                     l33:	
   311                           ;newmain.c: 38:     while(1);
   312                           
   313     07F8                     l34:
   314     07F8  2FF8               	goto	l33
   315     07F9  120A  118A  2800   	ljmp	start
   316     07FC                     __end_of_main:
   317                           
   318                           	psect	text1
   319     07C2                     __ptext1:	
   320 ;; *************** function _eep_write *****************
   321 ;; Defined at:
   322 ;;		line 12 in file "newmain.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  addr            1    wreg     unsigned char 
   325 ;;  data            1    0[COMMON] unsigned char 
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  addr            1    1[COMMON] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         1       0       0       0       0
   338 ;;      Locals:         1       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         2       0       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels used: 1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350     07C2                     _eep_write:	
   351                           ;psect for function _eep_write
   352                           
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _eep_write: [wreg]
   356                           ;eep_write@addr stored from wreg
   357     07C2  00F1               	movwf	eep_write@addr
   358     07C3                     l612:
   359                           
   360                           ;newmain.c: 13:     EEADR=addr;
   361     07C3  0871               	movf	eep_write@addr,w
   362     07C4  1283               	bcf	3,5	;RP0=0, select bank2
   363     07C5  1703               	bsf	3,6	;RP1=1, select bank2
   364     07C6  008D               	movwf	13	;volatile
   365                           
   366                           ;newmain.c: 14:     EEDATA=data;
   367     07C7  0870               	movf	eep_write@data,w
   368     07C8  008C               	movwf	12	;volatile
   369     07C9                     l614:
   370                           
   371                           ;newmain.c: 15:     EECON1bits.WREN=1;
   372     07C9  1683               	bsf	3,5	;RP0=1, select bank3
   373     07CA  1703               	bsf	3,6	;RP1=1, select bank3
   374     07CB  150C               	bsf	12,2	;volsfr
   375     07CC                     l616:
   376                           
   377                           ;newmain.c: 16:     INTCONbits.GIE=0;
   378     07CC  138B               	bcf	11,7	;volatile
   379     07CD                     l618:
   380                           
   381                           ;newmain.c: 17:     EECON2=0x55;
   382     07CD  3055               	movlw	85
   383     07CE  008D               	movwf	13	;volsfr
   384     07CF                     l620:
   385                           
   386                           ;newmain.c: 18:     EECON2=0xAA;
   387     07CF  30AA               	movlw	170
   388     07D0  008D               	movwf	13	;volsfr
   389     07D1                     l622:
   390                           
   391                           ;newmain.c: 19:     EECON1bits.WR=1;
   392     07D1  148C               	bsf	12,1	;volsfr
   393     07D2                     l624:
   394                           
   395                           ;newmain.c: 20:     INTCONbits.GIE=1;
   396     07D2  178B               	bsf	11,7	;volatile
   397     07D3                     l19:	
   398                           ;newmain.c: 21:     while(EECON1bits.WR);
   399                           
   400     07D3  188C               	btfsc	12,1	;volsfr
   401     07D4  2FD6               	goto	u31
   402     07D5  2FD7               	goto	u30
   403     07D6                     u31:
   404     07D6  2FD3               	goto	l19
   405     07D7                     u30:
   406     07D7                     l21:
   407                           
   408                           ;newmain.c: 22:     EECON1bits.WREN=0;
   409     07D7  110C               	bcf	12,2	;volsfr
   410     07D8                     l22:
   411     07D8  0008               	return
   412     07D9                     __end_of_eep_write:
   413                           
   414                           	psect	text2
   415     07B2                     __ptext2:	
   416 ;; *************** function _eep_read *****************
   417 ;; Defined at:
   418 ;;		line 24 in file "newmain.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  addr            1    wreg     unsigned char 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  addr            1    0[COMMON] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      unsigned char 
   425 ;; Registers used:
   426 ;;		wreg
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         1       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         1       0       0       0       0
   436 ;;Total ram usage:        1 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445     07B2                     _eep_read:	
   446                           ;psect for function _eep_read
   447                           
   448                           
   449                           ;incstack = 0
   450                           ; Regs used in _eep_read: [wreg]
   451                           ;eep_read@addr stored from wreg
   452     07B2  00F0               	movwf	eep_read@addr
   453     07B3                     l594:
   454                           
   455                           ;newmain.c: 25:     EEADR=addr;
   456     07B3  0870               	movf	eep_read@addr,w
   457     07B4  1283               	bcf	3,5	;RP0=0, select bank2
   458     07B5  1703               	bsf	3,6	;RP1=1, select bank2
   459     07B6  008D               	movwf	13	;volatile
   460     07B7                     l596:
   461                           
   462                           ;newmain.c: 26:     EECON1bits.RD=1;
   463     07B7  1683               	bsf	3,5	;RP0=1, select bank3
   464     07B8  1703               	bsf	3,6	;RP1=1, select bank3
   465     07B9  140C               	bsf	12,0	;volsfr
   466     07BA                     l25:	
   467                           ;newmain.c: 27:     while(EECON1bits.RD);
   468                           
   469     07BA  180C               	btfsc	12,0	;volsfr
   470     07BB  2FBD               	goto	u21
   471     07BC  2FBE               	goto	u20
   472     07BD                     u21:
   473     07BD  2FBA               	goto	l25
   474     07BE                     u20:
   475     07BE                     l598:
   476                           
   477                           ;newmain.c: 28:     return(EEDATA);
   478     07BE  1283               	bcf	3,5	;RP0=0, select bank2
   479     07BF  1703               	bsf	3,6	;RP1=1, select bank2
   480     07C0  080C               	movf	12,w	;volatile
   481     07C1                     l28:
   482     07C1  0008               	return
   483     07C2                     __end_of_eep_read:
   484     0002                     ___latbits      equ	2
   485     007E                     btemp           set	126	;btemp
   486     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_eep_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      90
                                              2 COMMON     3     3      0
                           _eep_read
                          _eep_write
 ---------------------------------------------------------------------------------
 (1) _eep_write                                            2     1      1      52
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _eep_read                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eep_read
   _eep_write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Oct 25 10:38:12 2025

                     l21 07D7                       l22 07D8                       l25 07BA  
                     l33 07F8                       l34 07F8                       l19 07D3  
                     l28 07C1                       u20 07BE                       u21 07BD  
                     u30 07D7                       u31 07D6                       u47 07E8  
                    l620 07CF                      l612 07C3                      l622 07D1  
                    l614 07C9                      l630 07E4                      l624 07D2  
                    l616 07CC                      l632 07ED                      l618 07CD  
                    l634 07F4                      l626 07D9                      l628 07DC  
                    l594 07B3                      l596 07B7                      l598 07BE  
                   _main 07D9                     btemp 007E                     start 0000  
                  ?_main 0070                    _EEADR 010D                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0072  
                 _EEDATA 010C                   _EECON2 018D         __end_of_eep_read 07C2  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07D9  
              ?_eep_read 0070        __end_of_eep_write 07D9                  __ptext1 07C2  
                __ptext2 07B2               ??_eep_read 0070                  main@val 0074  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
              _eep_write 07C2               ?_eep_write 0070               _EECON1bits 018C  
               _eep_read 07B2            eep_write@addr 0071            eep_write@data 0070  
           eep_read@addr 0070              ??_eep_write 0071               _INTCONbits 000B  
