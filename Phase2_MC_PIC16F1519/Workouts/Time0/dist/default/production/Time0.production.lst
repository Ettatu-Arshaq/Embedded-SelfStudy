

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Sep 27 11:41:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 07/09/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1519 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     000E                     PORTC           equ	14	;# 
    75     000F                     PORTD           equ	15	;# 
    76     0010                     PORTE           equ	16	;# 
    77     0011                     PIR1            equ	17	;# 
    78     0012                     PIR2            equ	18	;# 
    79     0015                     TMR0            equ	21	;# 
    80     0016                     TMR1            equ	22	;# 
    81     0016                     TMR1L           equ	22	;# 
    82     0017                     TMR1H           equ	23	;# 
    83     0018                     T1CON           equ	24	;# 
    84     0019                     T1GCON          equ	25	;# 
    85     001A                     TMR2            equ	26	;# 
    86     001B                     PR2             equ	27	;# 
    87     001C                     T2CON           equ	28	;# 
    88     008C                     TRISA           equ	140	;# 
    89     008D                     TRISB           equ	141	;# 
    90     008E                     TRISC           equ	142	;# 
    91     008F                     TRISD           equ	143	;# 
    92     0090                     TRISE           equ	144	;# 
    93     0091                     PIE1            equ	145	;# 
    94     0092                     PIE2            equ	146	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0099                     OSCCON          equ	153	;# 
    99     009A                     OSCSTAT         equ	154	;# 
   100     009B                     ADRES           equ	155	;# 
   101     009B                     ADRESL          equ	155	;# 
   102     009C                     ADRESH          equ	156	;# 
   103     009D                     ADCON0          equ	157	;# 
   104     009E                     ADCON1          equ	158	;# 
   105     010C                     LATA            equ	268	;# 
   106     010D                     LATB            equ	269	;# 
   107     010E                     LATC            equ	270	;# 
   108     010F                     LATD            equ	271	;# 
   109     0110                     LATE            equ	272	;# 
   110     0116                     BORCON          equ	278	;# 
   111     0117                     FVRCON          equ	279	;# 
   112     011D                     APFCON          equ	285	;# 
   113     018C                     ANSELA          equ	396	;# 
   114     018D                     ANSELB          equ	397	;# 
   115     018E                     ANSELC          equ	398	;# 
   116     018F                     ANSELD          equ	399	;# 
   117     0190                     ANSELE          equ	400	;# 
   118     0191                     PMADR           equ	401	;# 
   119     0191                     PMADRL          equ	401	;# 
   120     0192                     PMADRH          equ	402	;# 
   121     0193                     PMDAT           equ	403	;# 
   122     0193                     PMDATL          equ	403	;# 
   123     0194                     PMDATH          equ	404	;# 
   124     0195                     PMCON1          equ	405	;# 
   125     0196                     PMCON2          equ	406	;# 
   126     0197                     VREGCON         equ	407	;# 
   127     0199                     RCREG           equ	409	;# 
   128     019A                     TXREG           equ	410	;# 
   129     019B                     SP1BRG          equ	411	;# 
   130     019B                     SP1BRGL         equ	411	;# 
   131     019B                     SPBRG           equ	411	;# 
   132     019B                     SPBRGL          equ	411	;# 
   133     019C                     SP1BRGH         equ	412	;# 
   134     019C                     SPBRGH          equ	412	;# 
   135     019D                     RCSTA           equ	413	;# 
   136     019E                     TXSTA           equ	414	;# 
   137     019F                     BAUDCON         equ	415	;# 
   138     020D                     WPUB            equ	525	;# 
   139     0210                     WPUE            equ	528	;# 
   140     0211                     SSPBUF          equ	529	;# 
   141     0211                     SSP1BUF         equ	529	;# 
   142     0212                     SSPADD          equ	530	;# 
   143     0212                     SSP1ADD         equ	530	;# 
   144     0213                     SSPMSK          equ	531	;# 
   145     0213                     SSP1MSK         equ	531	;# 
   146     0214                     SSPSTAT         equ	532	;# 
   147     0214                     SSP1STAT        equ	532	;# 
   148     0215                     SSPCON1         equ	533	;# 
   149     0215                     SSPCON          equ	533	;# 
   150     0215                     SSP1CON1        equ	533	;# 
   151     0216                     SSPCON2         equ	534	;# 
   152     0216                     SSP1CON2        equ	534	;# 
   153     0217                     SSPCON3         equ	535	;# 
   154     0217                     SSP1CON3        equ	535	;# 
   155     0291                     CCPR1           equ	657	;# 
   156     0291                     CCPR1L          equ	657	;# 
   157     0292                     CCPR1H          equ	658	;# 
   158     0293                     CCP1CON         equ	659	;# 
   159     0298                     CCPR2           equ	664	;# 
   160     0298                     CCPR2L          equ	664	;# 
   161     0299                     CCPR2H          equ	665	;# 
   162     029A                     CCP2CON         equ	666	;# 
   163     0394                     IOCBP           equ	916	;# 
   164     0395                     IOCBN           equ	917	;# 
   165     0396                     IOCBF           equ	918	;# 
   166     0FE4                     STATUS_SHAD     equ	4068	;# 
   167     0FE5                     WREG_SHAD       equ	4069	;# 
   168     0FE6                     BSR_SHAD        equ	4070	;# 
   169     0FE7                     PCLATH_SHAD     equ	4071	;# 
   170     0FE8                     FSR0L_SHAD      equ	4072	;# 
   171     0FE9                     FSR0H_SHAD      equ	4073	;# 
   172     0FEA                     FSR1L_SHAD      equ	4074	;# 
   173     0FEB                     FSR1H_SHAD      equ	4075	;# 
   174     0FED                     STKPTR          equ	4077	;# 
   175     0FEE                     TOSL            equ	4078	;# 
   176     0FEF                     TOSH            equ	4079	;# 
   177     0015                     _TMR0           set	21
   178     000B                     _INTCON         set	11
   179     005A                     _TMR0IF         set	90
   180     0095                     _OPTION_REG     set	149
   181     008C                     _TRISAbits      set	140
   182     0099                     _OSCCONbits     set	153
   183     010C                     _LATAbits       set	268
   184     018C                     _ANSELAbits     set	396
   185                           
   186                           	psect	cinit
   187     0011                     start_initialization:	
   188                           ; #config settings
   189                           
   190     0011                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193     0011  01F0               	clrf	__pbssCOMMON& (0+127)
   194     0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   195     0013                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     0013                     __end_of__initialization:
   199     0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   200     0014  0020               	movlb	0
   201     0015  3180  2817         	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMMON
   204     0070                     __pbssCOMMON:
   205     0070                     _result:
   206     0070                     	ds	2
   207                           
   208                           	psect	cstackCOMMON
   209     0000                     __pcstackCOMMON:
   210     0000                     ?_main:
   211     0000                     ?_isr:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0000                     ??_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0000                     ??_isr:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           	psect	maintext
   222     0017                     __pmaintext:	
   223                           ; 1 bytes @ 0x0
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 28 in file "newmain.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0
   238 ;; Tracked objects:
   239 ;;		On entry : B1F/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called: 1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256     0017                     _main:	
   257                           ;psect for function _main
   258                           
   259     0017                     l558:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0]
   262                           
   263                           
   264                           ;newmain.c: 30:     OSCCONbits.IRCF=0xD;
   265     0017  0021               	movlb	1	; select bank1
   266     0018  0819               	movf	25,w	;volatile
   267     0019  3987               	andlw	-121
   268     001A  3868               	iorlw	104
   269     001B  0099               	movwf	25	;volatile
   270     001C                     l560:
   271                           
   272                           ;newmain.c: 31:     ANSELAbits.ANSA0=0;
   273     001C  0023               	movlb	3	; select bank3
   274     001D  100C               	bcf	12,0	;volatile
   275     001E                     l562:
   276                           
   277                           ;newmain.c: 32:     TRISAbits.TRISA0=0;
   278     001E  0021               	movlb	1	; select bank1
   279     001F  100C               	bcf	12,0	;volatile
   280     0020                     l564:
   281                           
   282                           ;newmain.c: 33:     INTCON=0xA0;
   283     0020  30A0               	movlw	160
   284     0021  008B               	movwf	11	;volatile
   285     0022                     l566:
   286                           
   287                           ;newmain.c: 34:     OPTION_REG=0x9f;
   288     0022  309F               	movlw	159
   289     0023  0095               	movwf	21	;volatile
   290     0024                     l568:
   291                           
   292                           ;newmain.c: 35:     TMR0=0;
   293     0024  0020               	movlb	0	; select bank0
   294     0025  0195               	clrf	21	;volatile
   295     0026                     l570:
   296                           
   297                           ;newmain.c: 38:     {;newmain.c: 39:         LATAbits.LATA0=0;
   298     0026  0022               	movlb	2	; select bank2
   299     0027  100C               	bcf	12,0	;volatile
   300     0028  2826               	goto	l570
   301     0029  3180  280F         	ljmp	start
   302     002B                     __end_of_main:
   303                           
   304                           	psect	intentry
   305     0004                     __pintentry:	
   306 ;; *************** function _isr *****************
   307 ;; Defined at:
   308 ;;		line 44 in file "newmain.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		None
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		Interrupt level 1
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335     0004                     _isr:
   336                           
   337                           ;incstack = 0
   338     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   339                           
   340                           ; Regs used in _isr: []
   341     0005  3180               	pagesel	$
   342     0006                     i1l572:
   343                           
   344                           ;newmain.c: 46:     if(TMR0IF==1)
   345     0006  1D0B               	btfss	11,2	;volatile
   346     0007  2809               	goto	u1_21
   347     0008  280A               	goto	u1_20
   348     0009                     u1_21:
   349     0009  280D               	goto	i1l32
   350     000A                     u1_20:
   351     000A                     i1l574:
   352                           
   353                           ;newmain.c: 47:         {;newmain.c: 48:             TMR0IF=0;
   354     000A  110B               	bcf	11,2	;volatile
   355                           
   356                           ;newmain.c: 49:             LATAbits.LATA0=1;
   357     000B  0022               	movlb	2	; select bank2
   358     000C  140C               	bsf	12,0	;volatile
   359     000D                     i1l32:
   360     000D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   361     000E  0009               	retfie
   362     000F                     __end_of_isr:
   363     0003                     ___latbits      equ	3
   364     007E                     btemp           set	126	;btemp
   365     007E                     int$flags       set	126
   366     007E                     wtemp0          set	126
   367                           
   368                           	psect	config
   369                           
   370                           ;Config register CONFIG1 @ 0x8007
   371                           ;	Oscillator Selection
   372                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   373                           ;	Watchdog Timer Enable
   374                           ;	WDTE = ON, WDT enabled
   375                           ;	Power-up Timer Enable
   376                           ;	PWRTE = OFF, PWRT disabled
   377                           ;	MCLR Pin Function Select
   378                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   379                           ;	Flash Program Memory Code Protection
   380                           ;	CP = OFF, Program memory code protection is disabled
   381                           ;	Brown-out Reset Enable
   382                           ;	BOREN = ON, Brown-out Reset enabled
   383                           ;	Clock Out Enable
   384                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   385                           ;	Internal/External Switchover
   386                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   387                           ;	Fail-Safe Clock Monitor Enable
   388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   389     8007                     	org	32775
   390     8007  0FFC               	dw	4092
   391                           
   392                           ;Config register CONFIG2 @ 0x8008
   393                           ;	Flash Memory Self-Write Protection
   394                           ;	WRT = OFF, Write protection off
   395                           ;	Voltage Regulator Capacitor Enable bit
   396                           ;	VCAPEN = OFF, VCAP pin function disabled
   397                           ;	Stack Overflow/Underflow Reset Enable
   398                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   399                           ;	Brown-out Reset Voltage Selection
   400                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   401                           ;	Low-Power Brown Out Reset
   402                           ;	LPBOR = OFF, Low-Power BOR is disabled
   403                           ;	Low-Voltage Programming Enable
   404                           ;	LVP = ON, Low-voltage programming enabled
   405     8008                     	org	32776
   406     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      0       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Sep 27 11:41:11 2025

                    l560 001C                      l570 0026                      l562 001E  
                    l564 0020                      l566 0022                      l558 0017  
                    l568 0024                      _isr 0004                     ?_isr 0000  
                   i1l32 000D                     _TMR0 0015                     u1_20 000A  
                   u1_21 0009                     _main 0017                     btemp 007E  
                   start 000F                    ??_isr 0000                    ?_main 0000  
                  i1l572 0006                    i1l574 000A                    wtemp0 007E  
        __initialization 0011             __end_of_main 002B                   ??_main 0000  
                 _INTCON 000B                   _TMR0IF 005A                   _result 0070  
__end_of__initialization 0013           __pcstackCOMMON 0000               __pmaintext 0017  
             __pintentry 0004     end_of_initialization 0013                _TRISAbits 008C  
    start_initialization 0011              __end_of_isr 000F              __pbssCOMMON 0070  
              ___latbits 0003                 _LATAbits 010C               _ANSELAbits 018C  
               int$flags 007E                 intlevel1 0000               _OSCCONbits 0099  
             _OPTION_REG 0095  
