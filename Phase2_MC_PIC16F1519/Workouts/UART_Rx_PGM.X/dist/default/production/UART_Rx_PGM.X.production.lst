

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Oct 19 22:47:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 07/09/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1519 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0008                     bsr             equ	8
    48     0005                     fsr0h           equ	5
    49     0004                     fsr0l           equ	4
    50     0007                     fsr1h           equ	7
    51     0006                     fsr1l           equ	6
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0001                     indf1           equ	1
    55     000B                     intcon          equ	11
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0009                     wreg            equ	9
    61     0000                     INDF0           equ	0	;# 
    62     0001                     INDF1           equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR0L           equ	4	;# 
    66     0005                     FSR0H           equ	5	;# 
    67     0006                     FSR1L           equ	6	;# 
    68     0007                     FSR1H           equ	7	;# 
    69     0008                     BSR             equ	8	;# 
    70     0009                     WREG            equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PORTA           equ	12	;# 
    74     000D                     PORTB           equ	13	;# 
    75     000E                     PORTC           equ	14	;# 
    76     000F                     PORTD           equ	15	;# 
    77     0010                     PORTE           equ	16	;# 
    78     0011                     PIR1            equ	17	;# 
    79     0012                     PIR2            equ	18	;# 
    80     0015                     TMR0            equ	21	;# 
    81     0016                     TMR1            equ	22	;# 
    82     0016                     TMR1L           equ	22	;# 
    83     0017                     TMR1H           equ	23	;# 
    84     0018                     T1CON           equ	24	;# 
    85     0019                     T1GCON          equ	25	;# 
    86     001A                     TMR2            equ	26	;# 
    87     001B                     PR2             equ	27	;# 
    88     001C                     T2CON           equ	28	;# 
    89     008C                     TRISA           equ	140	;# 
    90     008D                     TRISB           equ	141	;# 
    91     008E                     TRISC           equ	142	;# 
    92     008F                     TRISD           equ	143	;# 
    93     0090                     TRISE           equ	144	;# 
    94     0091                     PIE1            equ	145	;# 
    95     0092                     PIE2            equ	146	;# 
    96     0095                     OPTION_REG      equ	149	;# 
    97     0096                     PCON            equ	150	;# 
    98     0097                     WDTCON          equ	151	;# 
    99     0099                     OSCCON          equ	153	;# 
   100     009A                     OSCSTAT         equ	154	;# 
   101     009B                     ADRES           equ	155	;# 
   102     009B                     ADRESL          equ	155	;# 
   103     009C                     ADRESH          equ	156	;# 
   104     009D                     ADCON0          equ	157	;# 
   105     009E                     ADCON1          equ	158	;# 
   106     010C                     LATA            equ	268	;# 
   107     010D                     LATB            equ	269	;# 
   108     010E                     LATC            equ	270	;# 
   109     010F                     LATD            equ	271	;# 
   110     0110                     LATE            equ	272	;# 
   111     0116                     BORCON          equ	278	;# 
   112     0117                     FVRCON          equ	279	;# 
   113     011D                     APFCON          equ	285	;# 
   114     018C                     ANSELA          equ	396	;# 
   115     018D                     ANSELB          equ	397	;# 
   116     018E                     ANSELC          equ	398	;# 
   117     018F                     ANSELD          equ	399	;# 
   118     0190                     ANSELE          equ	400	;# 
   119     0191                     PMADR           equ	401	;# 
   120     0191                     PMADRL          equ	401	;# 
   121     0192                     PMADRH          equ	402	;# 
   122     0193                     PMDAT           equ	403	;# 
   123     0193                     PMDATL          equ	403	;# 
   124     0194                     PMDATH          equ	404	;# 
   125     0195                     PMCON1          equ	405	;# 
   126     0196                     PMCON2          equ	406	;# 
   127     0197                     VREGCON         equ	407	;# 
   128     0199                     RCREG           equ	409	;# 
   129     019A                     TXREG           equ	410	;# 
   130     019B                     SP1BRG          equ	411	;# 
   131     019B                     SP1BRGL         equ	411	;# 
   132     019B                     SPBRG           equ	411	;# 
   133     019B                     SPBRGL          equ	411	;# 
   134     019C                     SP1BRGH         equ	412	;# 
   135     019C                     SPBRGH          equ	412	;# 
   136     019D                     RCSTA           equ	413	;# 
   137     019E                     TXSTA           equ	414	;# 
   138     019F                     BAUDCON         equ	415	;# 
   139     020D                     WPUB            equ	525	;# 
   140     0210                     WPUE            equ	528	;# 
   141     0211                     SSPBUF          equ	529	;# 
   142     0211                     SSP1BUF         equ	529	;# 
   143     0212                     SSPADD          equ	530	;# 
   144     0212                     SSP1ADD         equ	530	;# 
   145     0213                     SSPMSK          equ	531	;# 
   146     0213                     SSP1MSK         equ	531	;# 
   147     0214                     SSPSTAT         equ	532	;# 
   148     0214                     SSP1STAT        equ	532	;# 
   149     0215                     SSPCON1         equ	533	;# 
   150     0215                     SSPCON          equ	533	;# 
   151     0215                     SSP1CON1        equ	533	;# 
   152     0216                     SSPCON2         equ	534	;# 
   153     0216                     SSP1CON2        equ	534	;# 
   154     0217                     SSPCON3         equ	535	;# 
   155     0217                     SSP1CON3        equ	535	;# 
   156     0291                     CCPR1           equ	657	;# 
   157     0291                     CCPR1L          equ	657	;# 
   158     0292                     CCPR1H          equ	658	;# 
   159     0293                     CCP1CON         equ	659	;# 
   160     0298                     CCPR2           equ	664	;# 
   161     0298                     CCPR2L          equ	664	;# 
   162     0299                     CCPR2H          equ	665	;# 
   163     029A                     CCP2CON         equ	666	;# 
   164     0394                     IOCBP           equ	916	;# 
   165     0395                     IOCBN           equ	917	;# 
   166     0396                     IOCBF           equ	918	;# 
   167     0FE4                     STATUS_SHAD     equ	4068	;# 
   168     0FE5                     WREG_SHAD       equ	4069	;# 
   169     0FE6                     BSR_SHAD        equ	4070	;# 
   170     0FE7                     PCLATH_SHAD     equ	4071	;# 
   171     0FE8                     FSR0L_SHAD      equ	4072	;# 
   172     0FE9                     FSR0H_SHAD      equ	4073	;# 
   173     0FEA                     FSR1L_SHAD      equ	4074	;# 
   174     0FEB                     FSR1H_SHAD      equ	4075	;# 
   175     0FED                     STKPTR          equ	4077	;# 
   176     0FEE                     TOSL            equ	4078	;# 
   177     0FEF                     TOSH            equ	4079	;# 
   178     008D                     _RCIF           set	141
   179     008C                     _TXIF           set	140
   180     008E                     _TRISCbits      set	142
   181     0099                     _OSCCON         set	153
   182     010E                     _LATCbits       set	270
   183     018E                     _ANSELC         set	398
   184     0199                     _RCREG          set	409
   185     019A                     _TXREG          set	410
   186     019B                     _SPBRG          set	411
   187     019E                     _TXSTA          set	414
   188     019D                     _RCSTAbits      set	413
   189     019F                     _BAUDCONbits    set	415
   190                           
   191                           	psect	cinit
   192     07FD                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07FD                     __initialization:
   196     07FD                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199     07FD                     __end_of__initialization:
   200     07FD  0020               	movlb	0
   201     07FE  3187  2FDE         	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_uart_init:
   206     0070                     ?_uart_write:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_uart_read:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     uart_write@a:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_uart_init:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ??_uart_write:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_uart_read:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229     0070                     	ds	1
   230     0071                     main@a:
   231     0071                     ??_main:	
   232                           ; 1 bytes @ 0x1
   233                           
   234                           
   235                           ; 1 bytes @ 0x1
   236     0071                     	ds	1
   237                           
   238                           	psect	maintext
   239     07DE                     __pmaintext:	
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   242 ;;
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 50 in file "newmain.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  a               1    1[COMMON] unsigned char 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, pclath, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : B1F/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   263 ;;Total ram usage:        1 bytes
   264 ;; Hardware stack levels required when called: 1
   265 ;; This function calls:
   266 ;;		_uart_init
   267 ;;		_uart_read
   268 ;;		_uart_write
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     07DE                     _main:	
   275                           ;psect for function _main
   276                           
   277     07DE                     l587:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281                           
   282                           ;newmain.c: 51:     uart_init();
   283     07DE  3187  27D1  3187   	fcall	_uart_init
   284     07E1                     l589:
   285                           
   286                           ;newmain.c: 52:     ANSELC=0;
   287     07E1  0023               	movlb	3	; select bank3
   288     07E2  018E               	clrf	14	;volatile
   289     07E3                     l591:
   290                           
   291                           ;newmain.c: 53:     TRISCbits.TRISC1=0;
   292     07E3  0021               	movlb	1	; select bank1
   293     07E4  108E               	bcf	14,1	;volatile
   294     07E5                     l593:
   295                           
   296                           ;newmain.c: 54:     TRISCbits.TRISC6=0;
   297     07E5  130E               	bcf	14,6	;volatile
   298     07E6                     l595:
   299                           
   300                           ;newmain.c: 55:     TRISCbits.TRISC7=1;
   301     07E6  178E               	bsf	14,7	;volatile
   302     07E7                     l597:
   303                           
   304                           ;newmain.c: 58:     char a;;newmain.c: 59:     a=uart_read() ;
   305     07E7  3187  27BF  3187   	fcall	_uart_read
   306     07EA  00F1               	movwf	main@a
   307     07EB                     l599:
   308                           
   309                           ;newmain.c: 60:     uart_write(a);
   310     07EB  0871               	movf	main@a,w
   311     07EC  3187  27C7  3187   	fcall	_uart_write
   312     07EF                     l601:
   313                           
   314                           ;newmain.c: 61:     if (a=='1'){
   315     07EF  3031               	movlw	49
   316     07F0  0671               	xorwf	main@a,w
   317     07F1  1D03               	btfss	3,2
   318     07F2  2FF4               	goto	u31
   319     07F3  2FF5               	goto	u30
   320     07F4                     u31:
   321     07F4  2FF8               	goto	l45
   322     07F5                     u30:
   323     07F5                     l603:
   324                           
   325                           ;newmain.c: 62:         LATCbits.LATC1=1;
   326     07F5  0022               	movlb	2	; select bank2
   327     07F6  148E               	bsf	14,1	;volatile
   328                           
   329                           ;newmain.c: 63:     }
   330     07F7  2FE7               	goto	l597
   331     07F8                     l45:	
   332                           ;newmain.c: 64:     else LATCbits.LATC1=0;
   333                           
   334     07F8  0022               	movlb	2	; select bank2
   335     07F9  108E               	bcf	14,1	;volatile
   336     07FA  2FE7               	goto	l597
   337     07FB  3180  2802         	ljmp	start
   338     07FD                     __end_of_main:
   339                           
   340                           	psect	text1
   341     07C7                     __ptext1:	
   342 ;; *************** function _uart_write *****************
   343 ;; Defined at:
   344 ;;		line 38 in file "newmain.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  a               1    wreg     unsigned char 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  a               1    0[COMMON] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371     07C7                     _uart_write:	
   372                           ;psect for function _uart_write
   373                           
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _uart_write: [wreg]
   377                           ;uart_write@a stored from wreg
   378     07C7  00F0               	movwf	uart_write@a
   379     07C8                     l577:
   380     07C8                     l30:	
   381                           ;newmain.c: 40:         while(TXIF==0);
   382                           
   383     07C8  0020               	movlb	0	; select bank0
   384     07C9  1E11               	btfss	17,4	;volatile
   385     07CA  2FCC               	goto	u11
   386     07CB  2FCD               	goto	u10
   387     07CC                     u11:
   388     07CC  2FC8               	goto	l30
   389     07CD                     u10:
   390     07CD                     l579:
   391                           
   392                           ;newmain.c: 41:         TXREG=a;
   393     07CD  0870               	movf	uart_write@a,w
   394     07CE  0023               	movlb	3	; select bank3
   395     07CF  009A               	movwf	26	;volatile
   396     07D0                     l33:
   397     07D0  0008               	return
   398     07D1                     __end_of_uart_write:
   399                           
   400                           	psect	text2
   401     07BF                     __ptext2:	
   402 ;; *************** function _uart_read *****************
   403 ;; Defined at:
   404 ;;		line 44 in file "newmain.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      unsigned char 
   411 ;; Registers used:
   412 ;;		wreg
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     07BF                     _uart_read:	
   432                           ;psect for function _uart_read
   433                           
   434     07BF                     l581:	
   435                           ;incstack = 0
   436                           ; Regs used in _uart_read: [wreg]
   437                           
   438     07BF                     l36:	
   439                           ;newmain.c: 45:     while(RCIF == 0);
   440                           
   441     07BF  0020               	movlb	0	; select bank0
   442     07C0  1E91               	btfss	17,5	;volatile
   443     07C1  2FC3               	goto	u21
   444     07C2  2FC4               	goto	u20
   445     07C3                     u21:
   446     07C3  2FBF               	goto	l36
   447     07C4                     u20:
   448     07C4                     l583:
   449                           
   450                           ;newmain.c: 46:     return RCREG;
   451     07C4  0023               	movlb	3	; select bank3
   452     07C5  0819               	movf	25,w	;volatile
   453     07C6                     l39:
   454     07C6  0008               	return
   455     07C7                     __end_of_uart_read:
   456                           
   457                           	psect	text3
   458     07D1                     __ptext3:	
   459 ;; *************** function _uart_init *****************
   460 ;; Defined at:
   461 ;;		line 26 in file "newmain.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		None
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488     07D1                     _uart_init:	
   489                           ;psect for function _uart_init
   490                           
   491     07D1                     l575:	
   492                           ;incstack = 0
   493                           ; Regs used in _uart_init: []
   494                           
   495                           
   496                           ;newmain.c: 27:     OSCCON = 0x6A;
   497     07D1  306A               	movlw	106
   498     07D2  0021               	movlb	1	; select bank1
   499     07D3  0099               	movwf	25	;volatile
   500                           
   501                           ;newmain.c: 28:     BAUDCONbits.SCKP=0;
   502     07D4  0023               	movlb	3	; select bank3
   503     07D5  121F               	bcf	31,4	;volatile
   504                           
   505                           ;newmain.c: 29:     BAUDCONbits.BRG16=0;
   506     07D6  119F               	bcf	31,3	;volatile
   507                           
   508                           ;newmain.c: 30:     RCSTAbits.SPEN=1;
   509     07D7  179D               	bsf	29,7	;volatile
   510                           
   511                           ;newmain.c: 31:     RCSTAbits.CREN = 1;
   512     07D8  161D               	bsf	29,4	;volatile
   513                           
   514                           ;newmain.c: 32:     TXSTA=0x24;
   515     07D9  3024               	movlw	36
   516     07DA  009E               	movwf	30	;volatile
   517                           
   518                           ;newmain.c: 33:     SPBRG=25;
   519     07DB  3019               	movlw	25
   520     07DC  009B               	movwf	27	;volatile
   521     07DD                     l27:
   522     07DD  0008               	return
   523     07DE                     __end_of_uart_init:
   524     0003                     ___latbits      equ	3
   525     007E                     btemp           set	126	;btemp
   526     007E                     wtemp0          set	126
   527                           
   528                           	psect	config
   529                           
   530                           ;Config register CONFIG1 @ 0x8007
   531                           ;	Oscillator Selection
   532                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   533                           ;	Watchdog Timer Enable
   534                           ;	WDTE = OFF, WDT disabled
   535                           ;	Power-up Timer Enable
   536                           ;	PWRTE = OFF, PWRT disabled
   537                           ;	MCLR Pin Function Select
   538                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   539                           ;	Flash Program Memory Code Protection
   540                           ;	CP = OFF, Program memory code protection is disabled
   541                           ;	Brown-out Reset Enable
   542                           ;	BOREN = OFF, Brown-out Reset disabled
   543                           ;	Clock Out Enable
   544                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   545                           ;	Internal/External Switchover
   546                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   547                           ;	Fail-Safe Clock Monitor Enable
   548                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   549     8007                     	org	32775
   550     8007  09E4               	dw	2532
   551                           
   552                           ;Config register CONFIG2 @ 0x8008
   553                           ;	Flash Memory Self-Write Protection
   554                           ;	WRT = OFF, Write protection off
   555                           ;	Voltage Regulator Capacitor Enable bit
   556                           ;	VCAPEN = OFF, VCAP pin function disabled
   557                           ;	Stack Overflow/Underflow Reset Enable
   558                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   559                           ;	Brown-out Reset Voltage Selection
   560                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   561                           ;	Low-Power Brown Out Reset
   562                           ;	LPBOR = OFF, Low-Power BOR is disabled
   563                           ;	Low-Voltage Programming Enable
   564                           ;	LVP = ON, Low-voltage programming enabled
   565     8008                     	org	32776
   566     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_uart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              1 COMMON     1     1      0
                          _uart_init
                          _uart_read
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init
   _uart_read
   _uart_write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Oct 19 22:47:38 2025

                     l30 07C8                       l33 07D0                       l27 07DD  
                     l36 07BF                       l45 07F8                       l39 07C6  
                     u10 07CD                       u11 07CC                       u20 07C4  
                     u21 07C3                       u30 07F5                       u31 07F4  
                    l601 07EF                      l603 07F5                      l581 07BF  
                    l575 07D1                      l583 07C4                      l591 07E3  
                    l577 07C8                      l593 07E5                      l579 07CD  
                    l595 07E6                      l587 07DE                      l597 07E7  
                    l589 07E1                      l599 07EB                     _RCIF 008D  
                   _TXIF 008C                     _main 07DE                     btemp 007E  
                   start 0002                    ?_main 0070                    _RCREG 0199  
                  _SPBRG 019B                    _TXREG 019A                    _TXSTA 019E  
                  main@a 0071                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0071  
                 _ANSELC 018E                   _OSCCON 0099  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pmaintext 07DE                  __ptext1 07C7  
                __ptext2 07BF                  __ptext3 07D1     end_of_initialization 07FD  
      __end_of_uart_init 07DE        __end_of_uart_read 07C7                _RCSTAbits 019D  
             _uart_write 07C7                _TRISCbits 008E              uart_write@a 0070  
            _BAUDCONbits 019F      start_initialization 07FD              ?_uart_write 0070  
              ___latbits 0003                 _LATCbits 010E                _uart_init 07D1  
              _uart_read 07BF               ?_uart_init 0070               ?_uart_read 0070  
           ??_uart_write 0070       __end_of_uart_write 07D1              ??_uart_init 0070  
            ??_uart_read 0070  
