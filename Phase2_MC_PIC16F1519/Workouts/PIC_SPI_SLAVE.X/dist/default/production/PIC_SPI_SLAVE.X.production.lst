

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 22 21:42:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 07/09/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1519 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     000E                     PORTC           equ	14	;# 
    75     000F                     PORTD           equ	15	;# 
    76     0010                     PORTE           equ	16	;# 
    77     0011                     PIR1            equ	17	;# 
    78     0012                     PIR2            equ	18	;# 
    79     0015                     TMR0            equ	21	;# 
    80     0016                     TMR1            equ	22	;# 
    81     0016                     TMR1L           equ	22	;# 
    82     0017                     TMR1H           equ	23	;# 
    83     0018                     T1CON           equ	24	;# 
    84     0019                     T1GCON          equ	25	;# 
    85     001A                     TMR2            equ	26	;# 
    86     001B                     PR2             equ	27	;# 
    87     001C                     T2CON           equ	28	;# 
    88     008C                     TRISA           equ	140	;# 
    89     008D                     TRISB           equ	141	;# 
    90     008E                     TRISC           equ	142	;# 
    91     008F                     TRISD           equ	143	;# 
    92     0090                     TRISE           equ	144	;# 
    93     0091                     PIE1            equ	145	;# 
    94     0092                     PIE2            equ	146	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0099                     OSCCON          equ	153	;# 
    99     009A                     OSCSTAT         equ	154	;# 
   100     009B                     ADRES           equ	155	;# 
   101     009B                     ADRESL          equ	155	;# 
   102     009C                     ADRESH          equ	156	;# 
   103     009D                     ADCON0          equ	157	;# 
   104     009E                     ADCON1          equ	158	;# 
   105     010C                     LATA            equ	268	;# 
   106     010D                     LATB            equ	269	;# 
   107     010E                     LATC            equ	270	;# 
   108     010F                     LATD            equ	271	;# 
   109     0110                     LATE            equ	272	;# 
   110     0116                     BORCON          equ	278	;# 
   111     0117                     FVRCON          equ	279	;# 
   112     011D                     APFCON          equ	285	;# 
   113     018C                     ANSELA          equ	396	;# 
   114     018D                     ANSELB          equ	397	;# 
   115     018E                     ANSELC          equ	398	;# 
   116     018F                     ANSELD          equ	399	;# 
   117     0190                     ANSELE          equ	400	;# 
   118     0191                     PMADR           equ	401	;# 
   119     0191                     PMADRL          equ	401	;# 
   120     0192                     PMADRH          equ	402	;# 
   121     0193                     PMDAT           equ	403	;# 
   122     0193                     PMDATL          equ	403	;# 
   123     0194                     PMDATH          equ	404	;# 
   124     0195                     PMCON1          equ	405	;# 
   125     0196                     PMCON2          equ	406	;# 
   126     0197                     VREGCON         equ	407	;# 
   127     0199                     RCREG           equ	409	;# 
   128     019A                     TXREG           equ	410	;# 
   129     019B                     SP1BRG          equ	411	;# 
   130     019B                     SP1BRGL         equ	411	;# 
   131     019B                     SPBRG           equ	411	;# 
   132     019B                     SPBRGL          equ	411	;# 
   133     019C                     SP1BRGH         equ	412	;# 
   134     019C                     SPBRGH          equ	412	;# 
   135     019D                     RCSTA           equ	413	;# 
   136     019E                     TXSTA           equ	414	;# 
   137     019F                     BAUDCON         equ	415	;# 
   138     020D                     WPUB            equ	525	;# 
   139     0210                     WPUE            equ	528	;# 
   140     0211                     SSPBUF          equ	529	;# 
   141     0211                     SSP1BUF         equ	529	;# 
   142     0212                     SSPADD          equ	530	;# 
   143     0212                     SSP1ADD         equ	530	;# 
   144     0213                     SSPMSK          equ	531	;# 
   145     0213                     SSP1MSK         equ	531	;# 
   146     0214                     SSPSTAT         equ	532	;# 
   147     0214                     SSP1STAT        equ	532	;# 
   148     0215                     SSPCON1         equ	533	;# 
   149     0215                     SSPCON          equ	533	;# 
   150     0215                     SSP1CON1        equ	533	;# 
   151     0216                     SSPCON2         equ	534	;# 
   152     0216                     SSP1CON2        equ	534	;# 
   153     0217                     SSPCON3         equ	535	;# 
   154     0217                     SSP1CON3        equ	535	;# 
   155     0291                     CCPR1           equ	657	;# 
   156     0291                     CCPR1L          equ	657	;# 
   157     0292                     CCPR1H          equ	658	;# 
   158     0293                     CCP1CON         equ	659	;# 
   159     0298                     CCPR2           equ	664	;# 
   160     0298                     CCPR2L          equ	664	;# 
   161     0299                     CCPR2H          equ	665	;# 
   162     029A                     CCP2CON         equ	666	;# 
   163     0394                     IOCBP           equ	916	;# 
   164     0395                     IOCBN           equ	917	;# 
   165     0396                     IOCBF           equ	918	;# 
   166     0FE4                     STATUS_SHAD     equ	4068	;# 
   167     0FE5                     WREG_SHAD       equ	4069	;# 
   168     0FE6                     BSR_SHAD        equ	4070	;# 
   169     0FE7                     PCLATH_SHAD     equ	4071	;# 
   170     0FE8                     FSR0L_SHAD      equ	4072	;# 
   171     0FE9                     FSR0H_SHAD      equ	4073	;# 
   172     0FEA                     FSR1L_SHAD      equ	4074	;# 
   173     0FEB                     FSR1H_SHAD      equ	4075	;# 
   174     0FED                     STKPTR          equ	4077	;# 
   175     0FEE                     TOSL            equ	4078	;# 
   176     0FEF                     TOSH            equ	4079	;# 
   177     0011                     _PIR1bits       set	17
   178     008C                     _TRISA          set	140
   179     008E                     _TRISCbits      set	142
   180     0099                     _OSCCON         set	153
   181     010C                     _LATA           set	268
   182     018C                     _ANSELA         set	396
   183     018E                     _ANSELC         set	398
   184     0211                     _SSPBUF         set	529
   185     0214                     _SSPSTAT        set	532
   186     0215                     _SSPCON1        set	533
   187                           
   188                           	psect	cinit
   189     07FD                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FD                     __initialization:
   193     07FD                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FD                     __end_of__initialization:
   197     07FD  0020               	movlb	0
   198     07FE  3187  2FD3         	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0070                     __pcstackCOMMON:
   202     0070                     ?_spi_init:
   203     0070                     ?_spi_rv:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_spi_init:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_spi_rv:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220     0070                     	ds	1
   221     0071                     main@a:
   222                           
   223                           ; 1 bytes @ 0x1
   224     0071                     	ds	1
   225                           
   226                           	psect	maintext
   227     07D3                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 50 in file "newmain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  a               1    1[COMMON] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B1F/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels required when called: 1
   253 ;; This function calls:
   254 ;;		_spi_init
   255 ;;		_spi_rv
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     07D3                     _main:	
   262                           ;psect for function _main
   263                           
   264     07D3                     l587:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   267                           
   268                           
   269                           ;newmain.c: 51:     unsigned char a;;newmain.c: 52:     spi_init();
   270     07D3  3187  27C3  3187   	fcall	_spi_init
   271     07D6                     l589:
   272                           
   273                           ;newmain.c: 53:     ANSELA=0;
   274     07D6  0023               	movlb	3	; select bank3
   275     07D7  018C               	clrf	12	;volatile
   276     07D8                     l591:
   277                           
   278                           ;newmain.c: 54:     TRISA=0;
   279     07D8  0021               	movlb	1	; select bank1
   280     07D9  018C               	clrf	12	;volatile
   281     07DA                     l593:
   282                           
   283                           ;newmain.c: 55:     LATA=0;
   284     07DA  0022               	movlb	2	; select bank2
   285     07DB  018C               	clrf	12	;volatile
   286     07DC                     l595:
   287                           
   288                           ;newmain.c: 57:     a=spi_rv();
   289     07DC  3187  27BA  3187   	fcall	_spi_rv
   290     07DF  00F1               	movwf	main@a
   291     07E0                     l597:
   292                           
   293                           ;newmain.c: 58:     LATA=a;
   294     07E0  0871               	movf	main@a,w
   295     07E1  0022               	movlb	2	; select bank2
   296     07E2  008C               	movwf	12	;volatile
   297     07E3                     l599:
   298                           
   299                           ;newmain.c: 59:     _delay((unsigned long)((100)*(4000000/4000.0)));
   300     07E3  3082               	movlw	130
   301     07E4  00F0               	movwf	??_main
   302     07E5  30DE               	movlw	222
   303     07E6                     u47:
   304     07E6  0B89               	decfsz	9,f
   305     07E7  2FE6               	goto	u47
   306     07E8  0BF0               	decfsz	??_main,f
   307     07E9  2FE6               	goto	u47
   308     07EA                     l601:
   309                           
   310                           ;newmain.c: 60:     LATA=!a;
   311     07EA  0871               	movf	main@a,w
   312     07EB  1903               	btfsc	3,2
   313     07EC  2FEE               	goto	u21
   314     07ED  2FF0               	goto	u20
   315     07EE                     u21:
   316     07EE  3001               	movlw	1
   317     07EF  2FF1               	goto	u30
   318     07F0                     u20:
   319     07F0  3000               	movlw	0
   320     07F1                     u30:
   321     07F1  0022               	movlb	2	; select bank2
   322     07F2  008C               	movwf	12	;volatile
   323     07F3                     l603:
   324                           
   325                           ;newmain.c: 61:     _delay((unsigned long)((100)*(4000000/4000.0)));
   326     07F3  3082               	movlw	130
   327     07F4  00F0               	movwf	??_main
   328     07F5  30DE               	movlw	222
   329     07F6                     u57:
   330     07F6  0B89               	decfsz	9,f
   331     07F7  2FF6               	goto	u57
   332     07F8  0BF0               	decfsz	??_main,f
   333     07F9  2FF6               	goto	u57
   334     07FA  2FDC               	goto	l595
   335     07FB  3180  2802         	ljmp	start
   336     07FD                     __end_of_main:
   337                           
   338                           	psect	text1
   339     07BA                     __ptext1:	
   340 ;; *************** function _spi_rv *****************
   341 ;; Defined at:
   342 ;;		line 45 in file "newmain.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      unsigned char 
   349 ;; Registers used:
   350 ;;		wreg
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369     07BA                     _spi_rv:	
   370                           ;psect for function _spi_rv
   371                           
   372     07BA                     l581:	
   373                           ;incstack = 0
   374                           ; Regs used in _spi_rv: [wreg]
   375                           
   376     07BA                     l28:	
   377                           ;newmain.c: 46:     while(!PIR1bits.SSPIF);
   378                           
   379     07BA  0020               	movlb	0	; select bank0
   380     07BB  1D91               	btfss	17,3	;volatile
   381     07BC  2FBE               	goto	u11
   382     07BD  2FBF               	goto	u10
   383     07BE                     u11:
   384     07BE  2FBA               	goto	l28
   385     07BF                     u10:
   386     07BF                     l30:
   387                           
   388                           ;newmain.c: 47:     PIR1bits.SSPIF=0;
   389     07BF  1191               	bcf	17,3	;volatile
   390     07C0                     l583:
   391                           
   392                           ;newmain.c: 48:     return SSPBUF;
   393     07C0  0024               	movlb	4	; select bank4
   394     07C1  0811               	movf	17,w	;volatile
   395     07C2                     l31:
   396     07C2  0008               	return
   397     07C3                     __end_of_spi_rv:
   398                           
   399                           	psect	text2
   400     07C3                     __ptext2:	
   401 ;; *************** function _spi_init *****************
   402 ;; Defined at:
   403 ;;		line 33 in file "newmain.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		status,2
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     07C3                     _spi_init:	
   431                           ;psect for function _spi_init
   432                           
   433     07C3                     l565:	
   434                           ;incstack = 0
   435                           ; Regs used in _spi_init: [status,2]
   436                           
   437                           
   438                           ;newmain.c: 34:     ANSELC=0;
   439     07C3  0023               	movlb	3	; select bank3
   440     07C4  018E               	clrf	14	;volatile
   441     07C5                     l567:
   442                           
   443                           ;newmain.c: 35:     OSCCON=0x6A;
   444     07C5  306A               	movlw	106
   445     07C6  0021               	movlb	1	; select bank1
   446     07C7  0099               	movwf	25	;volatile
   447     07C8                     l569:
   448                           
   449                           ;newmain.c: 36:     TRISCbits.TRISC4=1;
   450     07C8  160E               	bsf	14,4	;volatile
   451     07C9                     l571:
   452                           
   453                           ;newmain.c: 37:     TRISCbits.TRISC5=0;
   454     07C9  128E               	bcf	14,5	;volatile
   455     07CA                     l573:
   456                           
   457                           ;newmain.c: 38:     TRISCbits.TRISC3=1;
   458     07CA  158E               	bsf	14,3	;volatile
   459     07CB                     l575:
   460                           
   461                           ;newmain.c: 39:     TRISCbits.TRISC2=1;
   462     07CB  150E               	bsf	14,2	;volatile
   463     07CC                     l577:
   464                           
   465                           ;newmain.c: 40:     SSPCON1=0x24;
   466     07CC  3024               	movlw	36
   467     07CD  0024               	movlb	4	; select bank4
   468     07CE  0095               	movwf	21	;volatile
   469                           
   470                           ;newmain.c: 41:     SSPSTAT=0x0;
   471     07CF  0194               	clrf	20	;volatile
   472     07D0                     l579:
   473                           
   474                           ;newmain.c: 42:     PIR1bits.SSPIF=0;
   475     07D0  0020               	movlb	0	; select bank0
   476     07D1  1191               	bcf	17,3	;volatile
   477     07D2                     l25:
   478     07D2  0008               	return
   479     07D3                     __end_of_spi_init:
   480     0003                     ___latbits      equ	3
   481     007E                     btemp           set	126	;btemp
   482     007E                     wtemp0          set	126
   483                           
   484                           	psect	config
   485                           
   486                           ;Config register CONFIG1 @ 0x8007
   487                           ;	Oscillator Selection
   488                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   489                           ;	Watchdog Timer Enable
   490                           ;	WDTE = ON, WDT enabled
   491                           ;	Power-up Timer Enable
   492                           ;	PWRTE = OFF, PWRT disabled
   493                           ;	MCLR Pin Function Select
   494                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   495                           ;	Flash Program Memory Code Protection
   496                           ;	CP = OFF, Program memory code protection is disabled
   497                           ;	Brown-out Reset Enable
   498                           ;	BOREN = OFF, Brown-out Reset disabled
   499                           ;	Clock Out Enable
   500                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   501                           ;	Internal/External Switchover
   502                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   503                           ;	Fail-Safe Clock Monitor Enable
   504                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   505     8007                     	org	32775
   506     8007  09FC               	dw	2556
   507                           
   508                           ;Config register CONFIG2 @ 0x8008
   509                           ;	Flash Memory Self-Write Protection
   510                           ;	WRT = OFF, Write protection off
   511                           ;	Voltage Regulator Capacitor Enable bit
   512                           ;	VCAPEN = OFF, VCAP pin function disabled
   513                           ;	Stack Overflow/Underflow Reset Enable
   514                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   515                           ;	Brown-out Reset Voltage Selection
   516                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   517                           ;	Low-Power Brown Out Reset
   518                           ;	LPBOR = OFF, Low-Power BOR is disabled
   519                           ;	Low-Voltage Programming Enable
   520                           ;	LVP = ON, Low-voltage programming enabled
   521     8008                     	org	32776
   522     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              0 COMMON     2     2      0
                           _spi_init
                             _spi_rv
 ---------------------------------------------------------------------------------
 (1) _spi_rv                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spi_init
   _spi_rv

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 22 21:42:15 2025

                     l30 07BF                       l31 07C2                       l25 07D2  
                     l28 07BA                       u10 07BF                       u11 07BE  
                     u20 07F0                       u21 07EE                       u30 07F1  
                     u47 07E6                       u57 07F6                      l601 07EA  
                    l603 07F3                      l571 07C9                      l573 07CA  
                    l565 07C3                      l581 07BA                      l575 07CB  
                    l567 07C5                      l583 07C0                      l591 07D8  
                    l577 07CC                      l569 07C8                      l593 07DA  
                    l579 07D0                      l595 07DC                      l587 07D3  
                    l597 07E0                      l589 07D6                      l599 07E3  
                    wreg 0009                     _LATA 010C                     _main 07D3  
                   btemp 007E                     start 0002                    ?_main 0070  
                  _TRISA 008C                    main@a 0071                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0070                   _ANSELA 018C                   _ANSELC 018E  
                 _OSCCON 0099                   _SSPBUF 0211                   _spi_rv 07BA  
       __end_of_spi_init 07D3  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 07D3                  ?_spi_rv 0070                  _SSPCON1 0215  
                _SSPSTAT 0214                ?_spi_init 0070                  __ptext1 07BA  
                __ptext2 07C3     end_of_initialization 07FD               ??_spi_init 0070  
              _TRISCbits 008E           __end_of_spi_rv 07C3      start_initialization 07FD  
               ??_spi_rv 0070                ___latbits 0003                 _PIR1bits 0011  
               _spi_init 07C3  
