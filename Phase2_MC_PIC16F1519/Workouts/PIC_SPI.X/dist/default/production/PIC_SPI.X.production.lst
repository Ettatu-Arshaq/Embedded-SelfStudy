

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 22 21:40:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 07/09/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1519 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     000E                     PORTC           equ	14	;# 
    75     000F                     PORTD           equ	15	;# 
    76     0010                     PORTE           equ	16	;# 
    77     0011                     PIR1            equ	17	;# 
    78     0012                     PIR2            equ	18	;# 
    79     0015                     TMR0            equ	21	;# 
    80     0016                     TMR1            equ	22	;# 
    81     0016                     TMR1L           equ	22	;# 
    82     0017                     TMR1H           equ	23	;# 
    83     0018                     T1CON           equ	24	;# 
    84     0019                     T1GCON          equ	25	;# 
    85     001A                     TMR2            equ	26	;# 
    86     001B                     PR2             equ	27	;# 
    87     001C                     T2CON           equ	28	;# 
    88     008C                     TRISA           equ	140	;# 
    89     008D                     TRISB           equ	141	;# 
    90     008E                     TRISC           equ	142	;# 
    91     008F                     TRISD           equ	143	;# 
    92     0090                     TRISE           equ	144	;# 
    93     0091                     PIE1            equ	145	;# 
    94     0092                     PIE2            equ	146	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0099                     OSCCON          equ	153	;# 
    99     009A                     OSCSTAT         equ	154	;# 
   100     009B                     ADRES           equ	155	;# 
   101     009B                     ADRESL          equ	155	;# 
   102     009C                     ADRESH          equ	156	;# 
   103     009D                     ADCON0          equ	157	;# 
   104     009E                     ADCON1          equ	158	;# 
   105     010C                     LATA            equ	268	;# 
   106     010D                     LATB            equ	269	;# 
   107     010E                     LATC            equ	270	;# 
   108     010F                     LATD            equ	271	;# 
   109     0110                     LATE            equ	272	;# 
   110     0116                     BORCON          equ	278	;# 
   111     0117                     FVRCON          equ	279	;# 
   112     011D                     APFCON          equ	285	;# 
   113     018C                     ANSELA          equ	396	;# 
   114     018D                     ANSELB          equ	397	;# 
   115     018E                     ANSELC          equ	398	;# 
   116     018F                     ANSELD          equ	399	;# 
   117     0190                     ANSELE          equ	400	;# 
   118     0191                     PMADR           equ	401	;# 
   119     0191                     PMADRL          equ	401	;# 
   120     0192                     PMADRH          equ	402	;# 
   121     0193                     PMDAT           equ	403	;# 
   122     0193                     PMDATL          equ	403	;# 
   123     0194                     PMDATH          equ	404	;# 
   124     0195                     PMCON1          equ	405	;# 
   125     0196                     PMCON2          equ	406	;# 
   126     0197                     VREGCON         equ	407	;# 
   127     0199                     RCREG           equ	409	;# 
   128     019A                     TXREG           equ	410	;# 
   129     019B                     SP1BRG          equ	411	;# 
   130     019B                     SP1BRGL         equ	411	;# 
   131     019B                     SPBRG           equ	411	;# 
   132     019B                     SPBRGL          equ	411	;# 
   133     019C                     SP1BRGH         equ	412	;# 
   134     019C                     SPBRGH          equ	412	;# 
   135     019D                     RCSTA           equ	413	;# 
   136     019E                     TXSTA           equ	414	;# 
   137     019F                     BAUDCON         equ	415	;# 
   138     020D                     WPUB            equ	525	;# 
   139     0210                     WPUE            equ	528	;# 
   140     0211                     SSPBUF          equ	529	;# 
   141     0211                     SSP1BUF         equ	529	;# 
   142     0212                     SSPADD          equ	530	;# 
   143     0212                     SSP1ADD         equ	530	;# 
   144     0213                     SSPMSK          equ	531	;# 
   145     0213                     SSP1MSK         equ	531	;# 
   146     0214                     SSPSTAT         equ	532	;# 
   147     0214                     SSP1STAT        equ	532	;# 
   148     0215                     SSPCON1         equ	533	;# 
   149     0215                     SSPCON          equ	533	;# 
   150     0215                     SSP1CON1        equ	533	;# 
   151     0216                     SSPCON2         equ	534	;# 
   152     0216                     SSP1CON2        equ	534	;# 
   153     0217                     SSPCON3         equ	535	;# 
   154     0217                     SSP1CON3        equ	535	;# 
   155     0291                     CCPR1           equ	657	;# 
   156     0291                     CCPR1L          equ	657	;# 
   157     0292                     CCPR1H          equ	658	;# 
   158     0293                     CCP1CON         equ	659	;# 
   159     0298                     CCPR2           equ	664	;# 
   160     0298                     CCPR2L          equ	664	;# 
   161     0299                     CCPR2H          equ	665	;# 
   162     029A                     CCP2CON         equ	666	;# 
   163     0394                     IOCBP           equ	916	;# 
   164     0395                     IOCBN           equ	917	;# 
   165     0396                     IOCBF           equ	918	;# 
   166     0FE4                     STATUS_SHAD     equ	4068	;# 
   167     0FE5                     WREG_SHAD       equ	4069	;# 
   168     0FE6                     BSR_SHAD        equ	4070	;# 
   169     0FE7                     PCLATH_SHAD     equ	4071	;# 
   170     0FE8                     FSR0L_SHAD      equ	4072	;# 
   171     0FE9                     FSR0H_SHAD      equ	4073	;# 
   172     0FEA                     FSR1L_SHAD      equ	4074	;# 
   173     0FEB                     FSR1H_SHAD      equ	4075	;# 
   174     0FED                     STKPTR          equ	4077	;# 
   175     0FEE                     TOSL            equ	4078	;# 
   176     0FEF                     TOSH            equ	4079	;# 
   177     0011                     _PIR1bits       set	17
   178     008E                     _TRISCbits      set	142
   179     0099                     _OSCCON         set	153
   180     010E                     _LATCbits       set	270
   181     018E                     _ANSELC         set	398
   182     0211                     _SSPBUF         set	529
   183     0214                     _SSPSTAT        set	532
   184     0215                     _SSPCON1        set	533
   185                           
   186                           	psect	cinit
   187     07FD                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FD                     __initialization:
   191     07FD                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FD                     __end_of__initialization:
   195     07FD  0020               	movlb	0
   196     07FE  3187  2FE1         	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_spi_init:
   201     0070                     ?_spi_tf:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     spi_tf@buff:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ??_spi_init:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ??_spi_tf:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	1
   219     0071                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x1
   222     0071                     	ds	1
   223                           
   224                           	psect	maintext
   225     07E1                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 50 in file "newmain.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  a               1    0        unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B1F/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   249 ;;Total ram usage:        1 bytes
   250 ;; Hardware stack levels required when called: 1
   251 ;; This function calls:
   252 ;;		_spi_init
   253 ;;		_spi_tf
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259     07E1                     _main:	
   260                           ;psect for function _main
   261                           
   262     07E1                     l581:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   265                           
   266                           
   267                           ;newmain.c: 51:     unsigned char a;;newmain.c: 52:     spi_init();
   268     07E1  3187  27D3  3187   	fcall	_spi_init
   269     07E4                     l583:
   270                           
   271                           ;newmain.c: 54:     LATCbits.LATC2=0;
   272     07E4  0022               	movlb	2	; select bank2
   273     07E5  110E               	bcf	14,2	;volatile
   274     07E6                     l585:
   275                           
   276                           ;newmain.c: 55:     _delay((unsigned long)((10)*(4000000/4000.0)));
   277     07E6  300D               	movlw	13
   278     07E7  00F1               	movwf	??_main
   279     07E8  30FC               	movlw	252
   280     07E9                     u27:
   281     07E9  0B89               	decfsz	9,f
   282     07EA  2FE9               	goto	u27
   283     07EB  0BF1               	decfsz	??_main,f
   284     07EC  2FE9               	goto	u27
   285     07ED                     l587:
   286     07ED  30AB               	movlw	171
   287     07EE  3187  27C6  3187   	fcall	_spi_tf
   288     07F1                     l589:
   289                           
   290                           ;newmain.c: 57:     LATCbits.LATC2=1;
   291     07F1  0022               	movlb	2	; select bank2
   292     07F2  150E               	bsf	14,2	;volatile
   293     07F3                     l591:
   294                           
   295                           ;newmain.c: 58:     _delay((unsigned long)((10)*(4000000/4000.0)));
   296     07F3  300D               	movlw	13
   297     07F4  00F1               	movwf	??_main
   298     07F5  30FC               	movlw	252
   299     07F6                     u37:
   300     07F6  0B89               	decfsz	9,f
   301     07F7  2FF6               	goto	u37
   302     07F8  0BF1               	decfsz	??_main,f
   303     07F9  2FF6               	goto	u37
   304     07FA  2FE4               	goto	l583
   305     07FB  3180  2802         	ljmp	start
   306     07FD                     __end_of_main:
   307                           
   308                           	psect	text1
   309     07C6                     __ptext1:	
   310 ;; *************** function _spi_tf *****************
   311 ;; Defined at:
   312 ;;		line 44 in file "newmain.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;  buff            1    wreg     unsigned char 
   315 ;; Auto vars:     Size  Location     Type
   316 ;;  buff            1    0[COMMON] unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      unsigned char 
   319 ;; Registers used:
   320 ;;		wreg
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   330 ;;Total ram usage:        1 bytes
   331 ;; Hardware stack levels used: 1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     07C6                     _spi_tf:	
   340                           ;psect for function _spi_tf
   341                           
   342                           
   343                           ;incstack = 0
   344                           ; Regs used in _spi_tf: [wreg]
   345                           ;spi_tf@buff stored from wreg
   346     07C6  00F0               	movwf	spi_tf@buff
   347     07C7                     l575:
   348                           
   349                           ;newmain.c: 45:     SSPBUF=buff;
   350     07C7  0870               	movf	spi_tf@buff,w
   351     07C8  0024               	movlb	4	; select bank4
   352     07C9  0091               	movwf	17	;volatile
   353     07CA                     l24:	
   354                           ;newmain.c: 46:     while(!PIR1bits.SSPIF);
   355                           
   356     07CA  0020               	movlb	0	; select bank0
   357     07CB  1D91               	btfss	17,3	;volatile
   358     07CC  2FCE               	goto	u11
   359     07CD  2FCF               	goto	u10
   360     07CE                     u11:
   361     07CE  2FCA               	goto	l24
   362     07CF                     u10:
   363     07CF                     l26:
   364                           
   365                           ;newmain.c: 47:     PIR1bits.SSPIF=0;
   366     07CF  1191               	bcf	17,3	;volatile
   367     07D0                     l577:
   368                           
   369                           ;newmain.c: 48:     return SSPBUF;
   370     07D0  0024               	movlb	4	; select bank4
   371     07D1  0811               	movf	17,w	;volatile
   372     07D2                     l27:
   373     07D2  0008               	return
   374     07D3                     __end_of_spi_tf:
   375                           
   376                           	psect	text2
   377     07D3                     __ptext2:	
   378 ;; *************** function _spi_init *****************
   379 ;; Defined at:
   380 ;;		line 33 in file "newmain.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		status,2
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     07D3                     _spi_init:	
   408                           ;psect for function _spi_init
   409                           
   410     07D3                     l561:	
   411                           ;incstack = 0
   412                           ; Regs used in _spi_init: [status,2]
   413                           
   414                           
   415                           ;newmain.c: 34:     ANSELC=0;
   416     07D3  0023               	movlb	3	; select bank3
   417     07D4  018E               	clrf	14	;volatile
   418     07D5                     l563:
   419                           
   420                           ;newmain.c: 35:     OSCCON=0x6A;
   421     07D5  306A               	movlw	106
   422     07D6  0021               	movlb	1	; select bank1
   423     07D7  0099               	movwf	25	;volatile
   424     07D8                     l565:
   425                           
   426                           ;newmain.c: 36:     TRISCbits.TRISC4=1;
   427     07D8  160E               	bsf	14,4	;volatile
   428     07D9                     l567:
   429                           
   430                           ;newmain.c: 37:     TRISCbits.TRISC5=0;
   431     07D9  128E               	bcf	14,5	;volatile
   432     07DA                     l569:
   433                           
   434                           ;newmain.c: 38:     TRISCbits.TRISC3=0;
   435     07DA  118E               	bcf	14,3	;volatile
   436     07DB                     l571:
   437                           
   438                           ;newmain.c: 39:     TRISCbits.TRISC2=0;
   439     07DB  110E               	bcf	14,2	;volatile
   440     07DC                     l573:
   441                           
   442                           ;newmain.c: 40:     SSPCON1=0x20;
   443     07DC  3020               	movlw	32
   444     07DD  0024               	movlb	4	; select bank4
   445     07DE  0095               	movwf	21	;volatile
   446                           
   447                           ;newmain.c: 41:     SSPSTAT=0x0;
   448     07DF  0194               	clrf	20	;volatile
   449     07E0                     l21:
   450     07E0  0008               	return
   451     07E1                     __end_of_spi_init:
   452     0003                     ___latbits      equ	3
   453     007E                     btemp           set	126	;btemp
   454     007E                     wtemp0          set	126
   455                           
   456                           	psect	config
   457                           
   458                           ;Config register CONFIG1 @ 0x8007
   459                           ;	Oscillator Selection
   460                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   461                           ;	Watchdog Timer Enable
   462                           ;	WDTE = ON, WDT enabled
   463                           ;	Power-up Timer Enable
   464                           ;	PWRTE = OFF, PWRT disabled
   465                           ;	MCLR Pin Function Select
   466                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   467                           ;	Flash Program Memory Code Protection
   468                           ;	CP = OFF, Program memory code protection is disabled
   469                           ;	Brown-out Reset Enable
   470                           ;	BOREN = OFF, Brown-out Reset disabled
   471                           ;	Clock Out Enable
   472                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   473                           ;	Internal/External Switchover
   474                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   475                           ;	Fail-Safe Clock Monitor Enable
   476                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   477     8007                     	org	32775
   478     8007  09FC               	dw	2556
   479                           
   480                           ;Config register CONFIG2 @ 0x8008
   481                           ;	Flash Memory Self-Write Protection
   482                           ;	WRT = OFF, Write protection off
   483                           ;	Voltage Regulator Capacitor Enable bit
   484                           ;	VCAPEN = OFF, VCAP pin function disabled
   485                           ;	Stack Overflow/Underflow Reset Enable
   486                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   487                           ;	Brown-out Reset Voltage Selection
   488                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   489                           ;	Low-Power Brown Out Reset
   490                           ;	LPBOR = OFF, Low-Power BOR is disabled
   491                           ;	Low-Voltage Programming Enable
   492                           ;	LVP = ON, Low-voltage programming enabled
   493     8008                     	org	32776
   494     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spi_tf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              1 COMMON     1     1      0
                           _spi_init
                             _spi_tf
 ---------------------------------------------------------------------------------
 (1) _spi_tf                                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spi_init
   _spi_tf

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 22 21:40:37 2025

                     l21 07E0                       l24 07CA                       l26 07CF  
                     l27 07D2                       u10 07CF                       u11 07CE  
                     u27 07E9                       u37 07F6                      l561 07D3  
                    l571 07DB                      l563 07D5                      l573 07DC  
                    l565 07D8                      l581 07E1                      l567 07D9  
                    l575 07C7                      l591 07F3                      l583 07E4  
                    l569 07DA                      l577 07D0                      l585 07E6  
                    l587 07ED                      l589 07F1                      wreg 0009  
                   _main 07E1                     btemp 007E                     start 0002  
                  ?_main 0070                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0071                   _ANSELC 018E  
                 _OSCCON 0099                   _SSPBUF 0211                   _spi_tf 07C6  
       __end_of_spi_init 07E1  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 07E1                  ?_spi_tf 0070                  _SSPCON1 0215  
                _SSPSTAT 0214                ?_spi_init 0070                  __ptext1 07C6  
                __ptext2 07D3     end_of_initialization 07FD               ??_spi_init 0070  
              _TRISCbits 008E           __end_of_spi_tf 07D3      start_initialization 07FD  
               ??_spi_tf 0070                ___latbits 0003                 _LATCbits 010E  
               _PIR1bits 0011               spi_tf@buff 0070                 _spi_init 07D3  
