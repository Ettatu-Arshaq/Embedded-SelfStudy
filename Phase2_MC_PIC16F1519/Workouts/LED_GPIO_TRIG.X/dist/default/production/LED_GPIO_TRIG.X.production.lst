

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Aug 29 21:08:58 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 07/09/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F1519 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0008                     bsr             equ	8
    45     0005                     fsr0h           equ	5
    46     0004                     fsr0l           equ	4
    47     0007                     fsr1h           equ	7
    48     0006                     fsr1l           equ	6
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0001                     indf1           equ	1
    52     000B                     intcon          equ	11
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0009                     wreg            equ	9
    58     0000                     INDF0           equ	0	;# 
    59     0001                     INDF1           equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR0L           equ	4	;# 
    63     0005                     FSR0H           equ	5	;# 
    64     0006                     FSR1L           equ	6	;# 
    65     0007                     FSR1H           equ	7	;# 
    66     0008                     BSR             equ	8	;# 
    67     0009                     WREG            equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PORTA           equ	12	;# 
    71     000D                     PORTB           equ	13	;# 
    72     000E                     PORTC           equ	14	;# 
    73     000F                     PORTD           equ	15	;# 
    74     0010                     PORTE           equ	16	;# 
    75     0011                     PIR1            equ	17	;# 
    76     0012                     PIR2            equ	18	;# 
    77     0015                     TMR0            equ	21	;# 
    78     0016                     TMR1            equ	22	;# 
    79     0016                     TMR1L           equ	22	;# 
    80     0017                     TMR1H           equ	23	;# 
    81     0018                     T1CON           equ	24	;# 
    82     0019                     T1GCON          equ	25	;# 
    83     001A                     TMR2            equ	26	;# 
    84     001B                     PR2             equ	27	;# 
    85     001C                     T2CON           equ	28	;# 
    86     008C                     TRISA           equ	140	;# 
    87     008D                     TRISB           equ	141	;# 
    88     008E                     TRISC           equ	142	;# 
    89     008F                     TRISD           equ	143	;# 
    90     0090                     TRISE           equ	144	;# 
    91     0091                     PIE1            equ	145	;# 
    92     0092                     PIE2            equ	146	;# 
    93     0095                     OPTION_REG      equ	149	;# 
    94     0096                     PCON            equ	150	;# 
    95     0097                     WDTCON          equ	151	;# 
    96     0099                     OSCCON          equ	153	;# 
    97     009A                     OSCSTAT         equ	154	;# 
    98     009B                     ADRES           equ	155	;# 
    99     009B                     ADRESL          equ	155	;# 
   100     009C                     ADRESH          equ	156	;# 
   101     009D                     ADCON0          equ	157	;# 
   102     009E                     ADCON1          equ	158	;# 
   103     010C                     LATA            equ	268	;# 
   104     010D                     LATB            equ	269	;# 
   105     010E                     LATC            equ	270	;# 
   106     010F                     LATD            equ	271	;# 
   107     0110                     LATE            equ	272	;# 
   108     0116                     BORCON          equ	278	;# 
   109     0117                     FVRCON          equ	279	;# 
   110     011D                     APFCON          equ	285	;# 
   111     018C                     ANSELA          equ	396	;# 
   112     018D                     ANSELB          equ	397	;# 
   113     018E                     ANSELC          equ	398	;# 
   114     018F                     ANSELD          equ	399	;# 
   115     0190                     ANSELE          equ	400	;# 
   116     0191                     PMADR           equ	401	;# 
   117     0191                     PMADRL          equ	401	;# 
   118     0192                     PMADRH          equ	402	;# 
   119     0193                     PMDAT           equ	403	;# 
   120     0193                     PMDATL          equ	403	;# 
   121     0194                     PMDATH          equ	404	;# 
   122     0195                     PMCON1          equ	405	;# 
   123     0196                     PMCON2          equ	406	;# 
   124     0197                     VREGCON         equ	407	;# 
   125     0199                     RCREG           equ	409	;# 
   126     019A                     TXREG           equ	410	;# 
   127     019B                     SP1BRG          equ	411	;# 
   128     019B                     SP1BRGL         equ	411	;# 
   129     019B                     SPBRG           equ	411	;# 
   130     019B                     SPBRGL          equ	411	;# 
   131     019C                     SP1BRGH         equ	412	;# 
   132     019C                     SPBRGH          equ	412	;# 
   133     019D                     RCSTA           equ	413	;# 
   134     019E                     TXSTA           equ	414	;# 
   135     019F                     BAUDCON         equ	415	;# 
   136     020D                     WPUB            equ	525	;# 
   137     0210                     WPUE            equ	528	;# 
   138     0211                     SSPBUF          equ	529	;# 
   139     0211                     SSP1BUF         equ	529	;# 
   140     0212                     SSPADD          equ	530	;# 
   141     0212                     SSP1ADD         equ	530	;# 
   142     0213                     SSPMSK          equ	531	;# 
   143     0213                     SSP1MSK         equ	531	;# 
   144     0214                     SSPSTAT         equ	532	;# 
   145     0214                     SSP1STAT        equ	532	;# 
   146     0215                     SSPCON1         equ	533	;# 
   147     0215                     SSPCON          equ	533	;# 
   148     0215                     SSP1CON1        equ	533	;# 
   149     0216                     SSPCON2         equ	534	;# 
   150     0216                     SSP1CON2        equ	534	;# 
   151     0217                     SSPCON3         equ	535	;# 
   152     0217                     SSP1CON3        equ	535	;# 
   153     0291                     CCPR1           equ	657	;# 
   154     0291                     CCPR1L          equ	657	;# 
   155     0292                     CCPR1H          equ	658	;# 
   156     0293                     CCP1CON         equ	659	;# 
   157     0298                     CCPR2           equ	664	;# 
   158     0298                     CCPR2L          equ	664	;# 
   159     0299                     CCPR2H          equ	665	;# 
   160     029A                     CCP2CON         equ	666	;# 
   161     0394                     IOCBP           equ	916	;# 
   162     0395                     IOCBN           equ	917	;# 
   163     0396                     IOCBF           equ	918	;# 
   164     0FE4                     STATUS_SHAD     equ	4068	;# 
   165     0FE5                     WREG_SHAD       equ	4069	;# 
   166     0FE6                     BSR_SHAD        equ	4070	;# 
   167     0FE7                     PCLATH_SHAD     equ	4071	;# 
   168     0FE8                     FSR0L_SHAD      equ	4072	;# 
   169     0FE9                     FSR0H_SHAD      equ	4073	;# 
   170     0FEA                     FSR1L_SHAD      equ	4074	;# 
   171     0FEB                     FSR1H_SHAD      equ	4075	;# 
   172     0FED                     STKPTR          equ	4077	;# 
   173     0FEE                     TOSL            equ	4078	;# 
   174     0FEF                     TOSH            equ	4079	;# 
   175     000C                     _PORTAbits      set	12
   176     008C                     _TRISAbits      set	140
   177     010C                     _LATAbits       set	268
   178     018C                     _ANSELAbits     set	396
   179                           
   180                           	psect	cinit
   181     07FD                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FD                     __initialization:
   185     07FD                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FD                     __end_of__initialization:
   189     07FD  0020               	movlb	0
   190     07FE  3187  2FCC         	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_main:
   195     0070                     ??_main:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 1 bytes @ 0x0
   200     0070                     	ds	1
   201     0071                     main@led_state:
   202                           
   203                           ; 1 bytes @ 0x1
   204     0071                     	ds	1
   205                           
   206                           	psect	maintext
   207     07CC                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 29 in file "newmain.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  led_state       1    1[COMMON] unsigned char 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, status,2, status,0
   222 ;; Tracked objects:
   223 ;;		On entry : B1F/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239     07CC                     _main:	
   240                           ;psect for function _main
   241                           
   242     07CC                     l549:	
   243                           ;incstack = 0
   244                           ; Regs used in _main: [wreg+status,2+status,0]
   245                           
   246                           
   247                           ;newmain.c: 31:     ANSELAbits.ANSA0 = 0;
   248     07CC  0023               	movlb	3	; select bank3
   249     07CD  100C               	bcf	12,0	;volatile
   250                           
   251                           ;newmain.c: 32:     ANSELAbits.ANSA1 = 0;
   252     07CE  108C               	bcf	12,1	;volatile
   253                           
   254                           ;newmain.c: 33:     TRISAbits.TRISA0 = 0;
   255     07CF  0021               	movlb	1	; select bank1
   256     07D0  100C               	bcf	12,0	;volatile
   257                           
   258                           ;newmain.c: 34:     TRISAbits.TRISA1 = 1;
   259     07D1  148C               	bsf	12,1	;volatile
   260                           
   261                           ;newmain.c: 36:     LATAbits.LATA0 = 0;
   262     07D2  0022               	movlb	2	; select bank2
   263     07D3  100C               	bcf	12,0	;volatile
   264     07D4                     l551:
   265                           
   266                           ;newmain.c: 37:     unsigned char led_state = 0;
   267     07D4  01F1               	clrf	main@led_state
   268     07D5                     l553:
   269                           
   270                           ;newmain.c: 40:         if (PORTAbits.RA1 == 1) {
   271     07D5  0020               	movlb	0	; select bank0
   272     07D6  1C8C               	btfss	12,1	;volatile
   273     07D7  2FD9               	goto	u11
   274     07D8  2FDA               	goto	u10
   275     07D9                     u11:
   276     07D9  2FD5               	goto	l553
   277     07DA                     u10:
   278     07DA                     l555:
   279                           
   280                           ;newmain.c: 41:             _delay((unsigned long)((50)*(4000000/4000.0)));
   281     07DA  3041               	movlw	65
   282     07DB  00F0               	movwf	??_main
   283     07DC  30EE               	movlw	238
   284     07DD                     u67:
   285     07DD  0B89               	decfsz	9,f
   286     07DE  2FDD               	goto	u67
   287     07DF  0BF0               	decfsz	??_main,f
   288     07E0  2FDD               	goto	u67
   289     07E1  3200               	nop2
   290     07E2                     l557:
   291                           
   292                           ;newmain.c: 42:             if (PORTAbits.RA1 == 1) {
   293     07E2  0020               	movlb	0	; select bank0
   294     07E3  1C8C               	btfss	12,1	;volatile
   295     07E4  2FE6               	goto	u21
   296     07E5  2FE7               	goto	u20
   297     07E6                     u21:
   298     07E6  2FD5               	goto	l553
   299     07E7                     u20:
   300     07E7                     l559:
   301                           
   302                           ;newmain.c: 43:                 led_state = !led_state;
   303     07E7  0871               	movf	main@led_state,w
   304     07E8  1903               	btfsc	3,2
   305     07E9  2FEB               	goto	u31
   306     07EA  2FED               	goto	u30
   307     07EB                     u31:
   308     07EB  3001               	movlw	1
   309     07EC  2FEE               	goto	u40
   310     07ED                     u30:
   311     07ED  3000               	movlw	0
   312     07EE                     u40:
   313     07EE  00F1               	movwf	main@led_state
   314     07EF                     l561:
   315                           
   316                           ;newmain.c: 44:                 LATAbits.LATA0 = led_state;
   317     07EF  0C71               	rrf	main@led_state,w
   318     07F0  0022               	movlb	2	; select bank2
   319     07F1  1C03               	skipc
   320     07F2  100C               	bcf	12,0	;volatile
   321     07F3  1803               	skipnc
   322     07F4  140C               	bsf	12,0	;volatile
   323     07F5                     l18:	
   324                           ;newmain.c: 45:                 while(PORTAbits.RA1 == 1);
   325                           
   326     07F5  0020               	movlb	0	; select bank0
   327     07F6  188C               	btfsc	12,1	;volatile
   328     07F7  2FF9               	goto	u51
   329     07F8  2FFA               	goto	u50
   330     07F9                     u51:
   331     07F9  2FF5               	goto	l18
   332     07FA                     u50:
   333     07FA  2FD5               	goto	l553
   334     07FB  3180  2802         	ljmp	start
   335     07FD                     __end_of_main:
   336     0003                     ___latbits      equ	3
   337     007E                     btemp           set	126	;btemp
   338     007E                     wtemp0          set	126
   339                           
   340                           	psect	config
   341                           
   342                           ;Config register CONFIG1 @ 0x8007
   343                           ;	Oscillator Selection
   344                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
   345                           ;	Watchdog Timer Enable
   346                           ;	WDTE = OFF, WDT disabled
   347                           ;	Power-up Timer Enable
   348                           ;	PWRTE = ON, PWRT enabled
   349                           ;	MCLR Pin Function Select
   350                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   351                           ;	Flash Program Memory Code Protection
   352                           ;	CP = OFF, Program memory code protection is disabled
   353                           ;	Brown-out Reset Enable
   354                           ;	BOREN = ON, Brown-out Reset enabled
   355                           ;	Clock Out Enable
   356                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   357                           ;	Internal/External Switchover
   358                           ;	IESO = 0x1, unprogrammed default
   359                           ;	Fail-Safe Clock Monitor Enable
   360                           ;	FCMEN = 0x1, unprogrammed default
   361     8007                     	org	32775
   362     8007  3FC2               	dw	16322
   363                           
   364                           ;Config register CONFIG2 @ 0x8008
   365                           ;	Flash Memory Self-Write Protection
   366                           ;	WRT = OFF, Write protection off
   367                           ;	Voltage Regulator Capacitor Enable bit
   368                           ;	VCAPEN = OFF, VCAP pin function disabled
   369                           ;	Stack Overflow/Underflow Reset Enable
   370                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   371                           ;	Brown-out Reset Voltage Selection
   372                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   373                           ;	Low-Power Brown Out Reset
   374                           ;	LPBOR = 0x1, unprogrammed default
   375                           ;	Low-Voltage Programming Enable
   376                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   377     8008                     	org	32776
   378     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Aug 29 21:08:58 2025

                     l18 07F5                       u10 07DA                       u11 07D9  
                     u20 07E7                       u21 07E6                       u30 07ED  
                     u31 07EB                       u40 07EE                       u50 07FA  
                     u51 07F9                       u67 07DD                      l551 07D4  
                    l561 07EF                      l553 07D5                      l555 07DA  
                    l557 07E2                      l549 07CC                      l559 07E7  
                    wreg 0009                     _main 07CC                     btemp 007E  
                   start 0002                    ?_main 0070                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0070            main@led_state 0071  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pmaintext 07CC     end_of_initialization 07FD  
              _PORTAbits 000C                _TRISAbits 008C      start_initialization 07FD  
              ___latbits 0003                 _LATAbits 010C               _ANSELAbits 018C  
