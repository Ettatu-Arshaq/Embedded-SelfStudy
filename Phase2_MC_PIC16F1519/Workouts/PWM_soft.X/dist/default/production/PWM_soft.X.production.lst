

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 29 13:24:49 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 07/09/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1519 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0008                     bsr             equ	8
    50     0005                     fsr0h           equ	5
    51     0004                     fsr0l           equ	4
    52     0007                     fsr1h           equ	7
    53     0006                     fsr1l           equ	6
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0001                     indf1           equ	1
    57     000B                     intcon          equ	11
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0009                     wreg            equ	9
    63     0000                     INDF0           equ	0	;# 
    64     0001                     INDF1           equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR0L           equ	4	;# 
    68     0005                     FSR0H           equ	5	;# 
    69     0006                     FSR1L           equ	6	;# 
    70     0007                     FSR1H           equ	7	;# 
    71     0008                     BSR             equ	8	;# 
    72     0009                     WREG            equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PORTA           equ	12	;# 
    76     000D                     PORTB           equ	13	;# 
    77     000E                     PORTC           equ	14	;# 
    78     000F                     PORTD           equ	15	;# 
    79     0010                     PORTE           equ	16	;# 
    80     0011                     PIR1            equ	17	;# 
    81     0012                     PIR2            equ	18	;# 
    82     0015                     TMR0            equ	21	;# 
    83     0016                     TMR1            equ	22	;# 
    84     0016                     TMR1L           equ	22	;# 
    85     0017                     TMR1H           equ	23	;# 
    86     0018                     T1CON           equ	24	;# 
    87     0019                     T1GCON          equ	25	;# 
    88     001A                     TMR2            equ	26	;# 
    89     001B                     PR2             equ	27	;# 
    90     001C                     T2CON           equ	28	;# 
    91     008C                     TRISA           equ	140	;# 
    92     008D                     TRISB           equ	141	;# 
    93     008E                     TRISC           equ	142	;# 
    94     008F                     TRISD           equ	143	;# 
    95     0090                     TRISE           equ	144	;# 
    96     0091                     PIE1            equ	145	;# 
    97     0092                     PIE2            equ	146	;# 
    98     0095                     OPTION_REG      equ	149	;# 
    99     0096                     PCON            equ	150	;# 
   100     0097                     WDTCON          equ	151	;# 
   101     0099                     OSCCON          equ	153	;# 
   102     009A                     OSCSTAT         equ	154	;# 
   103     009B                     ADRES           equ	155	;# 
   104     009B                     ADRESL          equ	155	;# 
   105     009C                     ADRESH          equ	156	;# 
   106     009D                     ADCON0          equ	157	;# 
   107     009E                     ADCON1          equ	158	;# 
   108     010C                     LATA            equ	268	;# 
   109     010D                     LATB            equ	269	;# 
   110     010E                     LATC            equ	270	;# 
   111     010F                     LATD            equ	271	;# 
   112     0110                     LATE            equ	272	;# 
   113     0116                     BORCON          equ	278	;# 
   114     0117                     FVRCON          equ	279	;# 
   115     011D                     APFCON          equ	285	;# 
   116     018C                     ANSELA          equ	396	;# 
   117     018D                     ANSELB          equ	397	;# 
   118     018E                     ANSELC          equ	398	;# 
   119     018F                     ANSELD          equ	399	;# 
   120     0190                     ANSELE          equ	400	;# 
   121     0191                     PMADR           equ	401	;# 
   122     0191                     PMADRL          equ	401	;# 
   123     0192                     PMADRH          equ	402	;# 
   124     0193                     PMDAT           equ	403	;# 
   125     0193                     PMDATL          equ	403	;# 
   126     0194                     PMDATH          equ	404	;# 
   127     0195                     PMCON1          equ	405	;# 
   128     0196                     PMCON2          equ	406	;# 
   129     0197                     VREGCON         equ	407	;# 
   130     0199                     RCREG           equ	409	;# 
   131     019A                     TXREG           equ	410	;# 
   132     019B                     SP1BRG          equ	411	;# 
   133     019B                     SP1BRGL         equ	411	;# 
   134     019B                     SPBRG           equ	411	;# 
   135     019B                     SPBRGL          equ	411	;# 
   136     019C                     SP1BRGH         equ	412	;# 
   137     019C                     SPBRGH          equ	412	;# 
   138     019D                     RCSTA           equ	413	;# 
   139     019E                     TXSTA           equ	414	;# 
   140     019F                     BAUDCON         equ	415	;# 
   141     020D                     WPUB            equ	525	;# 
   142     0210                     WPUE            equ	528	;# 
   143     0211                     SSPBUF          equ	529	;# 
   144     0211                     SSP1BUF         equ	529	;# 
   145     0212                     SSPADD          equ	530	;# 
   146     0212                     SSP1ADD         equ	530	;# 
   147     0213                     SSPMSK          equ	531	;# 
   148     0213                     SSP1MSK         equ	531	;# 
   149     0214                     SSPSTAT         equ	532	;# 
   150     0214                     SSP1STAT        equ	532	;# 
   151     0215                     SSPCON1         equ	533	;# 
   152     0215                     SSPCON          equ	533	;# 
   153     0215                     SSP1CON1        equ	533	;# 
   154     0216                     SSPCON2         equ	534	;# 
   155     0216                     SSP1CON2        equ	534	;# 
   156     0217                     SSPCON3         equ	535	;# 
   157     0217                     SSP1CON3        equ	535	;# 
   158     0291                     CCPR1           equ	657	;# 
   159     0291                     CCPR1L          equ	657	;# 
   160     0292                     CCPR1H          equ	658	;# 
   161     0293                     CCP1CON         equ	659	;# 
   162     0298                     CCPR2           equ	664	;# 
   163     0298                     CCPR2L          equ	664	;# 
   164     0299                     CCPR2H          equ	665	;# 
   165     029A                     CCP2CON         equ	666	;# 
   166     0394                     IOCBP           equ	916	;# 
   167     0395                     IOCBN           equ	917	;# 
   168     0396                     IOCBF           equ	918	;# 
   169     0FE4                     STATUS_SHAD     equ	4068	;# 
   170     0FE5                     WREG_SHAD       equ	4069	;# 
   171     0FE6                     BSR_SHAD        equ	4070	;# 
   172     0FE7                     PCLATH_SHAD     equ	4071	;# 
   173     0FE8                     FSR0L_SHAD      equ	4072	;# 
   174     0FE9                     FSR0H_SHAD      equ	4073	;# 
   175     0FEA                     FSR1L_SHAD      equ	4074	;# 
   176     0FEB                     FSR1H_SHAD      equ	4075	;# 
   177     0FED                     STKPTR          equ	4077	;# 
   178     0FEE                     TOSL            equ	4078	;# 
   179     0FEF                     TOSH            equ	4079	;# 
   180     008C                     _TRISAbits      set	140
   181     0099                     _OSCCON         set	153
   182     010C                     _LATAbits       set	268
   183     018C                     _ANSELAbits     set	396
   184                           
   185                           	psect	cinit
   186     07FD                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FD                     __initialization:
   190     07FD                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FD                     __end_of__initialization:
   194     07FD  0020               	movlb	0
   195     07FE  3187  2F35         	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_delay_us:
   200     0070                     ?_pwm_start:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?___wmul:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     delay_us@time:	
   210                           ; 2 bytes @ 0x0
   211                           
   212     0070                     ___wmul@multiplier:	
   213                           ; 2 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217     0070                     	ds	2
   218     0072                     ___wmul@multiplicand:
   219     0072                     ??_delay_us:	
   220                           ; 2 bytes @ 0x2
   221                           
   222                           
   223                           ; 1 bytes @ 0x2
   224     0072                     	ds	2
   225     0074                     ___wmul@product:
   226     0074                     ??___wmul:	
   227                           ; 2 bytes @ 0x4
   228                           
   229                           
   230                           ; 1 bytes @ 0x4
   231     0074                     	ds	2
   232     0076                     ?___awdiv:
   233     0076                     ___awdiv@divisor:	
   234                           ; 2 bytes @ 0x6
   235                           
   236                           
   237                           ; 2 bytes @ 0x6
   238     0076                     	ds	2
   239     0078                     ___awdiv@dividend:
   240                           
   241                           ; 2 bytes @ 0x8
   242     0078                     	ds	2
   243     007A                     ___awdiv@counter:
   244     007A                     ??___awdiv:	
   245                           ; 1 bytes @ 0xA
   246                           
   247                           
   248                           ; 1 bytes @ 0xA
   249     007A                     	ds	1
   250     007B                     ___awdiv@sign:
   251                           
   252                           ; 1 bytes @ 0xB
   253     007B                     	ds	1
   254     007C                     ___awdiv@quotient:
   255                           
   256                           ; 2 bytes @ 0xC
   257     007C                     	ds	2
   258                           
   259                           	psect	cstackBANK0
   260     0020                     __pcstackBANK0:
   261     0020                     ??_pwm_start:
   262                           
   263                           ; 1 bytes @ 0x0
   264     0020                     	ds	2
   265     0022                     pwm_start@off_time:
   266                           
   267                           ; 2 bytes @ 0x2
   268     0022                     	ds	2
   269     0024                     pwm_start@duty:
   270                           
   271                           ; 1 bytes @ 0x4
   272     0024                     	ds	1
   273     0025                     pwm_start@on_time:
   274                           
   275                           ; 2 bytes @ 0x5
   276     0025                     	ds	2
   277     0027                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x7
   280     0027                     	ds	2
   281                           
   282                           	psect	maintext
   283     0735                     __pmaintext:	
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 47 in file "newmain.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B1F/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   307 ;;Total ram usage:        2 bytes
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		_pwm_start
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316     0735                     _main:	
   317                           ;psect for function _main
   318                           
   319     0735                     l709:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   322                           
   323                           
   324                           ;newmain.c: 49:     OSCCON=0x6A;
   325     0735  306A               	movlw	106
   326     0736  0021               	movlb	1	; select bank1
   327     0737  0099               	movwf	25	;volatile
   328                           
   329                           ;newmain.c: 50:     ANSELAbits.ANSA0=0;
   330     0738  0023               	movlb	3	; select bank3
   331     0739  100C               	bcf	12,0	;volatile
   332                           
   333                           ;newmain.c: 51:     TRISAbits.TRISA0=0;
   334     073A  0021               	movlb	1	; select bank1
   335     073B  100C               	bcf	12,0	;volatile
   336                           
   337                           ;newmain.c: 52:     LATAbits.LATA0=0;
   338     073C  0022               	movlb	2	; select bank2
   339     073D  100C               	bcf	12,0	;volatile
   340     073E                     l711:
   341                           
   342                           ;newmain.c: 54:      pwm_start(20);
   343     073E  3014               	movlw	20
   344     073F  3187  2763  3187   	fcall	_pwm_start
   345     0742                     l713:
   346                           
   347                           ;newmain.c: 55:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   348     0742  3006               	movlw	6
   349     0743  0020               	movlb	0	; select bank0
   350     0744  00A8               	movwf	??_main+1
   351     0745  3013               	movlw	19
   352     0746  00A7               	movwf	??_main
   353     0747  30AD               	movlw	173
   354     0748                     u317:
   355     0748  0B89               	decfsz	9,f
   356     0749  2F48               	goto	u317
   357     074A  0BA7               	decfsz	??_main,f
   358     074B  2F48               	goto	u317
   359     074C  0BA8               	decfsz	??_main+1,f
   360     074D  2F48               	goto	u317
   361     074E  3200               	nop2
   362     074F                     l715:
   363                           
   364                           ;newmain.c: 56:      pwm_start(40);
   365     074F  3028               	movlw	40
   366     0750  3187  2763  3187   	fcall	_pwm_start
   367                           
   368                           ;newmain.c: 57:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   369     0753  3006               	movlw	6
   370     0754  0020               	movlb	0	; select bank0
   371     0755  00A8               	movwf	??_main+1
   372     0756  3013               	movlw	19
   373     0757  00A7               	movwf	??_main
   374     0758  30AD               	movlw	173
   375     0759                     u327:
   376     0759  0B89               	decfsz	9,f
   377     075A  2F59               	goto	u327
   378     075B  0BA7               	decfsz	??_main,f
   379     075C  2F59               	goto	u327
   380     075D  0BA8               	decfsz	??_main+1,f
   381     075E  2F59               	goto	u327
   382     075F  3200               	nop2
   383     0760  2F3E               	goto	l711
   384     0761  3180  2802         	ljmp	start
   385     0763                     __end_of_main:
   386                           
   387                           	psect	text1
   388     0763                     __ptext1:	
   389 ;; *************** function _pwm_start *****************
   390 ;; Defined at:
   391 ;;		line 38 in file "newmain.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  duty            1    wreg     unsigned char 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  duty            1    4[BANK0 ] unsigned char 
   396 ;;  on_time         2    5[BANK0 ] unsigned int 
   397 ;;  off_time        2    2[BANK0 ] unsigned int 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   408 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   410 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
   411 ;;Total ram usage:        7 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; Hardware stack levels required when called: 1
   414 ;; This function calls:
   415 ;;		___awdiv
   416 ;;		___wmul
   417 ;;		_delay_us
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423     0763                     _pwm_start:	
   424                           ;psect for function _pwm_start
   425                           
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _pwm_start: [wreg+status,2+status,0+pclath+cstack]
   429                           ;pwm_start@duty stored from wreg
   430     0763  0020               	movlb	0	; select bank0
   431     0764  00A4               	movwf	pwm_start@duty
   432     0765                     l697:
   433                           
   434                           ;newmain.c: 39:     unsigned int on_time =(duty*1000)/100;
   435     0765  3064               	movlw	100
   436     0766  00F6               	movwf	___awdiv@divisor
   437     0767  3000               	movlw	0
   438     0768  00F7               	movwf	___awdiv@divisor+1
   439     0769  0824               	movf	pwm_start@duty,w
   440     076A  00A0               	movwf	??_pwm_start
   441     076B  01A1               	clrf	??_pwm_start+1
   442     076C  0820               	movf	??_pwm_start,w
   443     076D  00F0               	movwf	___wmul@multiplier
   444     076E  0821               	movf	??_pwm_start+1,w
   445     076F  00F1               	movwf	___wmul@multiplier+1
   446     0770  30E8               	movlw	232
   447     0771  00F2               	movwf	___wmul@multiplicand
   448     0772  3003               	movlw	3
   449     0773  00F3               	movwf	___wmul@multiplicand+1
   450     0774  3187  2716  3187   	fcall	___wmul
   451     0777  0871               	movf	?___wmul+1,w
   452     0778  00F9               	movwf	___awdiv@dividend+1
   453     0779  0870               	movf	?___wmul,w
   454     077A  00F8               	movwf	___awdiv@dividend
   455     077B  3187  27A2  3187   	fcall	___awdiv
   456     077E  0877               	movf	?___awdiv+1,w
   457     077F  0020               	movlb	0	; select bank0
   458     0780  00A6               	movwf	pwm_start@on_time+1
   459     0781  0876               	movf	?___awdiv,w
   460     0782  00A5               	movwf	pwm_start@on_time
   461     0783                     l699:
   462                           
   463                           ;newmain.c: 40:     unsigned int off_time=1000-on_time;
   464     0783  30E8               	movlw	232
   465     0784  00A0               	movwf	??_pwm_start
   466     0785  3003               	movlw	3
   467     0786  00A1               	movwf	??_pwm_start+1
   468     0787  0825               	movf	pwm_start@on_time,w
   469     0788  0220               	subwf	??_pwm_start,w
   470     0789  00A2               	movwf	pwm_start@off_time
   471     078A  0826               	movf	pwm_start@on_time+1,w
   472     078B  3B21               	subwfb	??_pwm_start+1,w
   473     078C  00A3               	movwf	pwm_start@off_time+1
   474     078D                     l701:
   475                           
   476                           ;newmain.c: 41:     LATAbits.LATA0=1;
   477     078D  0022               	movlb	2	; select bank2
   478     078E  140C               	bsf	12,0	;volatile
   479     078F                     l703:
   480                           
   481                           ;newmain.c: 42:     delay_us(on_time);
   482     078F  0020               	movlb	0	; select bank0
   483     0790  0826               	movf	pwm_start@on_time+1,w
   484     0791  00F1               	movwf	delay_us@time+1
   485     0792  0825               	movf	pwm_start@on_time,w
   486     0793  00F0               	movwf	delay_us@time
   487     0794  3187  2707  3187   	fcall	_delay_us
   488     0797                     l705:
   489                           
   490                           ;newmain.c: 43:     LATAbits.LATA0=0;
   491     0797  0022               	movlb	2	; select bank2
   492     0798  100C               	bcf	12,0	;volatile
   493     0799                     l707:
   494                           
   495                           ;newmain.c: 44:     delay_us(off_time);
   496     0799  0020               	movlb	0	; select bank0
   497     079A  0823               	movf	pwm_start@off_time+1,w
   498     079B  00F1               	movwf	delay_us@time+1
   499     079C  0822               	movf	pwm_start@off_time,w
   500     079D  00F0               	movwf	delay_us@time
   501     079E  3187  2707  3187   	fcall	_delay_us
   502     07A1                     l19:
   503     07A1  0008               	return
   504     07A2                     __end_of_pwm_start:
   505                           
   506                           	psect	text2
   507     0707                     __ptext2:	
   508 ;; *************** function _delay_us *****************
   509 ;; Defined at:
   510 ;;		line 33 in file "newmain.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  time            2    0[COMMON] unsigned int 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_pwm_start
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0707                     _delay_us:	
   538                           ;psect for function _delay_us
   539                           
   540     0707                     l635:	
   541                           ;incstack = 0
   542                           ; Regs used in _delay_us: [wreg+status,2+status,0]
   543                           
   544                           
   545                           ;newmain.c: 34:     while(time--){
   546     0707  2F09               	goto	l637
   547     0708                     l14:
   548                           
   549                           ;newmain.c: 35:         _delay((unsigned long)((1)*(4000000/4000000.0)));
   550     0708  0000               	nop
   551     0709                     l637:
   552                           
   553                           ;newmain.c: 34:     while(time--){
   554     0709  3001               	movlw	1
   555     070A  02F0               	subwf	delay_us@time,f
   556     070B  3000               	movlw	0
   557     070C  3BF1               	subwfb	delay_us@time+1,f
   558     070D  0A70               	incf	delay_us@time,w
   559     070E  1D03               	skipz
   560     070F  2F14               	goto	u161
   561     0710  0A71               	incf	delay_us@time+1,w
   562     0711  1D03               	btfss	3,2
   563     0712  2F14               	goto	u161
   564     0713  2F15               	goto	u160
   565     0714                     u161:
   566     0714  2F08               	goto	l14
   567     0715                     u160:
   568     0715                     l16:
   569     0715  0008               	return
   570     0716                     __end_of_delay_us:
   571                           
   572                           	psect	text3
   573     0716                     __ptext3:	
   574 ;; *************** function ___wmul *****************
   575 ;; Defined at:
   576 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  multiplier      2    0[COMMON] unsigned int 
   579 ;;  multiplicand    2    2[COMMON] unsigned int 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  product         2    4[COMMON] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2    0[COMMON] unsigned int 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   595 ;;Total ram usage:        6 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_pwm_start
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     0716                     ___wmul:	
   605                           ;psect for function ___wmul
   606                           
   607     0716                     l639:	
   608                           ;incstack = 0
   609                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   610                           
   611     0716  01F4               	clrf	___wmul@product
   612     0717  01F5               	clrf	___wmul@product+1
   613     0718                     l641:
   614     0718  1C70               	btfss	___wmul@multiplier,0
   615     0719  2F1B               	goto	u171
   616     071A  2F1C               	goto	u170
   617     071B                     u171:
   618     071B  2F20               	goto	l95
   619     071C                     u170:
   620     071C                     l643:
   621     071C  0872               	movf	___wmul@multiplicand,w
   622     071D  07F4               	addwf	___wmul@product,f
   623     071E  0873               	movf	___wmul@multiplicand+1,w
   624     071F  3DF5               	addwfc	___wmul@product+1,f
   625     0720                     l95:
   626     0720  3001               	movlw	1
   627     0721                     u185:
   628     0721  35F2               	lslf	___wmul@multiplicand,f
   629     0722  0DF3               	rlf	___wmul@multiplicand+1,f
   630     0723  0B89               	decfsz	9,f
   631     0724  2F21               	goto	u185
   632     0725                     l645:
   633     0725  3001               	movlw	1
   634     0726                     u195:
   635     0726  36F1               	lsrf	___wmul@multiplier+1,f
   636     0727  0CF0               	rrf	___wmul@multiplier,f
   637     0728  0B89               	decfsz	9,f
   638     0729  2F26               	goto	u195
   639     072A                     l647:
   640     072A  0870               	movf	___wmul@multiplier,w
   641     072B  0471               	iorwf	___wmul@multiplier+1,w
   642     072C  1D03               	btfss	3,2
   643     072D  2F2F               	goto	u201
   644     072E  2F30               	goto	u200
   645     072F                     u201:
   646     072F  2F18               	goto	l641
   647     0730                     u200:
   648     0730                     l649:
   649     0730  0875               	movf	___wmul@product+1,w
   650     0731  00F1               	movwf	?___wmul+1
   651     0732  0874               	movf	___wmul@product,w
   652     0733  00F0               	movwf	?___wmul
   653     0734                     l97:
   654     0734  0008               	return
   655     0735                     __end_of___wmul:
   656                           
   657                           	psect	text4
   658     07A2                     __ptext4:	
   659 ;; *************** function ___awdiv *****************
   660 ;; Defined at:
   661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  divisor         2    6[COMMON] int 
   664 ;;  dividend        2    8[COMMON] int 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  quotient        2   12[COMMON] int 
   667 ;;  sign            1   11[COMMON] unsigned char 
   668 ;;  counter         1   10[COMMON] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  2    6[COMMON] int 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   679 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   682 ;;Total ram usage:        8 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_pwm_start
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691     07A2                     ___awdiv:	
   692                           ;psect for function ___awdiv
   693                           
   694     07A2                     l653:	
   695                           ;incstack = 0
   696                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   697                           
   698     07A2  01FB               	clrf	___awdiv@sign
   699     07A3                     l655:
   700     07A3  1FF7               	btfss	___awdiv@divisor+1,7
   701     07A4  2FA6               	goto	u211
   702     07A5  2FA7               	goto	u210
   703     07A6                     u211:
   704     07A6  2FAE               	goto	l661
   705     07A7                     u210:
   706     07A7                     l657:
   707     07A7  09F6               	comf	___awdiv@divisor,f
   708     07A8  09F7               	comf	___awdiv@divisor+1,f
   709     07A9  0AF6               	incf	___awdiv@divisor,f
   710     07AA  1903               	skipnz
   711     07AB  0AF7               	incf	___awdiv@divisor+1,f
   712     07AC                     l659:
   713     07AC  3001               	movlw	1
   714     07AD  00FB               	movwf	___awdiv@sign
   715     07AE                     l661:
   716     07AE  1FF9               	btfss	___awdiv@dividend+1,7
   717     07AF  2FB1               	goto	u221
   718     07B0  2FB2               	goto	u220
   719     07B1                     u221:
   720     07B1  2FB9               	goto	l667
   721     07B2                     u220:
   722     07B2                     l663:
   723     07B2  09F8               	comf	___awdiv@dividend,f
   724     07B3  09F9               	comf	___awdiv@dividend+1,f
   725     07B4  0AF8               	incf	___awdiv@dividend,f
   726     07B5  1903               	skipnz
   727     07B6  0AF9               	incf	___awdiv@dividend+1,f
   728     07B7                     l665:
   729     07B7  3001               	movlw	1
   730     07B8  06FB               	xorwf	___awdiv@sign,f
   731     07B9                     l667:
   732     07B9  01FC               	clrf	___awdiv@quotient
   733     07BA  01FD               	clrf	___awdiv@quotient+1
   734     07BB                     l669:
   735     07BB  0876               	movf	___awdiv@divisor,w
   736     07BC  0477               	iorwf	___awdiv@divisor+1,w
   737     07BD  1903               	btfsc	3,2
   738     07BE  2FC0               	goto	u231
   739     07BF  2FC1               	goto	u230
   740     07C0                     u231:
   741     07C0  2FEE               	goto	l689
   742     07C1                     u230:
   743     07C1                     l671:
   744     07C1  3001               	movlw	1
   745     07C2  00FA               	movwf	___awdiv@counter
   746     07C3  2FCB               	goto	l677
   747     07C4                     l673:
   748     07C4  3001               	movlw	1
   749     07C5                     u245:
   750     07C5  35F6               	lslf	___awdiv@divisor,f
   751     07C6  0DF7               	rlf	___awdiv@divisor+1,f
   752     07C7  0B89               	decfsz	9,f
   753     07C8  2FC5               	goto	u245
   754     07C9                     l675:
   755     07C9  3001               	movlw	1
   756     07CA  07FA               	addwf	___awdiv@counter,f
   757     07CB                     l677:
   758     07CB  1FF7               	btfss	___awdiv@divisor+1,7
   759     07CC  2FCE               	goto	u251
   760     07CD  2FCF               	goto	u250
   761     07CE                     u251:
   762     07CE  2FC4               	goto	l673
   763     07CF                     u250:
   764     07CF                     l679:
   765     07CF  3001               	movlw	1
   766     07D0                     u265:
   767     07D0  35FC               	lslf	___awdiv@quotient,f
   768     07D1  0DFD               	rlf	___awdiv@quotient+1,f
   769     07D2  0B89               	decfsz	9,f
   770     07D3  2FD0               	goto	u265
   771     07D4  0877               	movf	___awdiv@divisor+1,w
   772     07D5  0279               	subwf	___awdiv@dividend+1,w
   773     07D6  1D03               	skipz
   774     07D7  2FDA               	goto	u275
   775     07D8  0876               	movf	___awdiv@divisor,w
   776     07D9  0278               	subwf	___awdiv@dividend,w
   777     07DA                     u275:
   778     07DA  1C03               	skipc
   779     07DB  2FDD               	goto	u271
   780     07DC  2FDE               	goto	u270
   781     07DD                     u271:
   782     07DD  2FE3               	goto	l685
   783     07DE                     u270:
   784     07DE                     l681:
   785     07DE  0876               	movf	___awdiv@divisor,w
   786     07DF  02F8               	subwf	___awdiv@dividend,f
   787     07E0  0877               	movf	___awdiv@divisor+1,w
   788     07E1  3BF9               	subwfb	___awdiv@dividend+1,f
   789     07E2                     l683:
   790     07E2  147C               	bsf	___awdiv@quotient,0
   791     07E3                     l685:
   792     07E3  3001               	movlw	1
   793     07E4                     u285:
   794     07E4  36F7               	lsrf	___awdiv@divisor+1,f
   795     07E5  0CF6               	rrf	___awdiv@divisor,f
   796     07E6  0B89               	decfsz	9,f
   797     07E7  2FE4               	goto	u285
   798     07E8                     l687:
   799     07E8  3001               	movlw	1
   800     07E9  02FA               	subwf	___awdiv@counter,f
   801     07EA  1D03               	btfss	3,2
   802     07EB  2FED               	goto	u291
   803     07EC  2FEE               	goto	u290
   804     07ED                     u291:
   805     07ED  2FCF               	goto	l679
   806     07EE                     u290:
   807     07EE                     l689:
   808     07EE  087B               	movf	___awdiv@sign,w
   809     07EF  1903               	btfsc	3,2
   810     07F0  2FF2               	goto	u301
   811     07F1  2FF3               	goto	u300
   812     07F2                     u301:
   813     07F2  2FF8               	goto	l693
   814     07F3                     u300:
   815     07F3                     l691:
   816     07F3  09FC               	comf	___awdiv@quotient,f
   817     07F4  09FD               	comf	___awdiv@quotient+1,f
   818     07F5  0AFC               	incf	___awdiv@quotient,f
   819     07F6  1903               	skipnz
   820     07F7  0AFD               	incf	___awdiv@quotient+1,f
   821     07F8                     l693:
   822     07F8  087D               	movf	___awdiv@quotient+1,w
   823     07F9  00F7               	movwf	?___awdiv+1
   824     07FA  087C               	movf	___awdiv@quotient,w
   825     07FB  00F6               	movwf	?___awdiv
   826     07FC                     l248:
   827     07FC  0008               	return
   828     07FD                     __end_of___awdiv:
   829     0003                     ___latbits      equ	3
   830     007E                     btemp           set	126	;btemp
   831     007E                     wtemp0          set	126
   832                           
   833                           	psect	config
   834                           
   835                           ;Config register CONFIG1 @ 0x8007
   836                           ;	Oscillator Selection
   837                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   838                           ;	Watchdog Timer Enable
   839                           ;	WDTE = ON, WDT enabled
   840                           ;	Power-up Timer Enable
   841                           ;	PWRTE = OFF, PWRT disabled
   842                           ;	MCLR Pin Function Select
   843                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   844                           ;	Flash Program Memory Code Protection
   845                           ;	CP = OFF, Program memory code protection is disabled
   846                           ;	Brown-out Reset Enable
   847                           ;	BOREN = OFF, Brown-out Reset disabled
   848                           ;	Clock Out Enable
   849                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   850                           ;	Internal/External Switchover
   851                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   852                           ;	Fail-Safe Clock Monitor Enable
   853                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   854     8007                     	org	32775
   855     8007  09FC               	dw	2556
   856                           
   857                           ;Config register CONFIG2 @ 0x8008
   858                           ;	Flash Memory Self-Write Protection
   859                           ;	WRT = OFF, Write protection off
   860                           ;	Voltage Regulator Capacitor Enable bit
   861                           ;	VCAPEN = OFF, VCAP pin function disabled
   862                           ;	Stack Overflow/Underflow Reset Enable
   863                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   864                           ;	Brown-out Reset Voltage Selection
   865                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   866                           ;	Low-Power Brown Out Reset
   867                           ;	LPBOR = OFF, Low-Power BOR is disabled
   868                           ;	Low-Voltage Programming Enable
   869                           ;	LVP = ON, Low-voltage programming enabled
   870     8008                     	org	32776
   871     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _pwm_start->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_pwm_start

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     517
                                              7 BANK0      2     2      0
                          _pwm_start
 ---------------------------------------------------------------------------------
 (1) _pwm_start                                            7     7      0     517
                                              0 BANK0      7     7      0
                            ___awdiv
                             ___wmul
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pwm_start
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _delay_us

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9       9     11.2%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      23      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 29 13:24:49 2025

                     l14 0708                       l16 0715                       l19 07A1  
                     l95 0720                       l97 0734             ___awdiv@sign 007B  
    ___wmul@multiplicand 0072                      l248 07FC                      l701 078D  
                    l703 078F                      l711 073E                      l641 0718  
                    l705 0797                      l713 0742                      l643 071C  
                    l635 0707                      l707 0799                      l715 074F  
                    l661 07AE                      l653 07A2                      l645 0725  
                    l637 0709                      l709 0735                      l671 07C1  
                    l663 07B2                      l655 07A3                      l647 072A  
                    l639 0716                      l681 07DE                      l673 07C4  
                    l665 07B7                      l657 07A7                      l649 0730  
                    l691 07F3                      l683 07E2                      l675 07C9  
                    l667 07B9                      l659 07AC                      l693 07F8  
                    l685 07E3                      l677 07CB                      l669 07BB  
                    l687 07E8                      l679 07CF                      l689 07EE  
                    l697 0765                      l699 0783                      u200 0730  
                    u201 072F                      u210 07A7                      u211 07A6  
                    u300 07F3                      u220 07B2                      u301 07F2  
                    u221 07B1                      u230 07C1                      u231 07C0  
                    u160 0715                      u161 0714                      u250 07CF  
                    u170 071C                      u251 07CE                      u171 071B  
                    u245 07C5                      u317 0748                      u270 07DE  
                    u271 07DD                      u327 0759                      u265 07D0  
                    u185 0721                      u290 07EE                      u291 07ED  
                    u275 07DA                      u195 0726                      u285 07E4  
                    wreg 0009                     _main 0735                     btemp 007E  
                   start 0002                    ?_main 0070          __end_of___awdiv 07FD  
        ___awdiv@divisor 0076          ___awdiv@counter 007A                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 0763  
                 ??_main 0027         ___awdiv@dividend 0078                   _OSCCON 0099  
       __end_of_delay_us 0716                   ___wmul 0716                ??___awdiv 007A  
       ___awdiv@quotient 007C  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 0735                  ?___wmul 0070         pwm_start@on_time 0025  
              ?_delay_us 0070                  ___awdiv 07A2                  __ptext1 0763  
                __ptext2 0707                  __ptext3 0716                  __ptext4 07A2  
          pwm_start@duty 0024               ??_delay_us 0072     end_of_initialization 07FD  
      __end_of_pwm_start 07A2                _TRISAbits 008C           __end_of___wmul 0735  
    start_initialization 07FD                 ??___wmul 0074                ___latbits 0003  
          __pcstackBANK0 0020                 ?___awdiv 0076        pwm_start@off_time 0022  
         ___wmul@product 0074                 _LATAbits 010C        ___wmul@multiplier 0070  
              _pwm_start 0763             delay_us@time 0070               ?_pwm_start 0070  
             _ANSELAbits 018C                 _delay_us 0707              ??_pwm_start 0020  
