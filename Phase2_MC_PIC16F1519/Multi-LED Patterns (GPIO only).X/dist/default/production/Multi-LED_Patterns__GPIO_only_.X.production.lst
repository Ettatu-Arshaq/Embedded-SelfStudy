

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Sep 04 13:00:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 07/09/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1519 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     000E                     PORTC           equ	14	;# 
    75     000F                     PORTD           equ	15	;# 
    76     0010                     PORTE           equ	16	;# 
    77     0011                     PIR1            equ	17	;# 
    78     0012                     PIR2            equ	18	;# 
    79     0015                     TMR0            equ	21	;# 
    80     0016                     TMR1            equ	22	;# 
    81     0016                     TMR1L           equ	22	;# 
    82     0017                     TMR1H           equ	23	;# 
    83     0018                     T1CON           equ	24	;# 
    84     0019                     T1GCON          equ	25	;# 
    85     001A                     TMR2            equ	26	;# 
    86     001B                     PR2             equ	27	;# 
    87     001C                     T2CON           equ	28	;# 
    88     008C                     TRISA           equ	140	;# 
    89     008D                     TRISB           equ	141	;# 
    90     008E                     TRISC           equ	142	;# 
    91     008F                     TRISD           equ	143	;# 
    92     0090                     TRISE           equ	144	;# 
    93     0091                     PIE1            equ	145	;# 
    94     0092                     PIE2            equ	146	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0099                     OSCCON          equ	153	;# 
    99     009A                     OSCSTAT         equ	154	;# 
   100     009B                     ADRES           equ	155	;# 
   101     009B                     ADRESL          equ	155	;# 
   102     009C                     ADRESH          equ	156	;# 
   103     009D                     ADCON0          equ	157	;# 
   104     009E                     ADCON1          equ	158	;# 
   105     010C                     LATA            equ	268	;# 
   106     010D                     LATB            equ	269	;# 
   107     010E                     LATC            equ	270	;# 
   108     010F                     LATD            equ	271	;# 
   109     0110                     LATE            equ	272	;# 
   110     0116                     BORCON          equ	278	;# 
   111     0117                     FVRCON          equ	279	;# 
   112     011D                     APFCON          equ	285	;# 
   113     018C                     ANSELA          equ	396	;# 
   114     018D                     ANSELB          equ	397	;# 
   115     018E                     ANSELC          equ	398	;# 
   116     018F                     ANSELD          equ	399	;# 
   117     0190                     ANSELE          equ	400	;# 
   118     0191                     PMADR           equ	401	;# 
   119     0191                     PMADRL          equ	401	;# 
   120     0192                     PMADRH          equ	402	;# 
   121     0193                     PMDAT           equ	403	;# 
   122     0193                     PMDATL          equ	403	;# 
   123     0194                     PMDATH          equ	404	;# 
   124     0195                     PMCON1          equ	405	;# 
   125     0196                     PMCON2          equ	406	;# 
   126     0197                     VREGCON         equ	407	;# 
   127     0199                     RCREG           equ	409	;# 
   128     019A                     TXREG           equ	410	;# 
   129     019B                     SP1BRG          equ	411	;# 
   130     019B                     SP1BRGL         equ	411	;# 
   131     019B                     SPBRG           equ	411	;# 
   132     019B                     SPBRGL          equ	411	;# 
   133     019C                     SP1BRGH         equ	412	;# 
   134     019C                     SPBRGH          equ	412	;# 
   135     019D                     RCSTA           equ	413	;# 
   136     019E                     TXSTA           equ	414	;# 
   137     019F                     BAUDCON         equ	415	;# 
   138     020D                     WPUB            equ	525	;# 
   139     0210                     WPUE            equ	528	;# 
   140     0211                     SSPBUF          equ	529	;# 
   141     0211                     SSP1BUF         equ	529	;# 
   142     0212                     SSPADD          equ	530	;# 
   143     0212                     SSP1ADD         equ	530	;# 
   144     0213                     SSPMSK          equ	531	;# 
   145     0213                     SSP1MSK         equ	531	;# 
   146     0214                     SSPSTAT         equ	532	;# 
   147     0214                     SSP1STAT        equ	532	;# 
   148     0215                     SSPCON1         equ	533	;# 
   149     0215                     SSPCON          equ	533	;# 
   150     0215                     SSP1CON1        equ	533	;# 
   151     0216                     SSPCON2         equ	534	;# 
   152     0216                     SSP1CON2        equ	534	;# 
   153     0217                     SSPCON3         equ	535	;# 
   154     0217                     SSP1CON3        equ	535	;# 
   155     0291                     CCPR1           equ	657	;# 
   156     0291                     CCPR1L          equ	657	;# 
   157     0292                     CCPR1H          equ	658	;# 
   158     0293                     CCP1CON         equ	659	;# 
   159     0298                     CCPR2           equ	664	;# 
   160     0298                     CCPR2L          equ	664	;# 
   161     0299                     CCPR2H          equ	665	;# 
   162     029A                     CCP2CON         equ	666	;# 
   163     0394                     IOCBP           equ	916	;# 
   164     0395                     IOCBN           equ	917	;# 
   165     0396                     IOCBF           equ	918	;# 
   166     0FE4                     STATUS_SHAD     equ	4068	;# 
   167     0FE5                     WREG_SHAD       equ	4069	;# 
   168     0FE6                     BSR_SHAD        equ	4070	;# 
   169     0FE7                     PCLATH_SHAD     equ	4071	;# 
   170     0FE8                     FSR0L_SHAD      equ	4072	;# 
   171     0FE9                     FSR0H_SHAD      equ	4073	;# 
   172     0FEA                     FSR1L_SHAD      equ	4074	;# 
   173     0FEB                     FSR1H_SHAD      equ	4075	;# 
   174     0FED                     STKPTR          equ	4077	;# 
   175     0FEE                     TOSL            equ	4078	;# 
   176     0FEF                     TOSH            equ	4079	;# 
   177                           
   178                           	psect	idataBANK0
   179     0735                     __pidataBANK0:
   180                           
   181                           ;initializer for main@F1838
   182     0735  3401               	retlw	1
   183     0736  3402               	retlw	2
   184     0737  3404               	retlw	4
   185     0738  3408               	retlw	8
   186     000C                     _PORTAbits      set	12
   187     000C                     _PORTA          set	12
   188     008D                     _TRISB          set	141
   189     008C                     _TRISA          set	140
   190     010D                     _LATBbits       set	269
   191     010D                     _LATB           set	269
   192     018D                     _ANSELB         set	397
   193     018C                     _ANSELA         set	396
   194                           
   195                           	psect	cinit
   196     07ED                     start_initialization:	
   197                           ; #config settings
   198                           
   199     07ED                     __initialization:
   200                           
   201                           ; Initialize objects allocated to BANK0
   202     07ED  3187  2735  3187   	fcall	__pidataBANK0	;fetch initializer
   203     07F0  00A0               	movwf	__pdataBANK0& (0+127)
   204     07F1  3187  2736  3187   	fcall	__pidataBANK0+1	;fetch initializer
   205     07F4  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   206     07F5  3187  2737  3187   	fcall	__pidataBANK0+2	;fetch initializer
   207     07F8  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   208     07F9  3187  2738  3187   	fcall	__pidataBANK0+3	;fetch initializer
   209     07FC  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   210     07FD                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213     07FD                     __end_of__initialization:
   214     07FD  0020               	movlb	0
   215     07FE  3187  2F39         	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	dataBANK0
   218     0020                     __pdataBANK0:
   219     0020                     main@F1838:
   220     0020                     	ds	4
   221                           
   222                           	psect	cstackCOMMON
   223     0070                     __pcstackCOMMON:
   224     0070                     ?_main:
   225     0070                     ??_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 1 bytes @ 0x0
   230     0070                     	ds	1
   231     0071                     main@pat:
   232                           
   233                           ; 4 bytes @ 0x1
   234     0071                     	ds	4
   235     0075                     main@c1:
   236                           
   237                           ; 2 bytes @ 0x5
   238     0075                     	ds	2
   239     0077                     main@c2:
   240                           
   241                           ; 2 bytes @ 0x7
   242     0077                     	ds	2
   243     0079                     main@i:
   244                           
   245                           ; 2 bytes @ 0x9
   246     0079                     	ds	2
   247     007B                     main@i_102:
   248                           
   249                           ; 2 bytes @ 0xB
   250     007B                     	ds	2
   251                           
   252                           	psect	maintext
   253     0739                     __pmaintext:	
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 33 in file "newmain.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  i               2   11[COMMON] int 
   264 ;;  i               2    9[COMMON] int 
   265 ;;  pat             4    1[COMMON] unsigned char [4]
   266 ;;  c2              2    7[COMMON] int 
   267 ;;  c1              2    5[COMMON] int 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   272 ;; Tracked objects:
   273 ;;		On entry : B1F/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   278 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   280 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   281 ;;Total ram usage:       13 bytes
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289     0739                     _main:	
   290                           ;psect for function _main
   291                           
   292     0739                     l618:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   295                           
   296                           
   297                           ;newmain.c: 35:     ANSELA=0;
   298     0739  0023               	movlb	3	; select bank3
   299     073A  018C               	clrf	12	;volatile
   300     073B                     l620:
   301                           
   302                           ;newmain.c: 36:     TRISA=0xFF;
   303     073B  30FF               	movlw	255
   304     073C  0021               	movlb	1	; select bank1
   305     073D  008C               	movwf	12	;volatile
   306                           
   307                           ;newmain.c: 37:     ANSELB = 0;
   308     073E  0023               	movlb	3	; select bank3
   309     073F  018D               	clrf	13	;volatile
   310                           
   311                           ;newmain.c: 38:     TRISB = 0;
   312     0740  0021               	movlb	1	; select bank1
   313     0741  018D               	clrf	13	;volatile
   314                           
   315                           ;newmain.c: 39:     LATB= 0;
   316     0742  0022               	movlb	2	; select bank2
   317     0743  018D               	clrf	13	;volatile
   318                           
   319                           ;newmain.c: 40:     PORTA=0;
   320     0744  0020               	movlb	0	; select bank0
   321     0745  018C               	clrf	12	;volatile
   322     0746                     l622:
   323                           
   324                           ;newmain.c: 42:         if(PORTAbits.RA0==1){
   325     0746  0020               	movlb	0	; select bank0
   326     0747  1C0C               	btfss	12,0	;volatile
   327     0748  2F4A               	goto	u141
   328     0749  2F4B               	goto	u140
   329     074A                     u141:
   330     074A  2F6B               	goto	l24
   331     074B                     u140:
   332     074B                     l624:
   333                           
   334                           ;newmain.c: 43:             for(int i=7;i>=0;i--){
   335     074B  3007               	movlw	7
   336     074C  00F9               	movwf	main@i
   337     074D  3000               	movlw	0
   338     074E  00FA               	movwf	main@i+1
   339     074F                     l630:
   340                           
   341                           ;newmain.c: 44:                 LATB=(1<<(7-i));
   342     074F  3001               	movlw	1
   343     0750  00F0               	movwf	??_main
   344     0751  0879               	movf	main@i,w
   345     0752  3C07               	sublw	7
   346     0753  0A89               	incf	9,f
   347     0754  2F56               	goto	u154
   348     0755                     u155:
   349     0755  35F0               	lslf	??_main,f
   350     0756                     u154:
   351     0756  0B89               	decfsz	9,f
   352     0757  2F55               	goto	u155
   353     0758  0870               	movf	??_main,w
   354     0759  0022               	movlb	2	; select bank2
   355     075A  008D               	movwf	13	;volatile
   356     075B                     l632:
   357                           
   358                           ;newmain.c: 45:                _delay((unsigned long)((500)*(100000/4000.0)));
   359     075B  3011               	movlw	17
   360     075C  00F0               	movwf	??_main
   361     075D  303A               	movlw	58
   362     075E                     u277:
   363     075E  0B89               	decfsz	9,f
   364     075F  2F5E               	goto	u277
   365     0760  0BF0               	decfsz	??_main,f
   366     0761  2F5E               	goto	u277
   367     0762  3200               	nop2
   368     0763                     l634:
   369                           
   370                           ;newmain.c: 46:             }
   371     0763  30FF               	movlw	255
   372     0764  07F9               	addwf	main@i,f
   373     0765  30FF               	movlw	255
   374     0766  3DFA               	addwfc	main@i+1,f
   375     0767                     l636:
   376     0767  1FFA               	btfss	main@i+1,7
   377     0768  2F6A               	goto	u161
   378     0769  2F6B               	goto	u160
   379     076A                     u161:
   380     076A  2F4F               	goto	l630
   381     076B                     u160:
   382     076B                     l24:	
   383                           ;newmain.c: 47:         }
   384                           
   385                           
   386                           ;newmain.c: 48:         if(PORTAbits.RA1==1){
   387     076B  0020               	movlb	0	; select bank0
   388     076C  1C8C               	btfss	12,1	;volatile
   389     076D  2F6F               	goto	u171
   390     076E  2F70               	goto	u170
   391     076F                     u171:
   392     076F  2FBC               	goto	l27
   393     0770                     u170:
   394     0770                     l638:
   395                           
   396                           ;newmain.c: 49:             int c1=0,c2=0;
   397     0770  01F5               	clrf	main@c1
   398     0771  01F6               	clrf	main@c1+1
   399     0772  01F7               	clrf	main@c2
   400     0773  01F8               	clrf	main@c2+1
   401                           
   402                           ;newmain.c: 50:             while(PORTAbits.RA1==1) {
   403     0774  2FB7               	goto	l652
   404     0775                     l640:
   405                           
   406                           ;newmain.c: 51:                 _delay((unsigned long)((1)*(100000/4000.0)));
   407     0775  3008               	movlw	8
   408     0776                     u287:
   409     0776  0B89               	decfsz	9,f
   410     0777  2F76               	goto	u287
   411     0778  0000               	nop
   412                           
   413                           ;newmain.c: 52:                 c1++;
   414     0779  3001               	movlw	1
   415     077A  07F5               	addwf	main@c1,f
   416     077B  3000               	movlw	0
   417     077C  3DF6               	addwfc	main@c1+1,f
   418                           
   419                           ;newmain.c: 53:                 c2++;
   420     077D  3001               	movlw	1
   421     077E  07F7               	addwf	main@c2,f
   422     077F  3000               	movlw	0
   423     0780  3DF8               	addwfc	main@c2+1,f
   424                           
   425                           ;newmain.c: 55:                 if(c1 >= 200) {
   426     0781  0876               	movf	main@c1+1,w
   427     0782  3A80               	xorlw	128
   428     0783  00F0               	movwf	??_main
   429     0784  3080               	movlw	128
   430     0785  0270               	subwf	??_main,w
   431     0786  1D03               	skipz
   432     0787  2F8A               	goto	u185
   433     0788  30C8               	movlw	200
   434     0789  0275               	subwf	main@c1,w
   435     078A                     u185:
   436     078A  1C03               	skipc
   437     078B  2F8D               	goto	u181
   438     078C  2F8E               	goto	u180
   439     078D                     u181:
   440     078D  2F9C               	goto	l646
   441     078E                     u180:
   442     078E                     l642:
   443                           
   444                           ;newmain.c: 56:                     LATBbits.LATB0 = !LATBbits.LATB0;
   445     078E  1003               	clrc
   446     078F  0022               	movlb	2	; select bank2
   447     0790  1C0D               	btfss	13,0	;volatile
   448     0791  1403               	setc
   449     0792  1803               	btfsc	3,0
   450     0793  2F95               	goto	u191
   451     0794  2F98               	goto	u190
   452     0795                     u191:
   453     0795  0022               	movlb	2	; select bank2
   454     0796  140D               	bsf	13,0	;volatile
   455     0797  2F9A               	goto	u204
   456     0798                     u190:
   457     0798  0022               	movlb	2	; select bank2
   458     0799  100D               	bcf	13,0	;volatile
   459     079A                     u204:
   460     079A                     l644:
   461                           
   462                           ;newmain.c: 57:                     c1 = 0;
   463     079A  01F5               	clrf	main@c1
   464     079B  01F6               	clrf	main@c1+1
   465     079C                     l646:
   466                           
   467                           ;newmain.c: 60:                 if(c2 >= 500) {
   468     079C  0878               	movf	main@c2+1,w
   469     079D  3A80               	xorlw	128
   470     079E  00F0               	movwf	??_main
   471     079F  3081               	movlw	129
   472     07A0  0270               	subwf	??_main,w
   473     07A1  1D03               	skipz
   474     07A2  2FA5               	goto	u215
   475     07A3  30F4               	movlw	244
   476     07A4  0277               	subwf	main@c2,w
   477     07A5                     u215:
   478     07A5  1C03               	skipc
   479     07A6  2FA8               	goto	u211
   480     07A7  2FA9               	goto	u210
   481     07A8                     u211:
   482     07A8  2FB7               	goto	l652
   483     07A9                     u210:
   484     07A9                     l648:
   485                           
   486                           ;newmain.c: 61:                     LATBbits.LATB1 = !LATBbits.LATB1;
   487     07A9  1003               	clrc
   488     07AA  0022               	movlb	2	; select bank2
   489     07AB  1C8D               	btfss	13,1	;volatile
   490     07AC  1403               	setc
   491     07AD  1803               	btfsc	3,0
   492     07AE  2FB0               	goto	u221
   493     07AF  2FB3               	goto	u220
   494     07B0                     u221:
   495     07B0  0022               	movlb	2	; select bank2
   496     07B1  148D               	bsf	13,1	;volatile
   497     07B2  2FB5               	goto	u234
   498     07B3                     u220:
   499     07B3  0022               	movlb	2	; select bank2
   500     07B4  108D               	bcf	13,1	;volatile
   501     07B5                     u234:
   502     07B5                     l650:
   503                           
   504                           ;newmain.c: 62:                     c2 = 0;
   505     07B5  01F7               	clrf	main@c2
   506     07B6  01F8               	clrf	main@c2+1
   507     07B7                     l652:
   508                           
   509                           ;newmain.c: 50:             while(PORTAbits.RA1==1) {
   510     07B7  0020               	movlb	0	; select bank0
   511     07B8  188C               	btfsc	12,1	;volatile
   512     07B9  2FBB               	goto	u241
   513     07BA  2FBC               	goto	u240
   514     07BB                     u241:
   515     07BB  2F75               	goto	l640
   516     07BC                     u240:
   517     07BC                     l27:	
   518                           ;newmain.c: 66:         }
   519                           
   520                           
   521                           ;newmain.c: 67:         if(PORTAbits.RA2==1){
   522     07BC  1D0C               	btfss	12,2	;volatile
   523     07BD  2FBF               	goto	u251
   524     07BE  2FC0               	goto	u250
   525     07BF                     u251:
   526     07BF  2F46               	goto	l622
   527     07C0                     u250:
   528     07C0                     l654:
   529                           
   530                           ;newmain.c: 68:             uint8_t pat[] = {0b0001,0b0010,0b0100,0b1000};
   531     07C0  0823               	movf	main@F1838+3,w
   532     07C1  00F4               	movwf	main@pat+3
   533     07C2  0822               	movf	main@F1838+2,w
   534     07C3  00F3               	movwf	main@pat+2
   535     07C4  0821               	movf	main@F1838+1,w
   536     07C5  00F2               	movwf	main@pat+1
   537     07C6  0820               	movf	main@F1838,w
   538     07C7  00F1               	movwf	main@pat
   539     07C8                     l656:
   540                           
   541                           ;newmain.c: 69:             for(int i=0;i<4;i++){
   542     07C8  01FB               	clrf	main@i_102
   543     07C9  01FC               	clrf	main@i_102+1
   544     07CA                     l662:
   545                           
   546                           ;newmain.c: 70:                 LATB=pat[i];
   547     07CA  087B               	movf	main@i_102,w
   548     07CB  3E71               	addlw	(low (main@pat| 0))& (0+255)
   549     07CC  0086               	movwf	6
   550     07CD  0187               	clrf	7
   551     07CE  0801               	movf	1,w
   552     07CF  0022               	movlb	2	; select bank2
   553     07D0  008D               	movwf	13	;volatile
   554     07D1                     l664:
   555                           
   556                           ;newmain.c: 71:                 _delay((unsigned long)((500)*(100000/4000.0)));
   557     07D1  3011               	movlw	17
   558     07D2  00F0               	movwf	??_main
   559     07D3  303A               	movlw	58
   560     07D4                     u297:
   561     07D4  0B89               	decfsz	9,f
   562     07D5  2FD4               	goto	u297
   563     07D6  0BF0               	decfsz	??_main,f
   564     07D7  2FD4               	goto	u297
   565     07D8  3200               	nop2
   566     07D9                     l666:
   567                           
   568                           ;newmain.c: 72:             }
   569     07D9  3001               	movlw	1
   570     07DA  07FB               	addwf	main@i_102,f
   571     07DB  3000               	movlw	0
   572     07DC  3DFC               	addwfc	main@i_102+1,f
   573     07DD                     l668:
   574     07DD  087C               	movf	main@i_102+1,w
   575     07DE  3A80               	xorlw	128
   576     07DF  00F0               	movwf	??_main
   577     07E0  3080               	movlw	128
   578     07E1  0270               	subwf	??_main,w
   579     07E2  1D03               	skipz
   580     07E3  2FE6               	goto	u265
   581     07E4  3004               	movlw	4
   582     07E5  027B               	subwf	main@i_102,w
   583     07E6                     u265:
   584     07E6  1C03               	skipc
   585     07E7  2FE9               	goto	u261
   586     07E8  2FEA               	goto	u260
   587     07E9                     u261:
   588     07E9  2FCA               	goto	l662
   589     07EA                     u260:
   590     07EA  2F46               	goto	l622
   591     07EB  3180  2802         	ljmp	start
   592     07ED                     __end_of_main:
   593     0003                     ___latbits      equ	3
   594     007E                     btemp           set	126	;btemp
   595     007E                     wtemp0          set	126
   596                           
   597                           	psect	config
   598                           
   599                           ;Config register CONFIG1 @ 0x8007
   600                           ;	Oscillator Selection
   601                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   602                           ;	Watchdog Timer Enable
   603                           ;	WDTE = OFF, WDT disabled
   604                           ;	Power-up Timer Enable
   605                           ;	PWRTE = OFF, PWRT disabled
   606                           ;	MCLR Pin Function Select
   607                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   608                           ;	Flash Program Memory Code Protection
   609                           ;	CP = OFF, Program memory code protection is disabled
   610                           ;	Brown-out Reset Enable
   611                           ;	BOREN = OFF, Brown-out Reset disabled
   612                           ;	Clock Out Enable
   613                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   614                           ;	Internal/External Switchover
   615                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   616                           ;	Fail-Safe Clock Monitor Enable
   617                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   618     8007                     	org	32775
   619     8007  09E4               	dw	2532
   620                           
   621                           ;Config register CONFIG2 @ 0x8008
   622                           ;	Flash Memory Self-Write Protection
   623                           ;	WRT = OFF, Write protection off
   624                           ;	Voltage Regulator Capacitor Enable bit
   625                           ;	VCAPEN = OFF, VCAP pin function disabled
   626                           ;	Stack Overflow/Underflow Reset Enable
   627                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   628                           ;	Brown-out Reset Voltage Selection
   629                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   630                           ;	Low-Power Brown Out Reset
   631                           ;	LPBOR = OFF, Low-Power BOR is disabled
   632                           ;	Low-Voltage Programming Enable
   633                           ;	LVP = ON, Low-voltage programming enabled
   634     8008                     	org	32776
   635     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     210
                                              0 COMMON    13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     13      13     92.9%
BANK0               80      0       4      5.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      17      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Sep 04 13:00:18 2025

                     l24 076B                       l27 07BC                      l620 073B  
                    l630 074F                      l622 0746                      l640 0775  
                    l632 075B                      l624 074B                      l650 07B5  
                    l642 078E                      l634 0763                      l618 0739  
                    l644 079A                      l652 07B7                      l636 0767  
                    l662 07CA                      l654 07C0                      l646 079C  
                    l638 0770                      l664 07D1                      l656 07C8  
                    l648 07A9                      l666 07D9                      l668 07DD  
                    u210 07A9                      u211 07A8                      u220 07B3  
                    u204 079A                      u140 074B                      u221 07B0  
                    u141 074A                      u215 07A5                      u240 07BC  
                    u160 076B                      u241 07BB                      u161 076A  
                    u250 07C0                      u234 07B5                      u170 0770  
                    u154 0756                      u251 07BF                      u171 076F  
                    u155 0755                      u260 07EA                      u180 078E  
                    u261 07E9                      u181 078D                      u190 0798  
                    u191 0795                      u265 07E6                      u185 078A  
                    u277 075E                      u287 0776                      u297 07D4  
                    wreg 0009                     _LATB 010D                     _main 0739  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_main 0070  
                  _PORTA 000C                    _TRISA 008C                    _TRISB 008D  
                  main@i 0079                    status 0003                    wtemp0 007E  
        __initialization 07ED             __end_of_main 07ED                   ??_main 0070  
                 _ANSELA 018C                   _ANSELB 018D                   main@c1 0075  
                 main@c2 0077  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 0735               __pmaintext 0739                  main@pat 0071  
   end_of_initialization 07FD                _PORTAbits 000C      start_initialization 07ED  
            __pdataBANK0 0020                ___latbits 0003                 _LATBbits 010D  
              main@F1838 0020                main@i_102 007B  
