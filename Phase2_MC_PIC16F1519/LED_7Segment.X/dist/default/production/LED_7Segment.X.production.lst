

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Sep 14 15:46:49 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 07/09/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1519 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0008                     bsr             equ	8
    48     0005                     fsr0h           equ	5
    49     0004                     fsr0l           equ	4
    50     0007                     fsr1h           equ	7
    51     0006                     fsr1l           equ	6
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0001                     indf1           equ	1
    55     000B                     intcon          equ	11
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0009                     wreg            equ	9
    61     0000                     INDF0           equ	0	;# 
    62     0001                     INDF1           equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR0L           equ	4	;# 
    66     0005                     FSR0H           equ	5	;# 
    67     0006                     FSR1L           equ	6	;# 
    68     0007                     FSR1H           equ	7	;# 
    69     0008                     BSR             equ	8	;# 
    70     0009                     WREG            equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PORTA           equ	12	;# 
    74     000D                     PORTB           equ	13	;# 
    75     000E                     PORTC           equ	14	;# 
    76     000F                     PORTD           equ	15	;# 
    77     0010                     PORTE           equ	16	;# 
    78     0011                     PIR1            equ	17	;# 
    79     0012                     PIR2            equ	18	;# 
    80     0015                     TMR0            equ	21	;# 
    81     0016                     TMR1            equ	22	;# 
    82     0016                     TMR1L           equ	22	;# 
    83     0017                     TMR1H           equ	23	;# 
    84     0018                     T1CON           equ	24	;# 
    85     0019                     T1GCON          equ	25	;# 
    86     001A                     TMR2            equ	26	;# 
    87     001B                     PR2             equ	27	;# 
    88     001C                     T2CON           equ	28	;# 
    89     008C                     TRISA           equ	140	;# 
    90     008D                     TRISB           equ	141	;# 
    91     008E                     TRISC           equ	142	;# 
    92     008F                     TRISD           equ	143	;# 
    93     0090                     TRISE           equ	144	;# 
    94     0091                     PIE1            equ	145	;# 
    95     0092                     PIE2            equ	146	;# 
    96     0095                     OPTION_REG      equ	149	;# 
    97     0096                     PCON            equ	150	;# 
    98     0097                     WDTCON          equ	151	;# 
    99     0099                     OSCCON          equ	153	;# 
   100     009A                     OSCSTAT         equ	154	;# 
   101     009B                     ADRES           equ	155	;# 
   102     009B                     ADRESL          equ	155	;# 
   103     009C                     ADRESH          equ	156	;# 
   104     009D                     ADCON0          equ	157	;# 
   105     009E                     ADCON1          equ	158	;# 
   106     010C                     LATA            equ	268	;# 
   107     010D                     LATB            equ	269	;# 
   108     010E                     LATC            equ	270	;# 
   109     010F                     LATD            equ	271	;# 
   110     0110                     LATE            equ	272	;# 
   111     0116                     BORCON          equ	278	;# 
   112     0117                     FVRCON          equ	279	;# 
   113     011D                     APFCON          equ	285	;# 
   114     018C                     ANSELA          equ	396	;# 
   115     018D                     ANSELB          equ	397	;# 
   116     018E                     ANSELC          equ	398	;# 
   117     018F                     ANSELD          equ	399	;# 
   118     0190                     ANSELE          equ	400	;# 
   119     0191                     PMADR           equ	401	;# 
   120     0191                     PMADRL          equ	401	;# 
   121     0192                     PMADRH          equ	402	;# 
   122     0193                     PMDAT           equ	403	;# 
   123     0193                     PMDATL          equ	403	;# 
   124     0194                     PMDATH          equ	404	;# 
   125     0195                     PMCON1          equ	405	;# 
   126     0196                     PMCON2          equ	406	;# 
   127     0197                     VREGCON         equ	407	;# 
   128     0199                     RCREG           equ	409	;# 
   129     019A                     TXREG           equ	410	;# 
   130     019B                     SP1BRG          equ	411	;# 
   131     019B                     SP1BRGL         equ	411	;# 
   132     019B                     SPBRG           equ	411	;# 
   133     019B                     SPBRGL          equ	411	;# 
   134     019C                     SP1BRGH         equ	412	;# 
   135     019C                     SPBRGH          equ	412	;# 
   136     019D                     RCSTA           equ	413	;# 
   137     019E                     TXSTA           equ	414	;# 
   138     019F                     BAUDCON         equ	415	;# 
   139     020D                     WPUB            equ	525	;# 
   140     0210                     WPUE            equ	528	;# 
   141     0211                     SSPBUF          equ	529	;# 
   142     0211                     SSP1BUF         equ	529	;# 
   143     0212                     SSPADD          equ	530	;# 
   144     0212                     SSP1ADD         equ	530	;# 
   145     0213                     SSPMSK          equ	531	;# 
   146     0213                     SSP1MSK         equ	531	;# 
   147     0214                     SSPSTAT         equ	532	;# 
   148     0214                     SSP1STAT        equ	532	;# 
   149     0215                     SSPCON1         equ	533	;# 
   150     0215                     SSPCON          equ	533	;# 
   151     0215                     SSP1CON1        equ	533	;# 
   152     0216                     SSPCON2         equ	534	;# 
   153     0216                     SSP1CON2        equ	534	;# 
   154     0217                     SSPCON3         equ	535	;# 
   155     0217                     SSP1CON3        equ	535	;# 
   156     0291                     CCPR1           equ	657	;# 
   157     0291                     CCPR1L          equ	657	;# 
   158     0292                     CCPR1H          equ	658	;# 
   159     0293                     CCP1CON         equ	659	;# 
   160     0298                     CCPR2           equ	664	;# 
   161     0298                     CCPR2L          equ	664	;# 
   162     0299                     CCPR2H          equ	665	;# 
   163     029A                     CCP2CON         equ	666	;# 
   164     0394                     IOCBP           equ	916	;# 
   165     0395                     IOCBN           equ	917	;# 
   166     0396                     IOCBF           equ	918	;# 
   167     0FE4                     STATUS_SHAD     equ	4068	;# 
   168     0FE5                     WREG_SHAD       equ	4069	;# 
   169     0FE6                     BSR_SHAD        equ	4070	;# 
   170     0FE7                     PCLATH_SHAD     equ	4071	;# 
   171     0FE8                     FSR0L_SHAD      equ	4072	;# 
   172     0FE9                     FSR0H_SHAD      equ	4073	;# 
   173     0FEA                     FSR1L_SHAD      equ	4074	;# 
   174     0FEB                     FSR1H_SHAD      equ	4075	;# 
   175     0FED                     STKPTR          equ	4077	;# 
   176     0FEE                     TOSL            equ	4078	;# 
   177     0FEF                     TOSH            equ	4079	;# 
   178                           
   179                           	psect	idataCOMMON
   180     07BA                     __pidataCOMMON:
   181                           
   182                           ;initializer for _digits
   183     07BA  34C0               	retlw	192
   184     07BB  34F9               	retlw	249
   185     07BC  34A4               	retlw	164
   186     07BD  34B0               	retlw	176
   187     07BE  3499               	retlw	153
   188     07BF  3492               	retlw	146
   189     07C0  3482               	retlw	130
   190     07C1  34F8               	retlw	248
   191     07C2  3480               	retlw	128
   192     07C3  3498               	retlw	152
   193     000C                     _PORTA          set	12
   194     008C                     _TRISA          set	140
   195     008D                     _TRISBbits      set	141
   196     010D                     _LATBbits       set	269
   197     018C                     _ANSELA         set	396
   198     018D                     _ANSELBbits     set	397
   199                           
   200                           	psect	cinit
   201     07F1                     start_initialization:	
   202                           ; #config settings
   203                           
   204     07F1                     __initialization:
   205                           
   206                           ; Initialize objects allocated to COMMON
   207     07F1  30BA               	movlw	low __pidataCOMMON
   208     07F2  0084               	movwf	4
   209     07F3  3087               	movlw	(high __pidataCOMMON)| (0+128)
   210     07F4  0085               	movwf	5
   211     07F5  3070               	movlw	low __pdataCOMMON
   212     07F6  0086               	movwf	6
   213     07F7  3000               	movlw	high __pdataCOMMON
   214     07F8  0087               	movwf	7
   215     07F9  300A               	movlw	10
   216     07FA  3187  27B4  3187   	fcall	init_ram
   217     07FD                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FD                     __end_of__initialization:
   221     07FD  0020               	movlb	0
   222     07FE  3187  2FC4         	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	dataCOMMON
   225     0070                     __pdataCOMMON:
   226     0070                     _digits:
   227     0070                     	ds	10
   228                           
   229                           	psect	inittext
   230     07B4                     init_ram:
   231     07B4  00FE               	movwf	btemp
   232     07B5                     initloop:
   233     07B5  0012               	moviw fsr0++
   234     07B6  001E               	movwi fsr1++
   235     07B7  0BFE               	decfsz	btemp,f
   236     07B8  2FB5               	goto	initloop
   237     07B9  3400               	retlw	0
   238                           
   239                           	psect	cstackCOMMON
   240     007A                     __pcstackCOMMON:
   241     007A                     ?_main:
   242     007A                     ??_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           ; 1 bytes @ 0x0
   247     007A                     	ds	1
   248     007B                     main@i:
   249                           
   250                           ; 2 bytes @ 0x1
   251     007B                     	ds	2
   252                           
   253                           	psect	maintext
   254     07C4                     __pmaintext:	
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 30 in file "newmain.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  i               2    1[COMMON] int 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : B1F/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   278 ;;Total ram usage:        3 bytes
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286     07C4                     _main:	
   287                           ;psect for function _main
   288                           
   289     07C4                     l549:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   292                           
   293                           
   294                           ;newmain.c: 31:     ANSELBbits.ANSB0=0;
   295     07C4  0023               	movlb	3	; select bank3
   296     07C5  100D               	bcf	13,0	;volatile
   297                           
   298                           ;newmain.c: 32:     TRISBbits.TRISB0=0;
   299     07C6  0021               	movlb	1	; select bank1
   300     07C7  100D               	bcf	13,0	;volatile
   301     07C8                     l551:
   302                           
   303                           ;newmain.c: 33:     ANSELA=0;
   304     07C8  0023               	movlb	3	; select bank3
   305     07C9  018C               	clrf	12	;volatile
   306                           
   307                           ;newmain.c: 34:     TRISA=0;
   308     07CA  0021               	movlb	1	; select bank1
   309     07CB  018C               	clrf	12	;volatile
   310     07CC                     l553:
   311                           
   312                           ;newmain.c: 35:     LATBbits.LATB0=1;
   313     07CC  0022               	movlb	2	; select bank2
   314     07CD  140D               	bsf	13,0	;volatile
   315                           
   316                           ;newmain.c: 36:     for(int i=0;i<10;i++){
   317     07CE  01FB               	clrf	main@i
   318     07CF  01FC               	clrf	main@i+1
   319     07D0                     l559:
   320                           
   321                           ;newmain.c: 37:     PORTA=digits[i];
   322     07D0  087B               	movf	main@i,w
   323     07D1  3E70               	addlw	(low (_digits| 0))& (0+255)
   324     07D2  0086               	movwf	6
   325     07D3  0187               	clrf	7
   326     07D4  0801               	movf	1,w
   327     07D5  0020               	movlb	0	; select bank0
   328     07D6  008C               	movwf	12	;volatile
   329     07D7                     l561:
   330                           
   331                           ;newmain.c: 38:     _delay((unsigned long)((100)*(4000000/4000.0)));}
   332     07D7  3082               	movlw	130
   333     07D8  00FA               	movwf	??_main
   334     07D9  30DE               	movlw	222
   335     07DA                     u27:
   336     07DA  0B89               	decfsz	9,f
   337     07DB  2FDA               	goto	u27
   338     07DC  0BFA               	decfsz	??_main,f
   339     07DD  2FDA               	goto	u27
   340     07DE                     l563:
   341     07DE  3001               	movlw	1
   342     07DF  07FB               	addwf	main@i,f
   343     07E0  3000               	movlw	0
   344     07E1  3DFC               	addwfc	main@i+1,f
   345     07E2                     l565:
   346     07E2  087C               	movf	main@i+1,w
   347     07E3  3A80               	xorlw	128
   348     07E4  00FA               	movwf	??_main
   349     07E5  3080               	movlw	128
   350     07E6  027A               	subwf	??_main,w
   351     07E7  1D03               	skipz
   352     07E8  2FEB               	goto	u15
   353     07E9  300A               	movlw	10
   354     07EA  027B               	subwf	main@i,w
   355     07EB                     u15:
   356     07EB  1C03               	skipc
   357     07EC  2FEE               	goto	u11
   358     07ED  2FEF               	goto	u10
   359     07EE                     u11:
   360     07EE  2FD0               	goto	l559
   361     07EF                     u10:
   362     07EF                     l23:
   363     07EF  3180  2802         	ljmp	start
   364     07F1                     __end_of_main:
   365     0003                     ___latbits      equ	3
   366     007E                     btemp           set	126	;btemp
   367     007E                     wtemp0          set	126
   368                           
   369                           	psect	config
   370                           
   371                           ;Config register CONFIG1 @ 0x8007
   372                           ;	Oscillator Selection
   373                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   374                           ;	Watchdog Timer Enable
   375                           ;	WDTE = OFF, WDT disabled
   376                           ;	Power-up Timer Enable
   377                           ;	PWRTE = OFF, PWRT disabled
   378                           ;	MCLR Pin Function Select
   379                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   380                           ;	Flash Program Memory Code Protection
   381                           ;	CP = OFF, Program memory code protection is disabled
   382                           ;	Brown-out Reset Enable
   383                           ;	BOREN = OFF, Brown-out Reset disabled
   384                           ;	Clock Out Enable
   385                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   386                           ;	Internal/External Switchover
   387                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   388                           ;	Fail-Safe Clock Monitor Enable
   389                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   390     8007                     	org	32775
   391     8007  09E4               	dw	2532
   392                           
   393                           ;Config register CONFIG2 @ 0x8008
   394                           ;	Flash Memory Self-Write Protection
   395                           ;	WRT = OFF, Write protection off
   396                           ;	Voltage Regulator Capacitor Enable bit
   397                           ;	VCAPEN = OFF, VCAP pin function disabled
   398                           ;	Stack Overflow/Underflow Reset Enable
   399                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   400                           ;	Brown-out Reset Voltage Selection
   401                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   402                           ;	Low-Power Brown Out Reset
   403                           ;	LPBOR = OFF, Low-Power BOR is disabled
   404                           ;	Low-Voltage Programming Enable
   405                           ;	LVP = ON, Low-voltage programming enabled
   406     8008                     	org	32776
   407     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      3      13     92.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Sep 14 15:46:49 2025

                     l23 07EF                       u10 07EF                       u11 07EE  
                     u15 07EB                       u27 07DA                      l551 07C8  
                    l561 07D7                      l553 07CC                      l563 07DE  
                    l565 07E2                      l549 07C4                      l559 07D0  
                    wreg 0009                     _main 07C4                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_main 007A                    _PORTA 000C                    _TRISA 008C  
                  main@i 007B                    wtemp0 007E          __initialization 07F1  
           __end_of_main 07F1                   ??_main 007A                   _ANSELA 018C  
                 _digits 0070             __pdataCOMMON 0070  __end_of__initialization 07FD  
         __pcstackCOMMON 007A               __pmaintext 07C4     end_of_initialization 07FD  
                init_ram 07B4                  initloop 07B5                _TRISBbits 008D  
          __pidataCOMMON 07BA      start_initialization 07F1                ___latbits 0003  
               _LATBbits 010D               _ANSELBbits 018D  
